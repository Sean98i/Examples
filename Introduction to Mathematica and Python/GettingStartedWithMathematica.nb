(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    135172,       3354]
NotebookOptionsPosition[    108995,       2932]
NotebookOutlinePosition[    109396,       2948]
CellTagsIndexPosition[    109353,       2945]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Getting Started with Mathematica", "Title",
 CellChangeTimes->{{3.7921616869918423`*^9, 3.7921616935960608`*^9}, {
  3.820060661512351*^9, 
  3.820060668443532*^9}},ExpressionUUID->"7ab76728-271d-441a-8704-\
0f41514e9f23"],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is a powerful technical computing system with an associated programming \
language, the ",
 StyleBox["Wolfram language",
  FontSlant->"Italic"],
 ". In this notebook we will learn the basics of using Mathematica as a tool \
to study and solve Mathematical problems."
}], "Text",
 CellChangeTimes->{{3.7921616985786667`*^9, 3.792161740350642*^9}, {
   3.792162700128433*^9, 3.7921627123232403`*^9}, {3.79239557221318*^9, 
   3.792395591696068*^9}, 3.820060681268405*^9, {3.82006076924575*^9, 
   3.820060861462494*^9}, {3.8200609948579817`*^9, 3.820061094037202*^9}, {
   3.820062489155574*^9, 3.820062490166896*^9}, {3.820128484821959*^9, 
   3.8201284865531588`*^9}},ExpressionUUID->"734a056c-952c-4235-8b14-\
6b468f90661c"],

Cell[CellGroupData[{

Cell["Interacting with Mathematica", "Section",
 CellChangeTimes->{{3.820062525998767*^9, 
  3.820062529756078*^9}},ExpressionUUID->"e9c80d38-e032-46f2-919e-\
beb1437b2280"],

Cell[CellGroupData[{

Cell["Front End and Kernel", "Subsection",
 CellChangeTimes->{{3.820063103898176*^9, 
  3.820063106901658*^9}},ExpressionUUID->"5421538e-0181-4f73-a203-\
870bf6bf668a"],

Cell["Mathematica has two parts:", "Text",
 CellChangeTimes->{
  3.8200610981233597`*^9, {3.8200625381487703`*^9, 
   3.820062558601411*^9}},ExpressionUUID->"b8af9a3e-131e-43d9-b5ec-\
9d3b84e0f1a5"],

Cell[TextData[{
 "A ",
 StyleBox["Front End",
  FontWeight->"Bold"],
 " that provides the user interface you are interacting with right now. The \
Front End allows you to open, edit and run a ",
 StyleBox["Notebook",
  FontWeight->"Bold"],
 " such as the one we are currently using."
}], "ItemNumbered",
 CellChangeTimes->{{3.8200625734297523`*^9, 3.820062583982285*^9}, {
  3.82006278406457*^9, 
  3.8200628123677893`*^9}},ExpressionUUID->"ce0e1982-25cc-43d7-ac9b-\
7060e600e853"],

Cell[TextData[{
 "A ",
 StyleBox["Kernel",
  FontWeight->"Bold"],
 " that handles commands sent from the Front End and returns results to the \
Front End."
}], "ItemNumbered",
 CellChangeTimes->{{3.8200625734297523`*^9, 3.8200626144017076`*^9}, {
  3.820128534412363*^9, 
  3.820128536895887*^9}},ExpressionUUID->"f4274cc8-8e8e-451c-9595-\
c72f788a586f"],

Cell[TextData[{
 "A ",
 StyleBox["Notebook",
  FontWeight->"Bold"],
 " is just a file containing a hierarchy of cells. You can Open/Close/Save \
notebooks in the standard way using the ",
 StyleBox["File",
  FontWeight->"Bold"],
 " menu item."
}], "Text",
 CellChangeTimes->{{3.820063151879096*^9, 3.8200632227546587`*^9}, {
  3.8201285607360373`*^9, 
  3.820128562401029*^9}},ExpressionUUID->"bec3827a-cf8c-4af9-8335-\
aacb2c478b04"],

Cell["\<\
Notebooks store all of the input and output but do not save the state of the \
Kernel. This has several consequences:\
\>", "Text",
 CellChangeTimes->{{3.820063242969739*^9, 
  3.820063391058722*^9}},ExpressionUUID->"79d4e2e5-f43e-42da-aa8c-\
5f0d4e417aef"],

Cell["\<\
When you close a notebook and reopen it without quitting Mathematica your \
Kernel will still be there with the same state as before.\
\>", "Item",
 CellChangeTimes->{{3.8200633974026413`*^9, 
  3.8200634162143173`*^9}},ExpressionUUID->"dd3ed9f4-727a-47c3-848d-\
bface158a38e"],

Cell["\<\
If you quit Mathematica (which also quits the Kernel) and reopen it later, \
any of the calculations and definitions you created but did not output to the \
notebook will not be retained.\
\>", "Item",
 CellChangeTimes->{{3.8200633974026413`*^9, 
  3.820063441032769*^9}},ExpressionUUID->"eb22c8c6-d770-4392-bc4c-\
397c13256ed0"],

Cell["\<\
If you have multiple notebooks open at once, by default they all talk to the \
same Kernel and will share definitions and values for functions and variables.\
\>", "Item",
 CellChangeTimes->{{3.8200633974026413`*^9, 
  3.820063473766189*^9}},ExpressionUUID->"e96b83a8-4959-4ed7-88fb-\
1654daaa4242"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hello World", "Subsection",
 CellChangeTimes->{{3.820063113426895*^9, 
  3.8200631157553596`*^9}},ExpressionUUID->"7478486d-6e17-4325-b0b3-\
9c67e75ab5b7"],

Cell["\<\
To get started we will issue our first command to the Front End. Place the \
cursor in the line below and use Shift+Return to send it to the Kernel to be \
executed. The result returned from the Kernel will be printed on the \
following line\
\>", "Text",
 CellChangeTimes->{{3.820062626642295*^9, 
  3.820062702174027*^9}},ExpressionUUID->"bf3b78f1-91b0-49b0-b97f-\
9e8527de615e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "+", "1"}]], "Input",
 CellChangeTimes->{{3.82006267466077*^9, 3.820062675354623*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"d42508b4-5994-410d-b383-2904339da7d1"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.820227116241084*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"dccbe99b-02cd-4efd-8c31-b3c26b6ca534"]
}, Open  ]],

Cell[TextData[{
 "Notice that input the line is labeled with In[1] and the output line is \
labeled with Out[1]. Notebooks are divided into ",
 StyleBox["Cells",
  FontWeight->"Bold"],
 " of different types. Possible types include Input, Output, Text, Section, \
etc. You can change the type of a cell in the ",
 StyleBox["Format",
  FontWeight->"Bold"],
 " menu bar item."
}], "Text",
 CellChangeTimes->{{3.820062727227537*^9, 3.8200627711268177`*^9}, {
  3.820062896994569*^9, 
  3.820062988523766*^9}},ExpressionUUID->"01978aac-ac80-4d4c-ab5f-\
9aefb723ff99"],

Cell["\<\
We can prevent the output from being created by putting a semicolon at the \
end of a line:\
\>", "Text",
 CellChangeTimes->{{3.820063816914805*^9, 3.820063831665045*^9}, {
  3.820128608842737*^9, 
  3.82012860967388*^9}},ExpressionUUID->"702a1329-ef71-4729-994f-\
3e0b50d39993"],

Cell[BoxData[
 RowBox[{
  RowBox[{"1", "+", "1"}], ";"}]], "Input",
 CellChangeTimes->{{3.820063832432063*^9, 3.820063833735503*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"9c52a68b-a5c4-47c1-b65b-2d4b2d30962f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Inserting new lines", "Subsection",
 CellChangeTimes->{{3.820063130818405*^9, 
  3.8200631362532063`*^9}},ExpressionUUID->"d15ddccd-be87-4cb6-9b6a-\
1b9811557e19"],

Cell["\<\
To insert a new cell anywhere, just place the cursor between two existing \
cells, click, and then start typing. Try adding a new input cell between this \
paragraph and the next one.\
\>", "Text",
 CellChangeTimes->{{3.820062990019492*^9, 3.820063031869664*^9}, {
  3.820063125126761*^9, 
  3.82006312559828*^9}},ExpressionUUID->"64f3875d-e334-49a1-8e66-\
12ea0f98f0b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"3", "+", "3"}]], "Input",
 CellChangeTimes->{{3.820227224959397*^9, 3.820227235602913*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"c21aa4bc-da52-49b7-8fcb-b82806520793"],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.820227236303031*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"2f4dc688-cfa3-4e82-afcd-f43d6c495363"]
}, Open  ]],

Cell[TextData[{
 "To delete a cell, select it on the right and press ",
 StyleBox["Backspace",
  FontWeight->"Bold"],
 ". Try deleting the new cell you created in the last step."
}], "Text",
 CellChangeTimes->{{3.820063037720175*^9, 3.820063079396941*^9}, {
  3.8202272838917975`*^9, 
  3.8202272847585907`*^9}},ExpressionUUID->"62a5f77a-6853-4a62-bbcc-\
9cb5fdab217d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Help", "Subsection",
 CellChangeTimes->{{3.8200634944215927`*^9, 
  3.820063495051475*^9}},ExpressionUUID->"4b0e70db-dd22-4092-bf8c-\
4f682ee3cf32"],

Cell[TextData[{
 "There are several ways to get help with using Mathematica. The \
Documentation Centre can be found under the menu: ",
 StyleBox["Help",
  FontWeight->"Bold"],
 " ",
 Cell[BoxData[
  FormBox["\[Rule]", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "be9014fa-8de2-4a44-a875-b8b7482633e7"],
 " ",
 StyleBox["Wolfram Documentation.",
  FontWeight->"Bold"],
 " This provides extensive documentation on all aspects of Mathematica. You \
can also find a quick explanation of a given function using \
\[OpenCurlyQuote]?\[CloseCurlyQuote]. For example, try running the following"
}], "Text",
 CellChangeTimes->{{3.820063496827436*^9, 3.820063577052074*^9}, {
  3.8201286394530153`*^9, 
  3.820128651906653*^9}},ExpressionUUID->"8f8c6abc-5c96-4602-ace3-\
c65147ee6b59"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Simplify"}]], "Input",
 CellChangeTimes->{{3.820063578967944*^9, 3.8200635809345512`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"5d452a56-8110-4773-ba9c-fb7106d637db"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Simplify",
              ButtonNote->"paclet:ref/Simplify"],
             "\"paclet:ref/Simplify\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Simplify\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) performs a sequence of \
algebraic and other transformations on \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\
\\\"]\\) and returns the simplest form it finds. \
\\n\\!\\(\\*RowBox[{\\\"Simplify\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"assum\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) does simplification \
using assumptions. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Simplify", 
                    "paclet:ref/Simplify", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Simplify.html"]\
, None}, "http://reference.wolfram.com/language/ref/Simplify.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"Assumptions", "\[RuleDelayed]", "$Assumptions"}]},
                    {
                    RowBox[{"ComplexityFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ExcludedForms", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"TimeConstraint", "\[Rule]", "300"}]},
                    {
                    RowBox[{
                    "TransformationFunctions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Trig", "\[Rule]", "True"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "6", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"Assumptions", "\[RuleDelayed]", "$Assumptions"}],
                     "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "6", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Simplify\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Simplify",
              ButtonNote->"paclet:ref/Simplify"],
             "\"paclet:ref/Simplify\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Simplify\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) performs a sequence of \
algebraic and other transformations on \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\
\\\"]\\) and returns the simplest form it finds. \
\\n\\!\\(\\*RowBox[{\\\"Simplify\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"assum\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) does simplification \
using assumptions. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Simplify\", \"[\", StyleBox[\"expr\", \"TI\"], \"]\"}]\) \
performs a sequence of algebraic and other transformations on \!\(\*StyleBox[\
\"expr\", \"TI\"]\) and returns the simplest form it finds. \n\
\!\(\*RowBox[{\"Simplify\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\", \
StyleBox[\"assum\", \"TI\"]}], \"]\"}]\) does simplification using \
assumptions. ", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/Simplify", "Web" -> 
      "http://reference.wolfram.com/language/ref/Simplify.html"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     Assumptions :> $Assumptions, ComplexityFunction -> Automatic, 
      ExcludedForms -> {}, TimeConstraint -> 300, TransformationFunctions -> 
      Automatic, Trig -> True}, "Attributes" -> {Protected}, "FullName" -> 
    "System`Simplify"], False]]], "Output",
 CellChangeTimes->{3.8202272949867277`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"2ea10937-3d42-4838-ac74-a9791098dfbc"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The basics", "Section",
 CellChangeTimes->{{3.792395558645293*^9, 
  3.7923955596565247`*^9}},ExpressionUUID->"86634427-6068-4a28-8476-\
2cfdaae8d32f"],

Cell[CellGroupData[{

Cell["Variables (Symbols)", "Subsection",
 CellChangeTimes->{{3.820063612457793*^9, 3.820063615494812*^9}, {
  3.820064022972602*^9, 
  3.820064024682707*^9}},ExpressionUUID->"c94d086a-4f32-4901-85c8-\
169906038d0e"],

Cell[TextData[{
 "In Mathematica, variables are called ",
 StyleBox["Symbols",
  FontWeight->"Bold"],
 " (there is a good reason for this as symbols are much more powerful than \
variables in other languages, but we will not worry about that for now). The \
names of symbols can contain capital and lower case letters or numbers (but \
must start with a letter or $)."
}], "Text",
 CellChangeTimes->{{3.820063619792152*^9, 3.8200636666038322`*^9}, {
  3.8200637102431717`*^9, 
  3.8200637506981583`*^9}},ExpressionUUID->"1bd4dc45-46e4-43fa-ac2e-\
b363f1b03673"],

Cell[CellGroupData[{

Cell["Assigning values to Symbols", "Subsubsection",
 CellChangeTimes->{{3.820063682905723*^9, 3.820063702717073*^9}, {
  3.820064026516385*^9, 
  3.82006402731536*^9}},ExpressionUUID->"2c1f174d-ebb1-45a5-b841-\
43a4013d3bbf"],

Cell["\<\
To assign a value to a Symbol, we can use a single = sign. Let\
\[CloseCurlyQuote]s start by inserting a new line and using it to set \
\[OpenCurlyDoubleQuote]a\[CloseCurlyDoubleQuote] to have the value \
\[OpenCurlyDoubleQuote]100\[CloseCurlyDoubleQuote].\
\>", "Text",
 CellChangeTimes->{{3.820063759451274*^9, 3.820063787247559*^9}, {
  3.8201286759945374`*^9, 
  3.820128768006915*^9}},ExpressionUUID->"dbee15fe-0790-49fd-8fd8-\
c1a7cab8add3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", " ", "=", " ", "100"}], ";"}]], "Input",
 CellChangeTimes->{{3.820227347056673*^9, 3.8202273507775216`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"ead05ce2-3694-48d0-8f12-f795d8c85fcb"],

Cell["\<\
Symbols can store numbers (integers, decimals, complex, rational) and strings \
(using \[OpenCurlyDoubleQuote]double quotes\[CloseCurlyDoubleQuote]) but can \
also be used to store other things. We will see more about this later.\
\>", "Text",
 CellChangeTimes->{{3.820063799614217*^9, 3.820063807342763*^9}, {
  3.820063848214507*^9, 3.82006387521364*^9}, {3.8200639552363358`*^9, 
  3.8200639601877747`*^9}, {3.820066227363736*^9, 
  3.820066241065751*^9}},ExpressionUUID->"b14ee7a6-6efb-4924-b34b-\
16e95dcbdf3e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Printing the value of a Symbol", "Subsubsection",
 CellChangeTimes->{{3.820063994263032*^9, 3.820064021162045*^9}, 
   3.820080241563552*^9},ExpressionUUID->"823d59df-934e-41dc-a8cc-\
b180b9265b30"],

Cell["\<\
We can output the value of a Symbol by running an input cell without the \
semicolon at the end. Try it.\
\>", "Text",
 CellChangeTimes->{{3.8200639995725393`*^9, 3.8200640467104263`*^9}, {
  3.8200645016629066`*^9, 
  3.820064505250966*^9}},ExpressionUUID->"2bf81546-1c17-47af-aa8f-\
7d9778cd6eb7"],

Cell[CellGroupData[{

Cell[BoxData["a"], "Input",
 CellChangeTimes->{3.8202273632204227`*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"72585ea3-0aaf-4480-b4f4-a3a418a39c79"],

Cell[BoxData["100"], "Output",
 CellChangeTimes->{3.8202273640297556`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"30dec766-9d31-4d09-a77c-93856c978f8e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mathematical operations", "Subsection",
 CellChangeTimes->{{3.820063891121879*^9, 
  3.820063896766738*^9}},ExpressionUUID->"368550de-5d09-415d-a303-\
7a2ce5fcdbb3"],

Cell["\<\
We can perform the standard Mathematical operations using the operators +, -, \
*, /, ^ and (). Try using Mathematica to do some calculations using these \
operators.\
\>", "Text",
 CellChangeTimes->{{3.820063899503216*^9, 3.820063983574872*^9}, {
  3.8200641262424793`*^9, 
  3.820064126744604*^9}},ExpressionUUID->"84abb4e1-c55c-444f-a2f6-\
99abe2b41ade"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"2", "*", 
      RowBox[{"(", 
       RowBox[{"3", "+", "4"}], ")"}]}], "-", "7"}], ")"}], "^", "2"}], "/", 
  "11"}]], "Input",
 CellChangeTimes->{{3.820227389590731*^9, 3.820227412978874*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"bf8566ce-65b4-4d13-ba89-5110a11adf22"],

Cell[BoxData[
 FractionBox["64", "11"]], "Output",
 CellChangeTimes->{3.820227417218772*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"569de6e2-d772-4bad-b0cc-75c99183a9a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{"3", "+", "4"}], ")"}]}], "-", "7"}], ")"}], "^", "2"}], "/", 
  "11"}]], "Input",
 CellChangeTimes->{3.820227461249058*^9},
 CellLabel->"In[8]:=",ExpressionUUID->"316cc436-e90d-4a1a-9f71-dcf3fe5b8306"],

Cell[BoxData[
 FractionBox["64", "11"]], "Output",
 CellChangeTimes->{3.82022746241892*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"f2121a38-d66a-458f-90d8-451d784d8a5e"]
}, Open  ]],

Cell["\<\
Note that sometimes we have to be careful about the order of operations. \
Mathematica follows the standard mathematical precedence rules that we learn \
in school (BOMDAS).\
\>", "Text",
 CellChangeTimes->{{3.8200648288057003`*^9, 3.820064878283408*^9}, {
  3.820128791519261*^9, 
  3.820128797324278*^9}},ExpressionUUID->"13b8f514-a265-4fe8-a654-\
cbaaf977e8af"],

Cell[TextData[{
 "We can also input in a user-friendly mathematical notation using Ctrl-/ for \
divide, Ctrl-6 for power, Ctrl-2 for square root. Try to figure out how to \
write the following: ",
 Cell[BoxData[
  FormBox[
   SqrtBox[
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     FractionBox[
      SuperscriptBox["y", "2"], 
      SuperscriptBox["z", "4"]]}]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "2b69e21e-936c-4a32-847b-e01f91a357ba"]
}], "Text",
 CellChangeTimes->{{3.820064416307242*^9, 
  3.8200644886127253`*^9}},ExpressionUUID->"9848d03d-18f9-45c5-8067-\
bce72cf959cc"],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   SuperscriptBox["x", "2"], "+", " ", 
   FractionBox[
    SuperscriptBox["y", "2"], 
    SuperscriptBox["z", "4"]]}]]], "Input",
 CellChangeTimes->{{3.8202275351043463`*^9, 
  3.820227585872089*^9}},ExpressionUUID->"74f6b4dc-0df2-472b-9fbc-\
b4c2436453dc"],

Cell["\<\
There are lots of other useful shortcuts for input that we will learn along \
the way, many of which can be accessed using the Esc key. For example, try \
creating an input cell and typing Esc-pi-Esc\
\>", "Text",
 CellChangeTimes->{{3.820064580267529*^9, 3.820064633061418*^9}, {
  3.8201288723399897`*^9, 
  3.8201288760069237`*^9}},ExpressionUUID->"0ed675c5-dfdb-4b3f-a139-\
63133b3e0c36"],

Cell[CellGroupData[{

Cell[BoxData["\[Pi]"], "Input",
 CellChangeTimes->{{3.8202276124424906`*^9, 3.820227616407263*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"49321356-04a1-4a8c-a4ad-b1df0cbf6893"],

Cell[BoxData["\[Pi]"], "Output",
 CellChangeTimes->{3.820227620526059*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"90032d1f-88c9-45b3-a7e1-dbb43dfa8f81"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8202277305482254`*^9, 
  3.820227746072878*^9}},ExpressionUUID->"5e035e13-a1a2-4a84-a60b-\
c54889d003a4"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8202277584287786`*^9, 
  3.8202277584498615`*^9}},ExpressionUUID->"8f74480e-f71f-4b2e-ad77-\
94bb75734808"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["  Numerical evaluation", "Section",
 CellChangeTimes->{{3.820064699304719*^9, 3.820064702027172*^9}, {
  3.820227770252161*^9, 
  3.8202277721814847`*^9}},ExpressionUUID->"8c2164c1-c1b1-4d19-ad2e-\
4c9c2b262d6b"],

Cell["\<\
When we type \[Pi], we get the mathematical constant pi. Since \[Pi] in an \
irrational number, Mathematica will just leave it as \[Pi] unless we tell it \
that we want a numerical approximation to a given number of digits. We can do \
this using N[\[Pi]] for a machine precision approximation or N[\[Pi], digits] \
for an approximation to \[OpenCurlyQuote]digits\[CloseCurlyQuote] decimal \
places. Try evaluating \[Pi] to 1000 digits\
\>", "Text",
 CellChangeTimes->{{3.8200646638665743`*^9, 
  3.820064800883081*^9}},ExpressionUUID->"7894d0e7-64f2-434a-acc6-\
2a9dd7fd3321"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", "\[Pi]", "]"}]], "Input",
 CellChangeTimes->{{3.820227781913542*^9, 3.8202278044893084`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"4a12faa6-e6e6-47e6-8964-a34ec469af5c"],

Cell[BoxData["3.141592653589793`"], "Output",
 CellChangeTimes->{3.8202278075182905`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"15d5c4dc-64f6-454b-8699-de96e34f5a72"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"\[Pi]", ",", "16"}], "]"}]], "Input",
 CellChangeTimes->{{3.8202278181941757`*^9, 3.8202278418875265`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"1c4d0289-ab52-4cf2-a1e5-ad1344cfc9fe"],

Cell[BoxData["3.14159265358979323846264338327950419984`16."], "Output",
 CellChangeTimes->{3.820227858152975*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"56118afc-dd53-4caf-bacc-8907f2cb0476"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions", "Subsection",
 CellChangeTimes->{{3.8200649090532303`*^9, 
  3.820064911910174*^9}},ExpressionUUID->"7a9dc07e-5aed-42be-8031-\
6789c9a23d4f"],

Cell[TextData[{
 "Notice in the previous example that we had square brackets after the N. In \
Mathematica, square brackets (",
 StyleBox["not ",
  FontWeight->"Bold"],
 "parenthesis - that is used for precedence) ",
 "are used for functions and all built-in functions start with a capital \
letter. Functions with multiple arguments have their arguments separated by a \
comma."
}], "Text",
 CellChangeTimes->{{3.820064921911598*^9, 3.820064988490182*^9}, {
  3.820065021881233*^9, 3.820065040389264*^9}, {3.820065094669919*^9, 
  3.820065099979607*^9}, {3.8201289635553513`*^9, 
  3.820128973781331*^9}},ExpressionUUID->"7e35aaeb-81da-4894-97ef-\
1f0231f07bf5"],

Cell["Here are a few examples:", "Text",
 CellChangeTimes->{3.820065042098309*^9, 
  3.820065093030498*^9},ExpressionUUID->"fd9b6d07-420f-4bf5-aa03-\
f5c81ea4719d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "[", "4", "]"}]], "Input",
 CellChangeTimes->{{3.8202279155166683`*^9, 3.820227919041795*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"b1183433-cc5a-4b51-81eb-36b4aadf6f6b"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.820227920572305*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"b1c34fd3-7740-44a0-a86d-d590e14f3b9b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sin", "[", "\[Pi]", "]"}]], "Input",
 CellChangeTimes->{{3.820227924198784*^9, 3.8202279326365957`*^9}, {
  3.820227987318007*^9, 3.820227988443697*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"2caedf12-04f9-4479-acc7-ff94a46814bb"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.82022793452621*^9, 3.820227989634449*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"3cf9f593-b017-4e4e-a857-acf9ceddb714"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cos", "[", "\[Pi]", "]"}]], "Input",
 CellChangeTimes->{{3.820227946091629*^9, 3.8202279525696926`*^9}, {
  3.8202279926066165`*^9, 3.820227992946656*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"ad671337-2ba9-4132-8763-d044ad6ed284"],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{3.8202279940905037`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"4bafde16-820c-4a85-8cd4-29cdfc57215f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Exp", "[", "i\[Pi]", "]"}]], "Input",
 CellChangeTimes->{{3.820228004115954*^9, 3.8202280197806797`*^9}, {
  3.8202281866331673`*^9, 3.820228196604122*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"f8f023f8-70cb-4d76-81e5-56b960816e61"],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", "i\[Pi]"]], "Output",
 CellChangeTimes->{
  3.820228012580254*^9, {3.82022819126547*^9, 3.82022819896437*^9}},
 CellLabel->"Out[28]=",ExpressionUUID->"4c42ee7f-270e-4b26-98cf-04493fee512b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Log", "[", 
  RowBox[{"2", ",", "8"}], "]"}]], "Input",
 CellChangeTimes->{{3.8202280257523146`*^9, 3.8202280304379396`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"383ea96c-6191-4950-b6ff-66db2af8632f"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.820228031948741*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"c8f25d80-c19a-4e5c-bc73-56132520c693"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Defining mathematical expressions", "Subsection",
 CellChangeTimes->{{3.792161813971262*^9, 3.792161819213071*^9}, {
  3.82006417689334*^9, 
  3.820064181434153*^9}},ExpressionUUID->"e1f91c5d-7a97-4f2c-9852-\
2bd80dde1d2c"],

Cell["\<\
We said previously that Symbols can be used to store more than just numbers. \
One common use is to use them to store mathematical expressions. For, \
example, we could have the following definitions\
\>", "Text",
 CellChangeTimes->{{3.820064183237043*^9, 
  3.8200642415348587`*^9}},ExpressionUUID->"9f7b82ec-80d0-49da-a199-\
c49021385ac5"],

Cell["We can then use these in place of the full expression:", "Text",
 CellChangeTimes->{{3.820064337083663*^9, 
  3.8200643456195*^9}},ExpressionUUID->"5f211534-7d02-4040-8bdd-48b645100696"],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", " ", "=", " ", 
   FractionBox[
    RowBox[{"(", 
     RowBox[{"x", "+", 
      RowBox[{"x", "^", "2"}]}], ")"}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"xSin", "[", "y", "]"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"xCos", "[", "y", "]"}], "2"]}]]}], ";"}]], "Input",
 CellChangeTimes->{{3.8202280512934012`*^9, 3.8202280937473955`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"987fdc80-64a8-403d-9232-7c3efe774c7d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"b", " ", "=", " ", 
   RowBox[{
    SuperscriptBox["x", "2"], " ", "+", " ", "1"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8202280965345855`*^9, 3.820228108657669*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"ebc32562-fe4b-4fa9-a427-94ea3ed705dd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "+", 
  RowBox[{"3", 
   RowBox[{
    RowBox[{"Tan", "[", "y", "]"}], "^", "2"}]}]}]], "Input",
 CellChangeTimes->{{3.82022811342666*^9, 3.8202281200135727`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"3b15c00c-a990-4789-b6bf-4047f02e6970"],

Cell[BoxData[
 RowBox[{
  RowBox[{"3", " ", 
   SuperscriptBox[
    RowBox[{"Tan", "[", "y", "]"}], "2"]}], "+", 
  FractionBox[
   RowBox[{"x", "+", 
    SuperscriptBox["x", "2"]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"xCos", "[", "y", "]"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"xSin", "[", "y", "]"}], "2"]}]]}]], "Output",
 CellChangeTimes->{3.8202281218074155`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"3be7f7d1-141a-42a5-b6a4-7948cbab316d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"b", "-", "1"}]], "Input",
 CellChangeTimes->{{3.820228131084383*^9, 3.820228131712931*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"3e6121ed-f80f-4ba4-a449-e13ef7f97da6"],

Cell[BoxData[
 SuperscriptBox["x", "2"]], "Output",
 CellChangeTimes->{3.820228132571848*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"cab37973-8091-4778-a922-8a35123fbb47"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Substituting values into an expression with replacement rules\
\>", "Subsection",
 CellChangeTimes->{{3.820066178458828*^9, 3.820066186435251*^9}, {
  3.820125499616302*^9, 
  3.820125508750209*^9}},ExpressionUUID->"4d5e8ec3-1c96-42e9-b918-\
4e3e75774013"],

Cell["\<\
Note that the previous expressions were given in terms of undefined symbols \
\[OpenCurlyDoubleQuote]x\[CloseCurlyDoubleQuote] and \[OpenCurlyDoubleQuote]y\
\[CloseCurlyDoubleQuote]. Why would we want to form an expression with \
undefined symbols? A very common reason is that undefined symbols can be \
substituted out at any later time:\
\>", "Text",
 CellChangeTimes->{{3.820125525785173*^9, 3.8201255619651117`*^9}, {
  3.8201290506088867`*^9, 
  3.82012905751482*^9}},ExpressionUUID->"d4d1d2f6-cf19-4cf9-b0e7-\
f7d8b83f02a0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", " ", "/.", " ", 
  RowBox[{"x", " ", "\[Rule]", " ", "3"}]}]], "Input",
 CellChangeTimes->{{3.8202282085684404`*^9, 3.8202282606027627`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"4613abdf-763c-43ef-b476-8e0d1ff1db30"],

Cell[BoxData[
 FractionBox["12", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"xCos", "[", "y", "]"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"xSin", "[", "y", "]"}], "2"]}]]], "Output",
 CellChangeTimes->{3.8202282624163275`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"d6236470-293b-44d4-8874-ad9b5577ff33"]
}, Open  ]],

Cell[TextData[{
 "Here, the arrow above is made by typing a minus sign (-) and then a greater \
than sign ( > ) right next to each other and then a space. Watch closely when \
you do it - ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " automatically converts it to a right arrow. "
}], "Text",
 CellChangeTimes->{{3.524399855995175*^9, 3.524399860089864*^9}, {
  3.66529445838544*^9, 3.66529447366378*^9}, {3.665294662237417*^9, 
  3.6652946830289707`*^9}, {3.665296766549053*^9, 
  3.665296775361477*^9}},ExpressionUUID->"74a13c6c-f0e9-405a-b6f6-\
3349016db280"],

Cell[TextData[{
 "The replacement of the Symbol \[OpenCurlyDoubleQuote]x\
\[CloseCurlyDoubleQuote] with an actual value was performed by a combination \
of /. and  ...  ->  ... ; both are needed. The /. is a shorthand syntax \
equivalent to ReplaceAll (look it up in the documentation) and the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"...", "\[Rule]", "..."}], TraditionalForm]],ExpressionUUID->
  "5c5a9b6b-2787-47a1-9f31-2cfc9791783e"],
 " is a Rule (again, look it up in the documentation)."
}], "Text",
 CellChangeTimes->{{3.524399963671386*^9, 3.524399994389656*^9}, {
  3.524400028475451*^9, 3.52440003741605*^9}, {3.524400074788528*^9, 
  3.524400115758629*^9}, {3.524404787112228*^9, 3.524404843442276*^9}, {
  3.665294689172782*^9, 3.665294782794715*^9}, {3.820125592912034*^9, 
  3.8201255987730083`*^9}, {3.8201258020019207`*^9, 
  3.820125807604841*^9}},ExpressionUUID->"7e6c0d68-e025-432e-86db-\
78b445e65149"],

Cell["\<\
It is important to understand that this substitution has not changed the \
value of \[OpenCurlyDoubleQuote]a\[CloseCurlyDoubleQuote] or set a value for \
\[OpenCurlyDoubleQuote]x\[CloseCurlyDoubleQuote] (because neither was set \
using \[OpenCurlyDoubleQuote]=\[CloseCurlyDoubleQuote])\
\>", "Text",
 CellChangeTimes->{{3.524399878234377*^9, 3.524399891585471*^9}, {
  3.5243999253546867`*^9, 3.524399930331647*^9}, {3.524400124560733*^9, 
  3.524400125755831*^9}, {3.524404850935804*^9, 3.5244048514289513`*^9}, {
  3.665296784042992*^9, 3.6652967841772203`*^9}, {3.665297663132291*^9, 
  3.6652976796489477`*^9}, {3.820125617042583*^9, 3.8201256397003727`*^9}, {
  3.820125693339366*^9, 3.820125737259375*^9}, {3.820125790605953*^9, 
  3.8201257964219418`*^9}, {3.820129087777466*^9, 
  3.820129094953671*^9}},ExpressionUUID->"953c999c-9aab-493e-a080-\
7df09b5500d9"],

Cell[CellGroupData[{

Cell[BoxData["a"], "Input",
 CellChangeTimes->{3.8202283019089622`*^9},
 CellLabel->"In[30]:=",ExpressionUUID->"a46f798d-0c28-46ad-93e6-59ff1228f191"],

Cell[BoxData[
 FractionBox[
  RowBox[{"x", "+", 
   SuperscriptBox["x", "2"]}], 
  RowBox[{
   SuperscriptBox[
    RowBox[{"xCos", "[", "y", "]"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"xSin", "[", "y", "]"}], "2"]}]]], "Output",
 CellChangeTimes->{3.820228303292676*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"66508cd8-3564-4cf7-8433-e327cd96f52e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["x"], "Input",
 CellChangeTimes->{3.820228307392331*^9},
 CellLabel->"In[31]:=",ExpressionUUID->"3b00ffec-252d-480e-a361-8ef8bc16b34e"],

Cell[BoxData["x"], "Output",
 CellChangeTimes->{3.8202283079503975`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"35fdc202-5c2f-4fd4-9a9e-9c1ab2d626f8"]
}, Open  ]],

Cell["\<\
Instead the substitution merely took the definition for \
\[OpenCurlyDoubleQuote]a\[CloseCurlyDoubleQuote] in terms of \
\[OpenCurlyDoubleQuote]x\[CloseCurlyDoubleQuote] and \[OpenCurlyDoubleQuote]y\
\[CloseCurlyDoubleQuote], replaced \[OpenCurlyDoubleQuote]x\
\[CloseCurlyDoubleQuote] with \
\[OpenCurlyDoubleQuote]3\[CloseCurlyDoubleQuote], and returned the result.\
\>", "Text",
 CellChangeTimes->{{3.524399901473504*^9, 3.5243999387244673`*^9}, {
  3.524400138569202*^9, 3.5244001714982347`*^9}, {3.52440486611377*^9, 
  3.5244048781235867`*^9}, {3.5244058519735727`*^9, 3.524405868756281*^9}, {
  3.665294884495248*^9, 3.665294933542729*^9}, {3.820125644447728*^9, 
  3.820125662695257*^9}, {3.820125743929823*^9, 
  3.8201257794122353`*^9}},ExpressionUUID->"a38713ae-45b2-4ec6-a048-\
8171ce24e2b2"],

Cell["\<\
We can do several substitutions at the same time by giving them as a list:\
\>", "Text",
 CellChangeTimes->{{3.505504236807756*^9, 3.505504322635438*^9}, {
  3.505508821479714*^9, 3.5055088259335947`*^9}, {3.5056651676650057`*^9, 
  3.5056651743960257`*^9}, {3.505728590442767*^9, 3.505728593726336*^9}, {
  3.524398279289702*^9, 3.524398281018557*^9}, {3.524398691769951*^9, 
  3.524398741086588*^9}, {3.524404900511965*^9, 3.5244049088204613`*^9}, {
  3.6652949440845737`*^9, 3.6652949543486834`*^9}, {3.820129103778831*^9, 
  3.820129105050812*^9}},ExpressionUUID->"db91b246-408c-4915-bd05-\
b415b5a185ed"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", " ", "/.", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", " ", "\[Rule]", " ", "3"}], ",", 
    RowBox[{"y", " ", "\[Rule]", " ", "\[Pi]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8202283125362635`*^9, 3.8202283350367813`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"a9038343-b3e3-4240-96e6-c40d684ef0ad"],

Cell[BoxData[
 FractionBox["12", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"xCos", "[", "\[Pi]", "]"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"xSin", "[", "\[Pi]", "]"}], "2"]}]]], "Output",
 CellChangeTimes->{3.8202283380750074`*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"498d54a3-12da-434b-ab9d-53b4edbdd82d"]
}, Open  ]],

Cell["\<\
Again, there is no change in the actual definition of \
\[OpenCurlyDoubleQuote]a\[CloseCurlyDoubleQuote] or \[OpenCurlyDoubleQuote]x\
\[CloseCurlyDoubleQuote].\
\>", "Text",
 CellChangeTimes->{{3.524400185423046*^9, 3.524400196324299*^9}, {
  3.5244049178231497`*^9, 3.524404941431651*^9}, {3.524405906190864*^9, 
  3.524405913943718*^9}, {3.665294965708675*^9, 3.6652949798918447`*^9}, {
  3.8201257852733707`*^9, 
  3.820125787860627*^9}},ExpressionUUID->"f2a6b585-4be4-481a-9c21-\
026b87468ffb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Equations", "Subsection",
 CellChangeTimes->{{3.8200806369871273`*^9, 
  3.820080638606975*^9}},ExpressionUUID->"e650e984-bdcd-4c4b-97c7-\
c568e0f8d7bd"],

Cell["\<\
Generally an equation involves some sort of relational operator (equal, not \
equal, etc.). One thing to be clear from the start: the \
\[OpenCurlyDoubleQuote]=\[CloseCurlyDoubleQuote] that we\[CloseCurlyQuote]ve \
used so far is the assignment operator and is distinct from what we\
\[CloseCurlyQuote]re going to talk about now. The symbol that tests equality \
is  ==   or (esc)==(esc).\
\>", "Text",
 CellChangeTimes->{{3.505661257528989*^9, 3.505661293345251*^9}, {
   3.505661333141841*^9, 3.505661346071146*^9}, {3.505661385633465*^9, 
   3.505661470576179*^9}, {3.5056617284074297`*^9, 3.505661730944435*^9}, 
   3.505667404855824*^9, {3.505667595845621*^9, 3.5056676427117367`*^9}, {
   3.505668137066607*^9, 3.505668157035989*^9}, {3.665985181152783*^9, 
   3.665985209390298*^9}, {3.820129131360053*^9, 
   3.8201291521133347`*^9}},ExpressionUUID->"339b5bd8-ba4c-4dba-9714-\
3c92289d8032"],

Cell["Here is a true statement (notice the two equal signs)", "Text",
 CellChangeTimes->{{3.505661490332294*^9, 
  3.505661531637381*^9}},ExpressionUUID->"fb8df6d5-a2da-45aa-bde4-\
2f535d9b2c49"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"2", "*", "3"}], " ", "\[Equal]", " ", "6"}]], "Input",
 CellChangeTimes->{{3.8202284017000475`*^9, 3.820228405710132*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"d1b0060f-2d19-4176-ae61-3eda1c6faee3"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8202284105694313`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"fc77cbb2-c789-4304-adaa-6fb09d9cbd5e"]
}, Open  ]],

Cell["Here is another true statement:", "Text",
 CellChangeTimes->{{3.5056615375286293`*^9, 3.50566159726812*^9}, 
   3.505667065290297*^9},ExpressionUUID->"c7f4c0bf-8c9f-4e76-9ec3-\
82099cb4aafa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"2", "*", "3"}], ">", "0"}]], "Input",
 CellChangeTimes->{{3.820228421712164*^9, 3.8202284261529274`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"b8da4766-0918-4696-a6e4-46830c1a37a1"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.820228428104128*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"6e2b30a6-e568-4cf9-aaa0-7a996077236c"]
}, Open  ]],

Cell["Likewise, there are false statements", "Text",
 CellChangeTimes->{{3.505661614591696*^9, 3.505661622372281*^9}, 
   3.5056676536621304`*^9},ExpressionUUID->"68141a0e-8cc4-4dba-824b-\
ec12d27a9771"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"2", "*", "3"}], ">", "100"}]], "Input",
 CellChangeTimes->{{3.8202284324675884`*^9, 3.8202284354089327`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"e174ba3b-60c0-4234-a549-a18e9d1f1acf"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.8202284360725603`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"29b5dd69-6b90-4888-a98d-2e916633546d"]
}, Open  ]],

Cell["\<\
We have 6 arithmetic relational operators:  ==, !=, >,<,>= and <=. Experiment \
with them to check some (in)equalities of your own. You \
don\[CloseCurlyQuote]t need to limit yourself to only numbers in relations.\
\>", "Text",
 CellChangeTimes->{{3.50566164486172*^9, 3.505661704670685*^9}, {
  3.505667661869886*^9, 3.505667662366592*^9}, {3.665985224966332*^9, 
  3.665985225198201*^9}, {3.8201242518959007`*^9, 
  3.8201243215899363`*^9}},ExpressionUUID->"c674c2f3-df68-42cf-b4cf-\
bd1f59f9eed2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Defining functions", "Subsection",
 CellChangeTimes->{{3.820065124539055*^9, 
  3.820065127261199*^9}},ExpressionUUID->"f5ff6221-2c54-4e34-ad0b-\
bb6bfc7132c1"],

Cell["\<\
Symbols have even more applications beyond being used to hold numbers and \
expressions. They are also used to define functions. The standard way to \
define a function in Mathematica is to give its name, then square brackets \
with the names of the arguments inside (with an underscore at the end of each \
argument), then \[OpenCurlyQuote]:=\[CloseCurlyDoubleQuote] and finally the \
definition of a function. If we need intermediate temporary symbols in the \
function we can use Module to create them. Let\[CloseCurlyQuote]s look at an \
example:\
\>", "Text",
 CellChangeTimes->{{3.820065129625834*^9, 3.820065208372119*^9}, {
  3.8200652500662117`*^9, 3.820065255992096*^9}, {3.8201243581050453`*^9, 
  3.8201243786127768`*^9}, {3.820129232038465*^9, 
  3.8201292558973303`*^9}},ExpressionUUID->"40042d10-4572-4995-8d81-\
d86dc9f58632"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "result", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"result", " ", "=", " ", 
       RowBox[{
        SuperscriptBox["x", "6"], "+", 
        RowBox[{"2", "xy"}], "-", 
        SuperscriptBox["z", "7"]}]}], ";"}]}], "\[IndentingNewLine]", "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.8202284897946234`*^9, 3.8202285841669908`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"05a4f09d-8e0a-4e07-bb97-294e40006af9"],

Cell["\<\
Eventually you may learn the details about why we define functions in this \
way, but for now it is sufficient to just remember that this is the \
recommended way to define functions.\
\>", "Text",
 CellChangeTimes->{{3.820065241717902*^9, 3.820065296261235*^9}, {
  3.8201292663940573`*^9, 
  3.8201292844726353`*^9}},ExpressionUUID->"98d14176-731d-415c-a965-\
632bdb11ca1e"],

Cell["\<\
Try evaluating the function for several values of x, y and z.\
\>", "Text",
 CellChangeTimes->{{3.820065298125662*^9, 
  3.8200653168693666`*^9}},ExpressionUUID->"d52d045f-0fcc-4828-8bf3-\
12d617b9ce9b"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"3", ",", "2", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.8202286088503094`*^9, 3.820228624796076*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"fdbb84db-7156-4a81-9569-d83ada1aa0f4"],

Cell[TextData[{
 "Try defining your own function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"g", 
     RowBox[{"(", 
      RowBox[{"x", ",", "y"}], ")"}]}], "=", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}], ")"}], 
     RowBox[{"1", "/", "2"}]]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "513ea0d3-0294-4951-945d-95d6736f904b"],
 " and evaluate it for different values of x and y"
}], "Text",
 CellChangeTimes->{{3.8200653242489758`*^9, 
  3.8200653586079607`*^9}},ExpressionUUID->"f7d3a0e7-884e-4abf-84ba-\
0c0eb5ac946f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Arrays (Vectors, Matrices and \[OpenCurlyDoubleQuote]Tensors\
\[CloseCurlyDoubleQuote])", "Subsection",
 CellChangeTimes->{{3.820065461908114*^9, 
  3.820065472966761*^9}},ExpressionUUID->"1c4ae4aa-1766-4e48-8eaf-\
d172dfef2398"],

Cell[CellGroupData[{

Cell["Defining arrays", "Subsubsection",
 CellChangeTimes->{{3.820065729060829*^9, 
  3.820065731407034*^9}},ExpressionUUID->"898a4170-9eb6-4163-8adc-\
0d9ff5efb767"],

Cell["\<\
We define arrays (called Lists in Mathematica) using curly braces {}. For \
example, let us define a vector (one-dimensional array), a matrix (two \
dimensions) and a rank-3 \[OpenCurlyDoubleQuote]tensor\[CloseCurlyDoubleQuote]\
\>", "Text",
 CellChangeTimes->{{3.82006547631916*^9, 3.820065530455429*^9}, {
  3.820129299639495*^9, 
  3.8201293202927113`*^9}},ExpressionUUID->"1db20357-9c53-4b72-b3a7-\
5b15b85bc92a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"v", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"4", ",", "7"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "6"}], "}"}], ".", 
     RowBox[{"{", 
      RowBox[{"2", ",", "7"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"9", ",", "2"}], "}"}]}], "}"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.820228677376132*^9, 3.820228736213443*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"3ec56a3e-853e-43ba-9029-8d03d743035f"],

Cell["\<\
When printing a matrix, we can put the output in readable matrix notation \
using MatrixForm\
\>", "Text",
 CellChangeTimes->{{3.820065560458519*^9, 3.82006556429626*^9}, {
  3.820065640976329*^9, 3.820065674650444*^9}, {3.820129331724991*^9, 
  3.820129341318836*^9}},ExpressionUUID->"ebce906f-c2d3-4fce-a69a-\
1ef0c2df6835"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "v", "]"}]], "Input",
 CellChangeTimes->{{3.820228748675557*^9, 3.8202287532565336`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"305c927f-f332-4469-9abf-e6c27fdc974d"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"4"},
      {"7"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8202287541055937`*^9},
 CellLabel->
  "Out[47]//MatrixForm=",ExpressionUUID->"3537a219-1852-4dc3-93a2-\
dee1aa91baa9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "A", "]"}]], "Input",
 CellChangeTimes->{{3.8202287578036537`*^9, 3.82022876367109*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"c79ec6ba-0554-43ad-8009-94b7a3897c13"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"48"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.820228765170326*^9},
 CellLabel->
  "Out[48]//MatrixForm=",ExpressionUUID->"b86d86ae-3e26-4a45-a699-\
0b9f6d5fa151"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "T", "]"}]], "Input",
 CellChangeTimes->{{3.8202287709466066`*^9, 3.820228779620965*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"f7c801dd-e45c-4b27-bb87-c4a320ca3d6b"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"1"},
          {"7"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"4"},
          {"5"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"3"},
          {"8"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"9"},
          {"2"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8202287812334757`*^9},
 CellLabel->
  "Out[49]//MatrixForm=",ExpressionUUID->"25d8c57b-ef77-4754-ab63-\
338def0bd082"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generating Arrays", "Subsubsection",
 CellChangeTimes->{{3.820080563552578*^9, 
  3.8200805694750566`*^9}},ExpressionUUID->"c5acfe33-0dac-4a96-99d3-\
1696ad2dcd74"],

Cell[TextData[{
 "Sometimes it is convenient to generate an array from a formula for the \
coefficients. We can use ",
 StyleBox["Table",
  FontWeight->"Bold"],
 " to achieve this. For example, let\[CloseCurlyQuote]s create a 1-D array of \
the numbers from 1 to 6."
}], "Text",
 CellChangeTimes->{{3.820140582662871*^9, 
  3.820140668600111*^9}},ExpressionUUID->"4752f230-81ab-4f9d-9195-\
fe0dc9b46a4f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"i", ",", " ", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "6", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.820228803138097*^9, 3.8202288286742506`*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"626440c0-7cc6-4a6c-af25-5ce3c54ff553"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8202288386477747`*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"7061d866-067b-46e3-8e55-a7aa67459fc8"]
}, Open  ]],

Cell[TextData[{
 "Here, {i,1,6,1} is the ",
 StyleBox["iterator",
  FontWeight->"Bold"],
 " which says to increment i from 1 to 6 by steps of 1. The first argument is \
the function (just i in this case) and is evaluated for each case. Table make \
a list of the results."
}], "Text",
 CellChangeTimes->{{3.505508341093416*^9, 3.5055084110941*^9}, {
  3.505508454543895*^9, 3.505508525524563*^9}, {3.5055092754604053`*^9, 
  3.505509335949298*^9}, {3.5056602050636377`*^9, 3.505660244045189*^9}, {
  3.8201406890512953`*^9, 3.820140689690832*^9}, {3.8201407382012243`*^9, 
  3.82014074400986*^9}},ExpressionUUID->"c263a9b6-ad15-4ed9-b4db-\
983b8d6d4a65"],

Cell["Let\[CloseCurlyQuote]s try a different function with the same \
iterator.", "Text",
 CellChangeTimes->{{3.820140746902358*^9, 3.820140747791483*^9}, {
  3.820220911468483*^9, 
  3.820220912086425*^9}},ExpressionUUID->"c64df597-bd6c-4ef6-984d-\
f5f791d6a99f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"squares", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    SuperscriptBox["i", "2"], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "6", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8202288641133304`*^9, 3.820228881376239*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"2988bcc3-e2ad-464c-b18d-8de7bb63fbfd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8202288820457926`*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"002bcb4e-e1c2-42e5-bc3d-cefc1aa8b318"]
}, Open  ]],

Cell["\<\
The first argument can be any expression. Try a few possibilities\
\>", "Text",
 CellChangeTimes->{{3.505508557283784*^9, 3.505508566574328*^9}, {
  3.820140721710355*^9, 
  3.8201407257968807`*^9}},ExpressionUUID->"6873f6b6-7cbe-4464-837f-\
6f38d13ca1ae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"BesselJ", "[", 
    RowBox[{"i", ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "6", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.82022888600531*^9, 3.8202289056539707`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"67c31df5-0a69-4216-b0a3-3a5b66f88357"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"BesselJ", "[", 
    RowBox[{"1", ",", "x"}], "]"}], ",", 
   RowBox[{"BesselJ", "[", 
    RowBox[{"2", ",", "x"}], "]"}], ",", 
   RowBox[{"BesselJ", "[", 
    RowBox[{"3", ",", "x"}], "]"}], ",", 
   RowBox[{"BesselJ", "[", 
    RowBox[{"4", ",", "x"}], "]"}], ",", 
   RowBox[{"BesselJ", "[", 
    RowBox[{"5", ",", "x"}], "]"}], ",", 
   RowBox[{"BesselJ", "[", 
    RowBox[{"6", ",", "x"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8202289069204917`*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"a70c5ce2-2b37-45c8-99a8-925a1b209bf1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Map", "Subsubsection",
 CellChangeTimes->{{3.6659845289416113`*^9, 
  3.665984530300206*^9}},ExpressionUUID->"6fad8aac-b831-4d3a-9635-\
64f26a0d4b97"],

Cell[TextData[{
 "Sometimes we already have an array and we want to apply a function to each \
element of the array. We can achieve this using ",
 StyleBox["Map",
  FontWeight->"Bold"],
 ". Let\[CloseCurlyQuote]s try mapping the Sqrt function over our array of \
squares."
}], "Text",
 CellChangeTimes->{{3.505509643952794*^9, 3.505509645519807*^9}, {
   3.5055103138175993`*^9, 3.505510331285365*^9}, {3.5055105502585363`*^9, 
   3.505510576629509*^9}, 3.505510986895463*^9, 3.505511134460821*^9, {
   3.505672418980176*^9, 3.505672482610178*^9}, {3.820140850099904*^9, 
   3.8201409414623413`*^9}, {3.820140996520915*^9, 3.8201410049710503`*^9}, {
   3.820220922325386*^9, 
   3.820220923144142*^9}},ExpressionUUID->"a94f2332-0afa-46c6-8b9a-\
72ac58a6069c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"Sqrt", ",", "squares"}], "]"}]], "Input",
 CellChangeTimes->{{3.820228929334893*^9, 3.8202289511682997`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"0d3afbaf-5276-4045-a561-03f56207ea87"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.820228938467811*^9, 3.8202289521135206`*^9}},
 CellLabel->"Out[54]=",ExpressionUUID->"43fc8c7a-7913-4781-afbe-7263ac638367"]
}, Open  ]],

Cell["\<\
You will often see a different but equivalent syntax for Map using \
\[OpenCurlyDoubleQuote]/@\[CloseCurlyDoubleQuote].\
\>", "Text",
 CellChangeTimes->{{3.5055106376745167`*^9, 3.505510652600787*^9}, {
  3.505511142331531*^9, 3.505511164657464*^9}, {3.505672529722994*^9, 
  3.505672538326948*^9}, {3.505729293767239*^9, 3.505729294453957*^9}, {
  3.820141022598936*^9, 
  3.820141044117837*^9}},ExpressionUUID->"b0991f59-f176-4dbd-adb9-\
4f94d481ad40"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "/@", " ", "squares"}]], "Input",
 CellChangeTimes->{{3.820228958993986*^9, 3.8202289663931117`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"8394865e-f93c-4bd8-823d-67ac692c6c77"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8202289671689696`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"c5f9b538-dd94-49a0-bc03-2c969c5a350c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Listable functions and arrays", "Subsubsection",
 CellChangeTimes->{{3.820080762441104*^9, 3.820080763609322*^9}, {
  3.820123837708694*^9, 
  3.820123841256237*^9}},ExpressionUUID->"ea71ea2f-1098-4e14-9bb6-\
23145503189f"],

Cell[TextData[{
 "In many cases there is an even easier way to apply a function element-wise \
to elements of an array. Many built-in functions have the ",
 StyleBox["Listable",
  FontWeight->"Bold"],
 " attribute, which means that they are ",
 StyleBox["automatically",
  FontWeight->"Bold"],
 " applied to each list member without  having to use Map or other looping \
commands. For example, Sqrt is Listable so we have a simpler way to apply it \
to our array"
}], "Text",
 CellChangeTimes->{{3.506718019573601*^9, 3.506718071981638*^9}, {
  3.506764335958571*^9, 3.506764338047121*^9}, {3.525435075665327*^9, 
  3.525435081746991*^9}, {3.665984649439465*^9, 3.665984654591485*^9}, {
  3.820141107636547*^9, 3.8201411853491793`*^9}, {3.820141263349511*^9, 
  3.820141294803637*^9}},ExpressionUUID->"167d3eef-85d0-464b-9622-\
df387c534f96"],

Cell["Try passing the whole vector \[OpenCurlyDoubleQuote]squares\
\[CloseCurlyDoubleQuote] to the Sqrt function.", "Text",
 CellChangeTimes->{{3.8201413088585663`*^9, 
  3.820141325799375*^9}},ExpressionUUID->"b80a6167-743c-4c2c-b1cb-\
b535af949bfa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Attributes", "[", "Sqrt", "]"}]], "Input",
 CellChangeTimes->{{3.8202290110549264`*^9, 3.820229022167435*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"69b20ceb-480f-4624-8c9d-8e7b04862ad2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Listable", ",", "NumericFunction", ",", "Protected"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8202290225622053`*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"758b3dac-4128-44ed-b223-e0768c526ec5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "[", "squares", "]"}]], "Input",
 CellChangeTimes->{{3.8202289929248505`*^9, 3.8202290003871665`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"3132521f-fac3-4dbc-a87a-21965eabdf9c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8202290013399725`*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"b7a1a42f-7914-4959-8f50-864adca316a9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Extracting parts of arrays", "Subsubsection",
 CellChangeTimes->{{3.8200657380565577`*^9, 
  3.820065741813892*^9}},ExpressionUUID->"b47b3103-b773-4aa4-960d-\
5e0d59d31f1b"],

Cell[TextData[{
 "We can extract parts of arrays using double square brackets [[...]]. For \
example, to extract the vector with components ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", 
    RowBox[{"1", ",", "2", ",", "i"}]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b825b527-44b5-496b-bb75-46b78ae63fe6"],
 " for all i=1,2 we could use either of the following"
}], "Text",
 CellChangeTimes->{{3.820065744052621*^9, 
  3.820065826100412*^9}},ExpressionUUID->"d771d246-b65d-4c54-b370-\
e52351cadc84"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"T", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "2", ",", "All"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8202290338813562`*^9, 3.820229043771011*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"549f07d7-9d0b-4963-a32c-90335fee9520"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.820229060278904*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"2a25e714-e2b1-4ace-a315-737596baad71"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"T", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8202290773208895`*^9, 3.8202290800376625`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"445d0efb-c324-4b02-83a5-be82ac9df0c4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.8202290805947237`*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"c6b13393-a78f-49e6-9a70-182f53421296"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"T", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "2", ",", 
    RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8202290862098093`*^9, 3.8202290934617863`*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"2a9388e0-1228-4eac-86a1-5c31d69860d8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.820229094273974*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"dd4b2a7e-fe84-47f3-919a-724a983b25cd"]
}, Open  ]],

Cell[TextData[{
 "There are lots of different ways to specify the parts of an array that we \
want. For more information see the documentation for ",
 StyleBox["Part",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.8200658343137903`*^9, 
  3.820065855666876*^9}},ExpressionUUID->"0a7dfc67-44ea-4070-8d1e-\
5065ac605441"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Multiplication of arrays", "Subsubsection",
 CellChangeTimes->{{3.820219228012802*^9, 3.8202192292254877`*^9}, {
  3.8202192794137573`*^9, 
  3.8202192854333763`*^9}},ExpressionUUID->"156aaae4-1f33-4ba1-88af-\
07177cda2e17"],

Cell["\<\
When we talk about multiplying arrays (whether they are vectors, matrices or \
tensors) we can actually mean several different things. The two most \
important possibilities are:\
\>", "Text",
 CellChangeTimes->{{3.820219375942317*^9, 3.820219403534614*^9}, {
  3.82021955412746*^9, 
  3.8202195842994537`*^9}},ExpressionUUID->"e5034749-6cf5-4c2a-87a3-\
342d80acc8a9"],

Cell[CellGroupData[{

Cell["\<\
Standard matrix multiplication. We do this using the \
\[OpenCurlyDoubleQuote]dot product\[CloseCurlyDoubleQuote], which in \
Mathematica is given by \[OpenCurlyDoubleQuote].\[CloseCurlyDoubleQuote].\
\>", "Item",
 CellChangeTimes->{{3.820219684435644*^9, 3.820219693976152*^9}, {
   3.820220103751114*^9, 3.820220130727305*^9}, 
   3.820220267614686*^9},ExpressionUUID->"f092480a-53bc-4c9f-b97f-\
48144efa4685"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A", ".", "v"}]], "Input",
 CellChangeTimes->{{3.8202291227727833`*^9, 3.820229123507064*^9}, {
  3.82022916105107*^9, 3.820229165858374*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"054f990d-f2b8-4620-bc30-0716b83c3073"],

Cell[BoxData[
 TemplateBox[{
  "Dot", "dotsh", 
   "\"Tensors \\!\\(\\*RowBox[{\\\"{\\\", \\\"48\\\", \\\"}\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"4\\\", \\\",\\\", \\\"7\\\"}], \
\\\"}\\\"}]\\) have incompatible shapes.\"", 2, 65, 4, 23790350471054804965, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.820229124234994*^9, 3.8202291685614324`*^9},
 CellLabel->
  "During evaluation of \
In[65]:=",ExpressionUUID->"9caf78ab-c44b-4f30-a785-b911c8e2ba03"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", "48", "}"}], ".", 
  RowBox[{"{", 
   RowBox[{"4", ",", "7"}], "}"}]}]], "Output",
 CellChangeTimes->{3.8202291243098936`*^9, 3.820229168572404*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"216a08d8-a112-4b81-abd4-7e39369427fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A", "*", "A"}]], "Input",
 CellChangeTimes->{{3.820229138727709*^9, 3.8202291720064363`*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"23243b62-2086-4681-9a35-cff20fb3d0eb"],

Cell[BoxData[
 RowBox[{"{", "2304", "}"}]], "Output",
 CellChangeTimes->{{3.820229140465931*^9, 3.8202291725662847`*^9}},
 CellLabel->"Out[66]=",ExpressionUUID->"c950338c-3cc0-4d4d-a7f4-825d86485ea9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"T", "*", "T"}]], "Input",
 CellChangeTimes->{{3.8202291793982134`*^9, 3.8202291804235935`*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"461d0a28-757a-452f-9128-e751ae7f0f71"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "49"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "25"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"9", ",", "64"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"81", ",", "4"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8202291812000036`*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"4008d906-3790-40ae-9b30-d84f369bf71f"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Element-wise multiplication. This is what we get if use times, \
\[OpenCurlyDoubleQuote]*\[CloseCurlyDoubleQuote].\
\>", "Item",
 CellChangeTimes->{{3.820219684435644*^9, 3.820219693976152*^9}, {
  3.820220103751114*^9, 3.820220111438033*^9}, {3.820220142233989*^9, 
  3.820220145788088*^9}, {3.820220185660686*^9, 3.8202202039056664`*^9}, {
  3.820220264431275*^9, 
  3.820220264982313*^9}},ExpressionUUID->"649759c3-23bc-4aca-8350-\
ed7b17e2a665"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Associations", "Subsection",
 CellChangeTimes->{{3.8200659035701113`*^9, 
  3.820065906044936*^9}},ExpressionUUID->"213c83e7-5e67-49f2-8c97-\
35a9cb390ecf"],

Cell["\<\
The final type of object we will find useful is the Association, which we can \
think of as an array with non-numeric keys for indexing.\
\>", "Text",
 CellChangeTimes->{{3.82006615367841*^9, 3.820066154848494*^9}, {
  3.820141371010771*^9, 
  3.820141371330749*^9}},ExpressionUUID->"e32cf44d-463c-414d-9f72-\
d27b8b193c85"],

Cell[CellGroupData[{

Cell["Defining associations", "Subsubsection",
 CellChangeTimes->{{3.820065992210841*^9, 3.8200659976782837`*^9}, {
  3.820066040453183*^9, 
  3.820066040666312*^9}},ExpressionUUID->"54cb31cc-5824-4dbc-8e72-\
c09e904f701f"],

Cell["To define an association we use <| ..-> ... |>. For example", "Text",
 CellChangeTimes->{{3.820065907879011*^9, 3.820065976741643*^9}, {
  3.8200661439297743`*^9, 
  3.820066151554616*^9}},ExpressionUUID->"da1e9a12-f1ae-422b-953f-\
e2a471ebcecd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"assoc", " ", "=", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<key1\>\"", "\[Rule]", "2"}], ",", 
    RowBox[{"3", "\[Rule]", "11"}], ",", 
    RowBox[{"\"\<keyx\>\"", "\[Rule]", "7"}]}], "|>"}]}]], "Input",
 CellChangeTimes->{{3.8202291911304693`*^9, 3.8202292450009174`*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"5b493225-0a0d-4393-a7d2-0e14033e2c74"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"key1\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"3", "\[Rule]", "11"}], ",", 
   RowBox[{"\<\"keyx\"\>", "\[Rule]", "7"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.820229245861498*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"26068c5a-ee6c-42f1-b3a4-cc20e56212ea"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Accessing elements in associations", "Subsubsection",
 CellChangeTimes->{{3.820066001762877*^9, 
  3.820066006970909*^9}},ExpressionUUID->"afc9e927-770b-48aa-8bb1-\
409d4a4b046c"],

Cell["\<\
To access a given named element in an association we use single square \
brackets and the name of the key (a bit like functions)\
\>", "Text",
 CellChangeTimes->{{3.8200660088137283`*^9, 
  3.820066032846426*^9}},ExpressionUUID->"5b32f711-7a9c-400c-b658-\
2ee176b872e4"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Doing mathematics with Mathematica", "Section",
 CellChangeTimes->{{3.820066078196619*^9, 
  3.820066083843627*^9}},ExpressionUUID->"a30d21ca-c5e3-481d-9a79-\
98743a1c5dd1"],

Cell[CellGroupData[{

Cell["Plotting functions", "Subsection",
 CellChangeTimes->{{3.7922269501164427`*^9, 3.792226951331059*^9}, {
  3.820080415714951*^9, 3.82008041876313*^9}, {3.820141839897648*^9, 
  3.8201418416935043`*^9}},ExpressionUUID->"c6036d63-d5d9-4356-8fd3-\
59c33f252790"],

Cell[TextData[{
 "One of the best ways to understand a function is to plot it. For example, \
we can use ",
 StyleBox["Plot",
  FontWeight->"Bold"],
 " to produce a plot of a function of one variable. Try it for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", 
     RowBox[{"(", "x", ")"}]}], "=", 
    SuperscriptBox["x", "2"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "0393b7c1-8445-4aff-a1b3-78b12e814a66"],
 "."
}], "Text",
 CellChangeTimes->{{3.8201418468276577`*^9, 
  3.820141936593923*^9}},ExpressionUUID->"938eb8e4-019e-419c-a713-\
a2e43cd80bc8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   SuperscriptBox["x", "2"], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.820229276986631*^9, 3.820229313121728*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"b799b0c0-c026-42de-a8d1-382b25d501c6"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
btNA7NjTdy279//bQ+D/95D/ATgbkOg=
       "]]},
     Annotation[#, "Charting`Private`Tag$9107#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1, 1}, {0., 0.9999999183673486}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.820229317193965*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"5ac5ed40-e9fa-439b-ad49-850db1f1cb39"],

Cell[BoxData[
 TemplateBox[{
  "Plot", "pllim", 
   "\:f3b5Range specification \!\({x, \(-1\), 1, 1}\) is not of the form {x, \
xmin, xmax}.\:f3b5", 2, 69, 5, 23790350471054804965, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.8202292936593003`*^9, 
  3.820229307164595*^9}},ExpressionUUID->"c3edcef5-0308-429c-8710-\
357183b43f4b"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   SuperscriptBox["x", "2"], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.820229293672266*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"f2df65f8-25cf-4004-92ac-fbeb4ac5a74c"]
}, Open  ]],

Cell[TextData[{
 "To plot functions of two variable, one approach is to consider it as a \
surface embedded in three-dimensional space using ",
 StyleBox["Plot3D",
  FontWeight->"Bold"],
 ". Try using Plot3D to plot the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"sin", "(", 
    RowBox[{"x", "+", 
     SuperscriptBox["y", "2"]}], ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "604e2d32-5bc1-4cce-b54e-b45f00b19300"],
 " for x\[Element][-3,3] and y\[Element][-2,2]."
}], "Text",
 CellChangeTimes->{{3.8201419755547037`*^9, 
  3.8201420633508577`*^9}},ExpressionUUID->"8b8b5afc-308d-45b5-9967-\
3c3671095b54"],

Cell["\<\
3D plots are interactive. Try clicking and dragging around to rotate the plot.\
\>", "Text",
 CellChangeTimes->{{3.8201420967681723`*^9, 
  3.820142114760606*^9}},ExpressionUUID->"008ca6c5-eff3-4084-900c-\
948295c7aad6"],

Cell[TextData[{
 "Sometimes we want to do something similar, but slightly different. Consider \
a 3D vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["x", "\[Rule]"], "(", 
    RowBox[{"u", ",", "v"}], ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b610de50-49ef-45db-9f9b-a091a25ec162"],
 ". We can think of this as a defining parametric two-dimensional surface in \
3D. To visualise this we use ",
 StyleBox["ParametricPlot3D",
  FontWeight->"Bold"],
 ". Let\[CloseCurlyQuote]s try it with the Klein bottle defined as follows:"
}], "Text",
 CellChangeTimes->{{3.820142132875238*^9, 
  3.8201423072560253`*^9}},ExpressionUUID->"bd987e9f-d74a-4b28-81cd-\
66e73ab05e00"],

Cell["\<\
There are many many more plotting functions available. We won\
\[CloseCurlyQuote]t review them here, but you can get an idea by checking the \
Help pages for all functions including Plot in the name:\
\>", "Text",
 CellChangeTimes->{{3.82014233826018*^9, 
  3.820142380358699*^9}},ExpressionUUID->"aa62be9c-b70e-4f6f-b205-\
2109da3c04d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Manipulate-ing visualitions", "Subsection",
 CellChangeTimes->{{3.792226871995653*^9, 3.792226875508835*^9}, {
  3.820142402606283*^9, 
  3.8201424128614893`*^9}},ExpressionUUID->"c68246d5-4cc3-4f19-9df5-\
910e82ab8919"],

Cell["\<\
Sometimes we want to plot a function over a range of values for a parameter. \
We can achieve this using Manipulate:\
\>", "Text",
 CellChangeTimes->{{3.820142420007925*^9, 3.820142438669932*^9}, {
  3.820142504530254*^9, 
  3.820142518142058*^9}},ExpressionUUID->"8ae957cf-3812-4601-a9c1-\
f2313d861120"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simplification", "Subsection",
 CellChangeTimes->{{3.792161835020419*^9, 
  3.792161836370613*^9}},ExpressionUUID->"4b483111-524b-4184-a4fa-\
5246a2f395f9"],

Cell["\<\
One of the most powerful uses of Mathematica is as a symbolic algebra tool. \
Let\[CloseCurlyQuote]s see how we can use it to simplify functions.\
\>", "Text",
 CellChangeTimes->{{3.820147754438895*^9, 
  3.820147783755065*^9}},ExpressionUUID->"be843fdf-1c21-49b6-8f35-\
a8ad77e79ab2"],

Cell["Obvious factors in fractions are automatically cancelled", "Text",
 CellChangeTimes->{{3.820147786115011*^9, 
  3.820147803212256*^9}},ExpressionUUID->"43416209-c1ff-4c7d-9d8a-\
212705ea510e"],

Cell["\<\
Sometimes it\[CloseCurlyQuote]s not so obvious (to us or to Mathematica) that \
there is a common factor to be cancelled.\
\>", "Text",
 CellChangeTimes->{{3.820147805578643*^9, 
  3.820147831507189*^9}},ExpressionUUID->"ab8dc593-b38d-4e68-8531-\
19b3e5cd88f3"],

Cell["\<\
In those cases, Simplify will often spot the cancellation and produce a \
simplified expresssion\
\>", "Text",
 CellChangeTimes->{{3.820147834532309*^9, 
  3.8201478533948603`*^9}},ExpressionUUID->"b06393df-786e-4d27-b1f3-\
0f4d900ea1ac"],

Cell["\<\
Simplify also knows about the properties of many built-in functions. For \
example, it knows all the standard rules of trigonometry.\
\>", "Text",
 CellChangeTimes->{{3.820147857136218*^9, 
  3.820147886123085*^9}},ExpressionUUID->"9eadf053-d28f-4404-a2d9-\
8f86ee2c0eac"],

Cell["\<\
Other useful functions for simplification include: FullSimplify, Factor, \
Expand, Apart, Together, Cancel and Collect. Look them up in the \
documentation to learn what each one does.\
\>", "Text",
 CellChangeTimes->{{3.820126057739071*^9, 3.8201260705144863`*^9}, {
  3.820126108573433*^9, 
  3.820126158218308*^9}},ExpressionUUID->"0e2648f6-a359-469c-a7f2-\
fed6e0296215"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Differentiation", "Subsection",
 CellChangeTimes->{{3.7921619190243387`*^9, 
  3.792161923108528*^9}},ExpressionUUID->"49393bed-8912-4075-aeef-\
5da71a658e08"],

Cell["\<\
Another thing we can do with symbolic algebra is to compute the derivative of \
a function using D[...]. Let\[CloseCurlyQuote]s try a few examples\
\>", "Text",
 CellChangeTimes->{{3.8201478965362673`*^9, 
  3.820147927691752*^9}},ExpressionUUID->"e307366c-13f8-4d62-905f-\
1bded06d5da0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Integration", "Subsection",
 CellChangeTimes->{{3.792162255779999*^9, 
  3.792162256687786*^9}},ExpressionUUID->"d7e0f9d8-68e3-4954-ae00-\
a3a645c3a8da"],

Cell["\<\
As well as differentiation, the other natural thing we might want to do is \
integrate a function. Mathematica knows about how to integrate all sorts of \
functions, and has most identities from textbook tables of integrals \
built-in. Let\[CloseCurlyQuote]s look at a few examples\
\>", "Text",
 CellChangeTimes->{{3.820147957344222*^9, 
  3.820148023982376*^9}},ExpressionUUID->"03156efd-d1cc-4cde-8622-\
3b30dcee9bff"],

Cell["Sometimes operations will return non-elementary functions:", "Text",
 CellChangeTimes->{{3.7921626663899403`*^9, 
  3.792162683758713*^9}},ExpressionUUID->"0b188388-50c5-4a2d-8c08-\
b9f77ddc89a6"],

Cell[CellGroupData[{

Cell["Numerical Integration", "Subsubsection",
 CellChangeTimes->{{3.792227235092474*^9, 
  3.792227238422386*^9}},ExpressionUUID->"e98bb504-c5c4-4c29-9bcb-\
41bdcb2bae4f"],

Cell["\<\
Sometimes, there is no known analytic solution to an integral and we need to \
resort to a numerical approximation using NIngegrate.\
\>", "Text",
 CellChangeTimes->{{3.820148736061544*^9, 
  3.820148773295846*^9}},ExpressionUUID->"f60e5f29-4c43-49ee-aa8b-\
591c05749621"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sums", "Subsection",
 CellChangeTimes->{{3.820148330384945*^9, 
  3.820148332571225*^9}},ExpressionUUID->"d94b83d3-3721-4067-8281-\
92a5f3337c70"],

Cell["\<\
Similar to integration, we can also compute sums (both infinite and not) \
using Sum. Let\[CloseCurlyQuote]s see a few examples\
\>", "Text",
 CellChangeTimes->{{3.820148340344451*^9, 
  3.8201483771779737`*^9}},ExpressionUUID->"b140b5ab-2692-4230-8d69-\
5eb14eec95de"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Series expansions", "Subsection",
 CellChangeTimes->{{3.792395308307548*^9, 
  3.792395325981415*^9}},ExpressionUUID->"b5c65735-9b3c-477f-b3b6-\
879149a64239"],

Cell["\<\
We can compute power series expansions of an expression using Series\
\>", "Text",
 CellChangeTimes->{{3.820148823378907*^9, 
  3.820148834016823*^9}},ExpressionUUID->"62d60d3c-2e98-4231-84af-\
831452138f8c"],

Cell["In some cases this is just the normal Taylor series", "Text",
 CellChangeTimes->{{3.820148846042286*^9, 
  3.820148856541987*^9}},ExpressionUUID->"d748a471-6385-4cb3-a53a-\
dda290e81fe3"],

Cell["\<\
In other cases, we get more general series such as a Laurent series\
\>", "Text",
 CellChangeTimes->{{3.820148917663541*^9, 
  3.820148939744244*^9}},ExpressionUUID->"d8dc3445-60ab-49be-9963-\
d5aabddef1be"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Special Functions", "Subsection",
 CellChangeTimes->{{3.6629300756494093`*^9, 3.6629301174604807`*^9}, {
   3.662930152247402*^9, 3.662930178309421*^9}, {3.662930798413241*^9, 
   3.662930801365119*^9}, {3.6629312698640842`*^9, 3.662931280672957*^9}, 
   3.6629314656798353`*^9, {3.6629329013131437`*^9, 3.6629329059432497`*^9}, {
   3.6629340858191547`*^9, 3.662934087858817*^9}, {3.712350382938361*^9, 
   3.712350387578086*^9}},ExpressionUUID->"d204d0d2-fc98-4c04-af61-\
89bc64b0007c"],

Cell["\<\
We saw in the previous examples of integration and sums that sometimes we can \
produce special functions such as the Bessel function. Mathematica has \
knowledge of a large library of special functions and we can treat them as we \
would any function. We can plot them\
\>", "Text",
 CellChangeTimes->{{3.820148427206067*^9, 
  3.82014849338901*^9}},ExpressionUUID->"69710dc1-d629-4a0f-862a-\
fea6e3c0aa68"],

Cell["We can find series expansions", "Text",
 CellChangeTimes->{{3.820148496433715*^9, 
  3.8201485002775927`*^9}},ExpressionUUID->"93e117c2-f6fa-4b60-b6a1-\
a18f52da7df2"],

Cell["We can integrate them", "Text",
 CellChangeTimes->{{3.8201485076948566`*^9, 3.820148517328764*^9}, {
  3.820148586169598*^9, 
  3.820148587124647*^9}},ExpressionUUID->"49c5a421-dfdf-4649-ae20-\
3d1495cb721b"],

Cell["and differentiate them", "Text",
 CellChangeTimes->{{3.820148538461266*^9, 
  3.8201485412331467`*^9}},ExpressionUUID->"6a32ec14-44b4-490f-9f40-\
40693d204900"],

Cell[TextData[{
 "For more details on the the extensive list of functions known by \
Mathematica see the documentation tutorial on ",
 ButtonBox["Mathematical Functions",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/MathematicalFunctions"],
 "."
}], "Text",
 CellChangeTimes->{{3.820148627713647*^9, 3.820148671853819*^9}, {
  3.820148706764995*^9, 3.820148706765664*^9}, {3.820148954755579*^9, 
  3.820148983728591*^9}},ExpressionUUID->"f5031d34-03c7-4397-b806-\
8c5efe08e389"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solving equations", "Subsection",
 CellChangeTimes->{{3.7921626907150106`*^9, 
  3.7921626955888233`*^9}},ExpressionUUID->"faa06dfd-8957-4649-bfe2-\
9fd74c1081f5"],

Cell["\<\
We can solve many different types of equations. For example, a system of \
linear equations\
\>", "Text",
 CellChangeTimes->{{3.820149011624136*^9, 
  3.820149040941842*^9}},ExpressionUUID->"f2275906-6222-4cd2-a726-\
1a6daa3b4f3f"],

Cell["or a quadratic", "Text",
 CellChangeTimes->{{3.820149043184828*^9, 
  3.8201490454036427`*^9}},ExpressionUUID->"307db4b0-4f41-4d34-a67d-\
a129149166f7"],

Cell["or higher order polynomials", "Text",
 CellChangeTimes->{{3.8201490500914583`*^9, 
  3.8201490577296543`*^9}},ExpressionUUID->"e8a5321f-1547-4124-a66c-\
c3cf8ebf6a81"],

Cell["or systems of polynomials", "Text",
 CellChangeTimes->{{3.820149071420517*^9, 
  3.820149075351201*^9}},ExpressionUUID->"13012d29-c5e8-47b5-a2ff-\
afa288d90502"],

Cell["or even more complicated equations", "Text",
 CellChangeTimes->{{3.820149092219017*^9, 
  3.820149096970139*^9}},ExpressionUUID->"c23621fd-d21f-4644-b88e-\
200e782619d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Differential equations", "Subsection",
 CellChangeTimes->{{3.820123919510984*^9, 
  3.820123922004985*^9}},ExpressionUUID->"76792a2e-193d-4a2c-89c1-\
9312563df7d1"],

Cell["\<\
Lastly, we can also solve differential equations (both ordinary and partial). \
Let\[CloseCurlyQuote]s look at some examples.\
\>", "Text",
 CellChangeTimes->{{3.820150988323144*^9, 
  3.820151010126081*^9}},ExpressionUUID->"7a14dc55-1891-42f1-ba67-\
e8e35060ec4d"],

Cell["Ordinary Differential Equations", "Subsubsection",
 CellChangeTimes->{{3.792227215269507*^9, 3.7922272197467813`*^9}, {
  3.8200803352172537`*^9, 3.820080340263536*^9}, {3.820151052705667*^9, 
  3.820151054425096*^9}},ExpressionUUID->"4bf131d8-ff3f-436a-981c-\
86ec7ad9365b"],

Cell["Partial Differential Equations", "Subsubsection",
 CellChangeTimes->{{3.6629300756494093`*^9, 3.6629301174604807`*^9}, {
   3.662930152247402*^9, 3.662930178309421*^9}, {3.662930798413241*^9, 
   3.662930801365119*^9}, {3.6629312698640842`*^9, 3.662931280672957*^9}, 
   3.6629314656798353`*^9, {3.6629329013131437`*^9, 3.6629329059432497`*^9}, {
   3.6629340858191547`*^9, 3.662934087858817*^9}, {3.662934180889139*^9, 
   3.6629341872553883`*^9}, {3.6629347256298437`*^9, 3.662934737044832*^9}, {
   3.712335839471036*^9, 3.712335878629788*^9}, {3.820151046092905*^9, 
   3.820151058225683*^9}},ExpressionUUID->"0a08396c-7adc-49bf-b047-\
c7d066a65bd4"]
}, Open  ]],

Cell["Units", "Subsection",
 CellChangeTimes->{{3.6629300756494093`*^9, 3.6629301174604807`*^9}, {
   3.662930152247402*^9, 3.662930178309421*^9}, {3.662930798413241*^9, 
   3.662930801365119*^9}, {3.6629312698640842`*^9, 3.662931280672957*^9}, 
   3.6629314656798353`*^9, {3.6629329013131437`*^9, 3.6629329059432497`*^9}, {
   3.6629340858191547`*^9, 3.662934087858817*^9}, {3.712350382938361*^9, 
   3.712350387578086*^9}, {3.7123509094572163`*^9, 
   3.712350926753174*^9}},ExpressionUUID->"74270431-1aca-48c0-817b-\
2a8004b06b78"],

Cell[CellGroupData[{

Cell["\[OpenCurlyDoubleQuote]Computable data\[CloseCurlyDoubleQuote]", \
"Subsection",
 CellChangeTimes->{{3.6629300756494093`*^9, 3.6629301174604807`*^9}, {
   3.662930152247402*^9, 3.662930178309421*^9}, {3.662930798413241*^9, 
   3.662930801365119*^9}, {3.6629312698640842`*^9, 3.662931280672957*^9}, 
   3.6629314656798353`*^9, {3.6629329013131437`*^9, 3.6629329059432497`*^9}, {
   3.6629340858191547`*^9, 3.662934087858817*^9}, {3.662934180889139*^9, 
   3.6629341872553883`*^9}, {3.662934522656699*^9, 3.662934524742794*^9}, {
   3.662935184855069*^9, 3.6629351885575123`*^9}, {3.662935676928521*^9, 
   3.6629356806707153`*^9}},ExpressionUUID->"cfcb9416-af66-44ee-b534-\
fd7b05cb175d"],

Cell["Financial Data", "Subsubsection",
 CellChangeTimes->{{3.6629300756494093`*^9, 3.6629301174604807`*^9}, {
   3.662930152247402*^9, 3.662930178309421*^9}, {3.662930798413241*^9, 
   3.662930801365119*^9}, {3.6629312698640842`*^9, 3.662931280672957*^9}, 
   3.6629314656798353`*^9, {3.6629329013131437`*^9, 3.6629329059432497`*^9}, {
   3.6629340858191547`*^9, 3.662934087858817*^9}, {3.662934180889139*^9, 
   3.6629341872553883`*^9}, {3.662934522656699*^9, 3.662934524742794*^9}, {
   3.662935184855069*^9, 3.6629351885575123`*^9}, {3.662935676928521*^9, 
   3.6629356806707153`*^9}, {3.820124131264186*^9, 
   3.8201241331541443`*^9}},ExpressionUUID->"d7ebb0b1-a77f-4326-9209-\
af46946edcf9"],

Cell["Graphs", "Subsubsection",
 CellChangeTimes->{{3.6629300756494093`*^9, 3.6629301174604807`*^9}, {
   3.662930152247402*^9, 3.662930178309421*^9}, {3.662930798413241*^9, 
   3.662930801365119*^9}, {3.6629312698640842`*^9, 3.662931280672957*^9}, 
   3.6629314656798353`*^9, {3.6629329013131437`*^9, 3.6629329059432497`*^9}, {
   3.6629340858191547`*^9, 3.662934087858817*^9}, {3.662934180889139*^9, 
   3.6629341872553883`*^9}, {3.662934522656699*^9, 3.662934524742794*^9}, {
   3.662935184855069*^9, 3.6629351885575123`*^9}, {3.662935676928521*^9, 
   3.6629356806707153`*^9}, {3.820124140196476*^9, 
   3.820124140882781*^9}},ExpressionUUID->"1b972a06-e27a-4730-918a-\
7bdb40f813f0"],

Cell["Historical data", "Subsubsection",
 CellChangeTimes->{{3.6629300756494093`*^9, 3.6629301174604807`*^9}, {
   3.662930152247402*^9, 3.662930178309421*^9}, {3.662930798413241*^9, 
   3.662930801365119*^9}, {3.6629312698640842`*^9, 3.662931280672957*^9}, 
   3.6629314656798353`*^9, {3.6629329013131437`*^9, 3.6629329059432497`*^9}, {
   3.6629340858191547`*^9, 3.662934087858817*^9}, {3.662934180889139*^9, 
   3.6629341872553883`*^9}, {3.662934522656699*^9, 3.662934524742794*^9}, {
   3.662935184855069*^9, 3.6629351885575123`*^9}, {3.662935676928521*^9, 
   3.6629356806707153`*^9}, {3.820142950041662*^9, 3.820142952183817*^9}, {
   3.820151401680382*^9, 
   3.820151404111018*^9}},ExpressionUUID->"ee4c402c-294e-47f6-8f20-\
936b1239e01f"],

Cell["Demographic data", "Subsubsection",
 CellChangeTimes->{{3.6629300756494093`*^9, 3.6629301174604807`*^9}, {
   3.662930152247402*^9, 3.662930178309421*^9}, {3.662930798413241*^9, 
   3.662930801365119*^9}, {3.6629312698640842`*^9, 3.662931280672957*^9}, 
   3.6629314656798353`*^9, {3.6629329013131437`*^9, 3.6629329059432497`*^9}, {
   3.6629340858191547`*^9, 3.662934087858817*^9}, {3.662934180889139*^9, 
   3.6629341872553883`*^9}, {3.662934522656699*^9, 3.662934524742794*^9}, {
   3.662935184855069*^9, 3.6629351885575123`*^9}, {3.662935676928521*^9, 
   3.6629356806707153`*^9}, {3.820151521075444*^9, 
   3.8201515248248568`*^9}},ExpressionUUID->"9a075043-6108-42dd-92a6-\
c8af091da019"],

Cell[CellGroupData[{

Cell["Model fitting", "Subsubsection",
 CellChangeTimes->{{3.6629300756494093`*^9, 3.6629301174604807`*^9}, {
   3.662930152247402*^9, 3.662930178309421*^9}, {3.662930798413241*^9, 
   3.662930801365119*^9}, {3.6629312698640842`*^9, 3.662931280672957*^9}, 
   3.6629314656798353`*^9, {3.6629329013131437`*^9, 3.6629329059432497`*^9}, {
   3.6629340858191547`*^9, 3.662934087858817*^9}, {3.662934180889139*^9, 
   3.6629341872553883`*^9}, {3.662934522656699*^9, 3.662934524742794*^9}, {
   3.662935184855069*^9, 3.6629351885575123`*^9}, {3.82015158002421*^9, 
   3.820151581416563*^9}},ExpressionUUID->"0594c910-ab66-4fdd-8b85-\
cdd5c1d4d3df"],

Cell["\<\
Imagine we have some data taken from an experiment and we would like to find \
a model that fits the data well. To start, let\[CloseCurlyQuote]s make up \
some data to use:\
\>", "Text",
 CellChangeTimes->{{3.820151593505913*^9, 
  3.8201516259326057`*^9}},ExpressionUUID->"89efcc58-3009-4574-8eb2-\
3926dd67f57c"],

Cell["\<\
If we have a good idea for a model that might fit the data, then we can use \
FindFit to look for the parameters that best fit the data\
\>", "Text",
 CellChangeTimes->{{3.820151629779784*^9, 
  3.8201516682324123`*^9}},ExpressionUUID->"ab834f2d-9a2b-4446-9a8b-\
397abc86aeb0"],

Cell["Now let\[CloseCurlyQuote]s plot the model against the data", "Text",
 CellChangeTimes->{{3.820151699011963*^9, 
  3.820151714753317*^9}},ExpressionUUID->"91b90b08-05a5-406a-8efd-\
c4174ee17ad8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Image identification (using neural networks)", "Subsubsection",
 CellChangeTimes->{{3.8201513814350443`*^9, 
  3.820151388898222*^9}},ExpressionUUID->"717a81cf-81a8-4bde-9d94-\
08a67cd23f26"],

Cell["\<\
Later in this module we will build a neural network model that can recognise \
features in images. Mathematica has sophisticated versions of these models \
built in. For example, ImageIdentify will try to produce a description of the \
contents of an image.\
\>", "Text",
 CellChangeTimes->{{3.820151732143094*^9, 
  3.820151812310212*^9}},ExpressionUUID->"9d6f8f8c-e7ad-4f45-9a2b-\
ee98de4d4ddf"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{681, 676},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"cce51ed8-e798-44a9-97ba-e844fd0ee222"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 228, 4, 156, "Title",ExpressionUUID->"7ab76728-271d-441a-8704-0f41514e9f23"],
Cell[811, 28, 793, 16, 78, "Text",ExpressionUUID->"734a056c-952c-4235-8b14-6b468f90661c"],
Cell[CellGroupData[{
Cell[1629, 48, 173, 3, 67, "Section",ExpressionUUID->"e9c80d38-e032-46f2-919e-beb1437b2280"],
Cell[CellGroupData[{
Cell[1827, 55, 168, 3, 53, "Subsection",ExpressionUUID->"5421538e-0181-4f73-a203-870bf6bf668a"],
Cell[1998, 60, 198, 4, 34, "Text",ExpressionUUID->"b8af9a3e-131e-43d9-b5ec-9d3b84e0f1a5"],
Cell[2199, 66, 481, 13, 71, "ItemNumbered",ExpressionUUID->"ce0e1982-25cc-43d7-ac9b-7060e600e853"],
Cell[2683, 81, 354, 10, 51, "ItemNumbered",ExpressionUUID->"f4274cc8-8e8e-451c-9595-c72f788a586f"],
Cell[3040, 93, 434, 13, 56, "Text",ExpressionUUID->"bec3827a-cf8c-4af9-8335-aacb2c478b04"],
Cell[3477, 108, 267, 6, 56, "Text",ExpressionUUID->"79d4e2e5-f43e-42da-aa8c-5f0d4e417aef"],
Cell[3747, 116, 287, 6, 51, "Item",ExpressionUUID->"dd3ed9f4-727a-47c3-848d-bface158a38e"],
Cell[4037, 124, 339, 7, 71, "Item",ExpressionUUID->"eb22c8c6-d770-4392-bc4c-397c13256ed0"],
Cell[4379, 133, 309, 6, 51, "Item",ExpressionUUID->"e96b83a8-4959-4ed7-88fb-1654daaa4242"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4725, 144, 161, 3, 53, "Subsection",ExpressionUUID->"7478486d-6e17-4325-b0b3-9c67e75ab5b7"],
Cell[4889, 149, 391, 8, 78, "Text",ExpressionUUID->"bf3b78f1-91b0-49b0-b97f-9e8527de615e"],
Cell[CellGroupData[{
Cell[5305, 161, 192, 3, 28, "Input",ExpressionUUID->"d42508b4-5994-410d-b383-2904339da7d1"],
Cell[5500, 166, 148, 2, 32, "Output",ExpressionUUID->"dccbe99b-02cd-4efd-8c31-b3c26b6ca534"]
}, Open  ]],
Cell[5663, 171, 562, 14, 78, "Text",ExpressionUUID->"01978aac-ac80-4d4c-ab5f-9aefb723ff99"],
Cell[6228, 187, 289, 7, 34, "Text",ExpressionUUID->"702a1329-ef71-4729-994f-3e0b50d39993"],
Cell[6520, 196, 211, 4, 28, "Input",ExpressionUUID->"9c52a68b-a5c4-47c1-b65b-2d4b2d30962f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6768, 205, 169, 3, 53, "Subsection",ExpressionUUID->"d15ddccd-be87-4cb6-9b6a-1b9811557e19"],
Cell[6940, 210, 381, 8, 56, "Text",ExpressionUUID->"64f3875d-e334-49a1-8e66-12ea0f98f0b6"],
Cell[CellGroupData[{
Cell[7346, 222, 193, 3, 28, "Input",ExpressionUUID->"c21aa4bc-da52-49b7-8fcb-b82806520793"],
Cell[7542, 227, 148, 2, 53, "Output",ExpressionUUID->"2f4dc688-cfa3-4e82-afcd-f43d6c495363"]
}, Open  ]],
Cell[7705, 232, 369, 9, 56, "Text",ExpressionUUID->"62a5f77a-6853-4a62-bbcc-9cb5fdab217d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8111, 246, 154, 3, 53, "Subsection",ExpressionUUID->"4b0e70db-dd22-4092-bf8c-4f682ee3cf32"],
Cell[8268, 251, 799, 20, 100, "Text",ExpressionUUID->"8f8c6abc-5c96-4602-ace3-c65147ee6b59"],
Cell[CellGroupData[{
Cell[9092, 275, 197, 3, 28, "Input",ExpressionUUID->"5d452a56-8110-4773-ba9c-fb7106d637db"],
Cell[9292, 280, 17871, 414, 141, "Output",ExpressionUUID->"2ea10937-3d42-4838-ac74-a9791098dfbc"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[27224, 701, 157, 3, 67, "Section",ExpressionUUID->"86634427-6068-4a28-8476-2cfdaae8d32f"],
Cell[CellGroupData[{
Cell[27406, 708, 216, 4, 53, "Subsection",ExpressionUUID->"c94d086a-4f32-4901-85c8-169906038d0e"],
Cell[27625, 714, 561, 12, 100, "Text",ExpressionUUID->"1bd4dc45-46e4-43fa-ac2e-b363f1b03673"],
Cell[CellGroupData[{
Cell[28211, 730, 226, 4, 44, "Subsubsection",ExpressionUUID->"2c1f174d-ebb1-45a5-b841-43a4013d3bbf"],
Cell[28440, 736, 457, 9, 56, "Text",ExpressionUUID->"dbee15fe-0790-49fd-8fd8-c1a7cab8add3"],
Cell[28900, 747, 225, 4, 28, "Input",ExpressionUUID->"ead05ce2-3694-48d0-8f12-f795d8c85fcb"],
Cell[29128, 753, 526, 9, 78, "Text",ExpressionUUID->"b14ee7a6-6efb-4924-b34b-16e95dcbdf3e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29691, 767, 204, 3, 44, "Subsubsection",ExpressionUUID->"823d59df-934e-41dc-a8cc-b180b9265b30"],
Cell[29898, 772, 309, 7, 56, "Text",ExpressionUUID->"2bf81546-1c17-47af-aa8f-7d9778cd6eb7"],
Cell[CellGroupData[{
Cell[30232, 783, 149, 2, 28, "Input",ExpressionUUID->"72585ea3-0aaf-4480-b4f4-a3a418a39c79"],
Cell[30384, 787, 152, 2, 32, "Output",ExpressionUUID->"30dec766-9d31-4d09-a77c-93856c978f8e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[30597, 796, 171, 3, 53, "Subsection",ExpressionUUID->"368550de-5d09-415d-a303-7a2ce5fcdbb3"],
Cell[30771, 801, 367, 8, 56, "Text",ExpressionUUID->"84abb4e1-c55c-444f-a2f6-99abe2b41ade"],
Cell[CellGroupData[{
Cell[31163, 813, 360, 10, 28, "Input",ExpressionUUID->"bf8566ce-65b4-4d13-ba89-5110a11adf22"],
Cell[31526, 825, 170, 3, 49, "Output",ExpressionUUID->"569de6e2-d772-4bad-b0cc-75c99183a9a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31733, 833, 331, 10, 28, "Input",ExpressionUUID->"316cc436-e90d-4a1a-9f71-dcf3fe5b8306"],
Cell[32067, 845, 169, 3, 49, "Output",ExpressionUUID->"f2121a38-d66a-458f-90d8-451d784d8a5e"]
}, Open  ]],
Cell[32251, 851, 374, 8, 56, "Text",ExpressionUUID->"13b8f514-a265-4fe8-a654-cbaaf977e8af"],
Cell[32628, 861, 619, 17, 71, "Text",ExpressionUUID->"9848d03d-18f9-45c5-8067-bce72cf959cc"],
Cell[33250, 880, 293, 9, 54, "Input",ExpressionUUID->"74f6b4dc-0df2-472b-9fbc-b4c2436453dc"],
Cell[33546, 891, 402, 8, 78, "Text",ExpressionUUID->"0ed675c5-dfdb-4b3f-a139-63133b3e0c36"],
Cell[CellGroupData[{
Cell[33973, 903, 177, 2, 28, "Input",ExpressionUUID->"49321356-04a1-4a8c-a4ad-b1df0cbf6893"],
Cell[34153, 907, 152, 2, 32, "Output",ExpressionUUID->"90032d1f-88c9-45b3-a7e1-dbb43dfa8f81"]
}, Open  ]],
Cell[34320, 912, 154, 3, 28, "Input",ExpressionUUID->"5e035e13-a1a2-4a84-a60b-c54889d003a4"],
Cell[34477, 917, 156, 3, 28, InheritFromParent,ExpressionUUID->"8f74480e-f71f-4b2e-ad77-94bb75734808"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[34682, 926, 218, 4, 67, "Section",ExpressionUUID->"8c2164c1-c1b1-4d19-ad2e-4c9c2b262d6b"],
Cell[34903, 932, 587, 10, 122, "Text",ExpressionUUID->"7894d0e7-64f2-434a-acc6-2a9dd7fd3321"],
Cell[CellGroupData[{
Cell[35515, 946, 205, 3, 28, "Input",ExpressionUUID->"4a12faa6-e6e6-47e6-8964-a34ec469af5c"],
Cell[35723, 951, 168, 2, 32, "Output",ExpressionUUID->"15d5c4dc-64f6-454b-8699-de96e34f5a72"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35928, 958, 231, 4, 28, "Input",ExpressionUUID->"1c4d0289-ab52-4cf2-a1e5-ad1344cfc9fe"],
Cell[36162, 964, 192, 2, 32, "Output",ExpressionUUID->"56118afc-dd53-4caf-bacc-8907f2cb0476"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36391, 971, 159, 3, 53, "Subsection",ExpressionUUID->"7a9dc07e-5aed-42be-8031-6789c9a23d4f"],
Cell[36553, 976, 663, 14, 100, "Text",ExpressionUUID->"7e35aaeb-81da-4894-97ef-1f0231f07bf5"],
Cell[37219, 992, 164, 3, 34, "Text",ExpressionUUID->"fd9b6d07-420f-4bf5-aa03-f5c81ea4719d"],
Cell[CellGroupData[{
Cell[37408, 999, 204, 3, 28, "Input",ExpressionUUID->"b1183433-cc5a-4b51-81eb-36b4aadf6f6b"],
Cell[37615, 1004, 149, 2, 32, "Output",ExpressionUUID->"b1c34fd3-7740-44a0-a86d-d590e14f3b9b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37801, 1011, 256, 4, 28, "Input",ExpressionUUID->"2caedf12-04f9-4479-acc7-ff94a46814bb"],
Cell[38060, 1017, 170, 2, 32, "Output",ExpressionUUID->"3cf9f593-b017-4e4e-a857-acf9ceddb714"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38267, 1024, 258, 4, 28, "Input",ExpressionUUID->"ad671337-2ba9-4132-8763-d044ad6ed284"],
Cell[38528, 1030, 168, 3, 32, "Output",ExpressionUUID->"4bafde16-820c-4a85-8cd4-29cdfc57215f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38733, 1038, 259, 4, 28, "Input",ExpressionUUID->"f8f023f8-70cb-4d76-81e5-56b960816e61"],
Cell[38995, 1044, 238, 4, 34, "Output",ExpressionUUID->"4c42ee7f-270e-4b26-98cf-04493fee512b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39270, 1053, 228, 4, 28, "Input",ExpressionUUID->"383ea96c-6191-4950-b6ff-66db2af8632f"],
Cell[39501, 1059, 149, 2, 32, "Output",ExpressionUUID->"c8f25d80-c19a-4e5c-bc73-56132520c693"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[39699, 1067, 229, 4, 53, "Subsection",ExpressionUUID->"e1f91c5d-7a97-4f2c-9852-2bd80dde1d2c"],
Cell[39931, 1073, 351, 7, 78, "Text",ExpressionUUID->"9f7b82ec-80d0-49da-a199-c49021385ac5"],
Cell[40285, 1082, 192, 2, 34, "Text",ExpressionUUID->"5f211534-7d02-4040-8bdd-48b645100696"],
Cell[40480, 1086, 475, 13, 50, "Input",ExpressionUUID->"987fdc80-64a8-403d-9232-7c3efe774c7d"],
Cell[40958, 1101, 284, 6, 28, "Input",ExpressionUUID->"ebc32562-fe4b-4fa9-a427-94ea3ed705dd"],
Cell[CellGroupData[{
Cell[41267, 1111, 269, 6, 28, "Input",ExpressionUUID->"3b15c00c-a990-4789-b6bf-4047f02e6970"],
Cell[41539, 1119, 468, 14, 56, "Output",ExpressionUUID->"3be7f7d1-141a-42a5-b6a4-7948cbab316d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42044, 1138, 194, 3, 28, "Input",ExpressionUUID->"3e6121ed-f80f-4ba4-a449-e13ef7f97da6"],
Cell[42241, 1143, 172, 3, 32, "Output",ExpressionUUID->"cab37973-8091-4778-a922-8a35123fbb47"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[42462, 1152, 266, 6, 53, "Subsection",ExpressionUUID->"4d5e8ec3-1c96-42e9-b918-4e3e75774013"],
Cell[42731, 1160, 541, 10, 78, "Text",ExpressionUUID->"d4d1d2f6-cf19-4cf9-b0e7-f7d8b83f02a0"],
Cell[CellGroupData[{
Cell[43297, 1174, 248, 4, 28, "Input",ExpressionUUID->"4613abdf-763c-43ef-b476-8e0d1ff1db30"],
Cell[43548, 1180, 311, 8, 53, "Output",ExpressionUUID->"d6236470-293b-44d4-8874-ad9b5577ff33"]
}, Open  ]],
Cell[43874, 1191, 570, 12, 78, "Text",ExpressionUUID->"74a13c6c-f0e9-405a-b6f6-3349016db280"],
Cell[44447, 1205, 923, 17, 100, "Text",ExpressionUUID->"7e6c0d68-e025-432e-86db-78b445e65149"],
Cell[45373, 1224, 879, 14, 56, "Text",ExpressionUUID->"953c999c-9aab-493e-a080-7df09b5500d9"],
Cell[CellGroupData[{
Cell[46277, 1242, 150, 2, 28, "Input",ExpressionUUID->"a46f798d-0c28-46ad-93e6-59ff1228f191"],
Cell[46430, 1246, 356, 10, 56, "Output",ExpressionUUID->"66508cd8-3564-4cf7-8433-e327cd96f52e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46823, 1261, 148, 2, 28, "Input",ExpressionUUID->"3b00ffec-252d-480e-a361-8ef8bc16b34e"],
Cell[46974, 1265, 151, 2, 32, "Output",ExpressionUUID->"35fdc202-5c2f-4fd4-9a9e-9c1ab2d626f8"]
}, Open  ]],
Cell[47140, 1270, 814, 14, 56, "Text",ExpressionUUID->"a38713ae-45b2-4ec6-a048-8171ce24e2b2"],
Cell[47957, 1286, 619, 10, 34, "Text",ExpressionUUID->"db91b246-408c-4915-bd05-b415b5a185ed"],
Cell[CellGroupData[{
Cell[48601, 1300, 342, 7, 28, "Input",ExpressionUUID->"a9038343-b3e3-4240-96e6-c40d684ef0ad"],
Cell[48946, 1309, 319, 8, 53, "Output",ExpressionUUID->"498d54a3-12da-434b-ab9d-53b4edbdd82d"]
}, Open  ]],
Cell[49280, 1320, 508, 10, 34, "Text",ExpressionUUID->"f2a6b585-4be4-481a-9c21-026b87468ffb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49825, 1335, 159, 3, 53, "Subsection",ExpressionUUID->"e650e984-bdcd-4c4b-97c7-c568e0f8d7bd"],
Cell[49987, 1340, 909, 15, 100, "Text",ExpressionUUID->"339b5bd8-ba4c-4dba-9714-3c92289d8032"],
Cell[50899, 1357, 195, 3, 34, "Text",ExpressionUUID->"fb8df6d5-a2da-45aa-bde4-2f535d9b2c49"],
Cell[CellGroupData[{
Cell[51119, 1364, 236, 4, 28, "Input",ExpressionUUID->"d1b0060f-2d19-4176-ae61-3eda1c6faee3"],
Cell[51358, 1370, 154, 2, 32, "Output",ExpressionUUID->"fc77cbb2-c789-4304-adaa-6fb09d9cbd5e"]
}, Open  ]],
Cell[51527, 1375, 197, 3, 34, "Text",ExpressionUUID->"c7f4c0bf-8c9f-4e76-9ec3-82099cb4aafa"],
Cell[CellGroupData[{
Cell[51749, 1382, 219, 4, 28, "Input",ExpressionUUID->"b8da4766-0918-4696-a6e4-46830c1a37a1"],
Cell[51971, 1388, 152, 2, 32, "Output",ExpressionUUID->"6e2b30a6-e568-4cf9-aaa0-7a996077236c"]
}, Open  ]],
Cell[52138, 1393, 203, 3, 34, "Text",ExpressionUUID->"68141a0e-8cc4-4dba-824b-ec12d27a9771"],
Cell[CellGroupData[{
Cell[52366, 1400, 223, 4, 28, "Input",ExpressionUUID->"e174ba3b-60c0-4234-a549-a18e9d1f1acf"],
Cell[52592, 1406, 155, 2, 32, "Output",ExpressionUUID->"29b5dd69-6b90-4888-a98d-2e916633546d"]
}, Open  ]],
Cell[52762, 1411, 510, 9, 78, "Text",ExpressionUUID->"c674c2f3-df68-42cf-b4cf-bd1f59f9eed2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53309, 1425, 166, 3, 53, "Subsection",ExpressionUUID->"f5ff6221-2c54-4e34-ad0b-bb6bfc7132c1"],
Cell[53478, 1430, 852, 14, 144, "Text",ExpressionUUID->"40042d10-4572-4995-8d81-d86dc9f58632"],
Cell[54333, 1446, 619, 16, 75, "Input",ExpressionUUID->"05a4f09d-8e0a-4e07-bb97-294e40006af9"],
Cell[54955, 1464, 386, 8, 56, "Text",ExpressionUUID->"98d14176-731d-415c-a965-632bdb11ca1e"],
Cell[55344, 1474, 213, 5, 34, "Text",ExpressionUUID->"d52d045f-0fcc-4828-8bf3-12d617b9ce9b"],
Cell[55560, 1481, 234, 4, 28, "Input",ExpressionUUID->"fdbb84db-7156-4a81-9569-d83ada1aa0f4"],
Cell[55797, 1487, 644, 20, 58, "Text",ExpressionUUID->"f7d3a0e7-884e-4abf-84ba-0c0eb5ac946f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56478, 1512, 235, 4, 53, "Subsection",ExpressionUUID->"1c4ae4aa-1766-4e48-8eaf-d172dfef2398"],
Cell[CellGroupData[{
Cell[56738, 1520, 166, 3, 44, "Subsubsection",ExpressionUUID->"898a4170-9eb6-4163-8adc-0d9ff5efb767"],
Cell[56907, 1525, 427, 8, 78, "Text",ExpressionUUID->"1db20357-9c53-4b72-b3a7-5b15b85bc92a"],
Cell[57337, 1535, 967, 30, 67, "Input",ExpressionUUID->"3ec56a3e-853e-43ba-9029-8d03d743035f"],
Cell[58307, 1567, 336, 7, 56, "Text",ExpressionUUID->"ebce906f-c2d3-4fce-a69a-1ef0c2df6835"],
Cell[CellGroupData[{
Cell[58668, 1578, 210, 3, 28, "Input",ExpressionUUID->"305c927f-f332-4469-9abf-e6c27fdc974d"],
Cell[58881, 1583, 662, 21, 62, "Output",ExpressionUUID->"3537a219-1852-4dc3-93a2-dee1aa91baa9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59580, 1609, 209, 3, 28, "Input",ExpressionUUID->"c79ec6ba-0554-43ad-8009-94b7a3897c13"],
Cell[59792, 1614, 648, 20, 46, "Output",ExpressionUUID->"b86d86ae-3e26-4a45-a699-0b9f6d5fa151"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60477, 1639, 210, 3, 28, "Input",ExpressionUUID->"f7c801dd-e45c-4b27-bb87-c4a320ca3d6b"],
Cell[60690, 1644, 2574, 75, 98, "Output",ExpressionUUID->"25d8c57b-ef77-4754-ab63-338def0bd082"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[63313, 1725, 170, 3, 44, "Subsubsection",ExpressionUUID->"c5acfe33-0dac-4a96-99d3-1696ad2dcd74"],
Cell[63486, 1730, 404, 10, 78, "Text",ExpressionUUID->"4752f230-81ab-4f9d-9195-fe0dc9b46a4f"],
Cell[CellGroupData[{
Cell[63915, 1744, 302, 6, 28, "Input",ExpressionUUID->"626440c0-7cc6-4a6c-af25-5ce3c54ff553"],
Cell[64220, 1752, 239, 5, 32, "Output",ExpressionUUID->"7061d866-067b-46e3-8e55-a7aa67459fc8"]
}, Open  ]],
Cell[64474, 1760, 654, 13, 78, "Text",ExpressionUUID->"c263a9b6-ad15-4ed9-b4db-983b8d6d4a65"],
Cell[65131, 1775, 264, 5, 34, "Text",ExpressionUUID->"c64df597-bd6c-4ef6-984d-f5f791d6a99f"],
Cell[CellGroupData[{
Cell[65420, 1784, 365, 8, 32, "Input",ExpressionUUID->"2988bcc3-e2ad-464c-b18d-8de7bb63fbfd"],
Cell[65788, 1794, 242, 5, 32, "Output",ExpressionUUID->"002bcb4e-e1c2-42e5-bc3d-cefc1aa8b318"]
}, Open  ]],
Cell[66045, 1802, 266, 6, 34, "Text",ExpressionUUID->"6873f6b6-7cbe-4464-837f-6f38d13ca1ae"],
Cell[CellGroupData[{
Cell[66336, 1812, 356, 8, 28, "Input",ExpressionUUID->"67c31df5-0a69-4216-b0a3-3a5b66f88357"],
Cell[66695, 1822, 596, 16, 52, "Output",ExpressionUUID->"a70c5ce2-2b37-45c8-99a8-925a1b209bf1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[67340, 1844, 156, 3, 44, "Subsubsection",ExpressionUUID->"6fad8aac-b831-4d3a-9635-64f26a0d4b97"],
Cell[67499, 1849, 759, 15, 78, "Text",ExpressionUUID->"a94f2332-0afa-46c6-8b9a-72ac58a6069c"],
Cell[CellGroupData[{
Cell[68283, 1868, 235, 4, 28, "Input",ExpressionUUID->"0d3afbaf-5276-4045-a561-03f56207ea87"],
Cell[68521, 1874, 263, 5, 32, "Output",ExpressionUUID->"43fc8c7a-7913-4781-afbe-7263ac638367"]
}, Open  ]],
Cell[68799, 1882, 464, 9, 34, "Text",ExpressionUUID->"b0991f59-f176-4dbd-adb9-4f94d481ad40"],
Cell[CellGroupData[{
Cell[69288, 1895, 211, 3, 28, "Input",ExpressionUUID->"8394865e-f93c-4bd8-823d-67ac692c6c77"],
Cell[69502, 1900, 239, 5, 32, "Output",ExpressionUUID->"c5f9b538-dd94-49a0-bc03-2c969c5a350c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[69790, 1911, 229, 4, 44, "Subsubsection",ExpressionUUID->"ea71ea2f-1098-4e14-9bb6-23145503189f"],
Cell[70022, 1917, 842, 17, 122, "Text",ExpressionUUID->"167d3eef-85d0-464b-9622-df387c534f96"],
Cell[70867, 1936, 251, 4, 34, "Text",ExpressionUUID->"b80a6167-743c-4c2c-b1cb-b535af949bfa"],
Cell[CellGroupData[{
Cell[71143, 1944, 213, 3, 28, "Input",ExpressionUUID->"69b20ceb-480f-4624-8c9d-8e7b04862ad2"],
Cell[71359, 1949, 238, 5, 32, "Output",ExpressionUUID->"758b3dac-4128-44ed-b223-e0768c526ec5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71634, 1959, 212, 3, 28, "Input",ExpressionUUID->"3132521f-fac3-4dbc-a87a-21965eabdf9c"],
Cell[71849, 1964, 239, 5, 32, "Output",ExpressionUUID->"b7a1a42f-7914-4959-8f50-864adca316a9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[72137, 1975, 179, 3, 44, "Subsubsection",ExpressionUUID->"b47b3103-b773-4aa4-960d-5e0d59d31f1b"],
Cell[72319, 1980, 532, 13, 58, "Text",ExpressionUUID->"d771d246-b65d-4c54-b370-e52351cadc84"],
Cell[CellGroupData[{
Cell[72876, 1997, 260, 5, 28, "Input",ExpressionUUID->"549f07d7-9d0b-4963-a32c-90335fee9520"],
Cell[73139, 2004, 194, 4, 32, "Output",ExpressionUUID->"2a25e714-e2b1-4ace-a315-737596baad71"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73370, 2013, 250, 5, 28, "Input",ExpressionUUID->"445d0efb-c324-4b02-83a5-be82ac9df0c4"],
Cell[73623, 2020, 196, 4, 32, "Output",ExpressionUUID->"c6b13393-a78f-49e6-9a70-182f53421296"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73856, 2029, 286, 6, 28, "Input",ExpressionUUID->"2a9388e0-1228-4eac-86a1-5c31d69860d8"],
Cell[74145, 2037, 194, 4, 32, "Output",ExpressionUUID->"dd4b2a7e-fe84-47f3-919a-724a983b25cd"]
}, Open  ]],
Cell[74354, 2044, 335, 9, 56, "Text",ExpressionUUID->"0a7dfc67-44ea-4070-8d1e-5065ac605441"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74726, 2058, 230, 4, 44, "Subsubsection",ExpressionUUID->"156aaae4-1f33-4ba1-88af-07177cda2e17"],
Cell[74959, 2064, 378, 8, 56, "Text",ExpressionUUID->"e5034749-6cf5-4c2a-87a3-342d80acc8a9"],
Cell[CellGroupData[{
Cell[75362, 2076, 422, 8, 51, "Item",ExpressionUUID->"f092480a-53bc-4c9f-b97f-48144efa4685"],
Cell[CellGroupData[{
Cell[75809, 2088, 244, 4, 28, "Input",ExpressionUUID->"054f990d-f2b8-4620-bc30-0716b83c3073"],
Cell[76056, 2094, 498, 11, 23, "Message",ExpressionUUID->"9caf78ab-c44b-4f30-a785-b911c8e2ba03"],
Cell[76557, 2107, 266, 6, 32, "Output",ExpressionUUID->"216a08d8-a112-4b81-abd4-7e39369427fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76860, 2118, 196, 3, 28, "Input",ExpressionUUID->"23243b62-2086-4681-9a35-cff20fb3d0eb"],
Cell[77059, 2123, 200, 3, 32, "Output",ExpressionUUID->"c950338c-3cc0-4d4d-a7f4-825d86485ea9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77296, 2131, 198, 3, 28, "Input",ExpressionUUID->"461d0a28-757a-452f-9128-e751ae7f0f71"],
Cell[77497, 2136, 511, 16, 32, "Output",ExpressionUUID->"4008d906-3790-40ae-9b30-d84f369bf71f"]
}, Open  ]]
}, Open  ]],
Cell[78035, 2156, 459, 9, 31, "Item",ExpressionUUID->"649759c3-23bc-4aca-8350-ed7b17e2a665"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[78543, 2171, 162, 3, 53, "Subsection",ExpressionUUID->"213c83e7-5e67-49f2-8c97-35a9cb390ecf"],
Cell[78708, 2176, 334, 7, 56, "Text",ExpressionUUID->"e32cf44d-463c-414d-9f72-d27b8b193c85"],
Cell[CellGroupData[{
Cell[79067, 2187, 223, 4, 44, "Subsubsection",ExpressionUUID->"54cb31cc-5824-4dbc-8e72-c09e904f701f"],
Cell[79293, 2193, 252, 4, 34, "Text",ExpressionUUID->"da1e9a12-f1ae-422b-953f-e2a471ebcecd"],
Cell[CellGroupData[{
Cell[79570, 2201, 382, 8, 28, "Input",ExpressionUUID->"5b493225-0a0d-4393-a7d2-0e14033e2c74"],
Cell[79955, 2211, 355, 8, 32, "Output",ExpressionUUID->"26068c5a-ee6c-42f1-b3a4-cc20e56212ea"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[80359, 2225, 185, 3, 44, "Subsubsection",ExpressionUUID->"afc9e927-770b-48aa-8bb1-409d4a4b046c"],
Cell[80547, 2230, 280, 6, 56, "Text",ExpressionUUID->"5b32f711-7a9c-400c-b658-2ee176b872e4"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[80888, 2243, 179, 3, 67, "Section",ExpressionUUID->"a30d21ca-c5e3-481d-9a79-98743a1c5dd1"],
Cell[CellGroupData[{
Cell[81092, 2250, 264, 4, 53, "Subsection",ExpressionUUID->"c6036d63-d5d9-4356-8fd3-59c33f252790"],
Cell[81359, 2256, 594, 18, 56, "Text",ExpressionUUID->"938eb8e4-019e-419c-a713-a2e43cd80bc8"],
Cell[CellGroupData[{
Cell[81978, 2278, 330, 8, 32, "Input",ExpressionUUID->"b799b0c0-c026-42de-a8d1-382b25d501c6"],
Cell[82311, 2288, 7507, 142, 243, "Output",ExpressionUUID->"5ac5ed40-e9fa-439b-ad49-850db1f1cb39"],
Cell[89821, 2432, 409, 10, 23, "Message",ExpressionUUID->"c3edcef5-0308-429c-8710-357183b43f4b"],
Cell[90233, 2444, 317, 8, 35, "Output",ExpressionUUID->"f2df65f8-25cf-4004-92ac-fbeb4ac5a74c"]
}, Open  ]],
Cell[90565, 2455, 644, 17, 80, "Text",ExpressionUUID->"8b8b5afc-308d-45b5-9967-3c3671095b54"],
Cell[91212, 2474, 230, 5, 34, "Text",ExpressionUUID->"008ca6c5-eff3-4084-900c-948295c7aad6"],
Cell[91445, 2481, 715, 18, 102, "Text",ExpressionUUID->"bd987e9f-d74a-4b28-81cd-66e73ab05e00"],
Cell[92163, 2501, 348, 7, 78, "Text",ExpressionUUID->"aa62be9c-b70e-4f6f-b205-2109da3c04d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92548, 2513, 226, 4, 53, "Subsection",ExpressionUUID->"c68246d5-4cc3-4f19-9df5-910e82ab8919"],
Cell[92777, 2519, 315, 7, 56, "Text",ExpressionUUID->"8ae957cf-3812-4601-a9c1-f2313d861120"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93129, 2531, 162, 3, 53, "Subsection",ExpressionUUID->"4b483111-524b-4184-a4fa-5246a2f395f9"],
Cell[93294, 2536, 295, 6, 56, "Text",ExpressionUUID->"be843fdf-1c21-49b6-8f35-a8ad77e79ab2"],
Cell[93592, 2544, 198, 3, 34, "Text",ExpressionUUID->"43416209-c1ff-4c7d-9d8a-212705ea510e"],
Cell[93793, 2549, 271, 6, 56, "Text",ExpressionUUID->"ab8dc593-b38d-4e68-8531-19b3e5cd88f3"],
Cell[94067, 2557, 248, 6, 56, "Text",ExpressionUUID->"b06393df-786e-4d27-b1f3-0f4d900ea1ac"],
Cell[94318, 2565, 282, 6, 56, "Text",ExpressionUUID->"9eadf053-d28f-4404-a2d9-8f86ee2c0eac"],
Cell[94603, 2573, 385, 8, 78, "Text",ExpressionUUID->"0e2648f6-a359-469c-a7f2-fed6e0296215"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95025, 2586, 165, 3, 53, "Subsection",ExpressionUUID->"49393bed-8912-4075-aeef-5da71a658e08"],
Cell[95193, 2591, 298, 6, 56, "Text",ExpressionUUID->"e307366c-13f8-4d62-905f-1bded06d5da0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95528, 2602, 159, 3, 53, "Subsection",ExpressionUUID->"d7e0f9d8-68e3-4954-ae00-a3a645c3a8da"],
Cell[95690, 2607, 431, 8, 78, "Text",ExpressionUUID->"03156efd-d1cc-4cde-8622-3b30dcee9bff"],
Cell[96124, 2617, 202, 3, 34, "Text",ExpressionUUID->"0b188388-50c5-4a2d-8c08-b9f77ddc89a6"],
Cell[CellGroupData[{
Cell[96351, 2624, 172, 3, 44, "Subsubsection",ExpressionUUID->"e98bb504-c5c4-4c29-9bcb-41bdcb2bae4f"],
Cell[96526, 2629, 282, 6, 56, "Text",ExpressionUUID->"f60e5f29-4c43-49ee-aa8b-591c05749621"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[96857, 2641, 152, 3, 53, "Subsection",ExpressionUUID->"d94b83d3-3721-4067-8281-92a5f3337c70"],
Cell[97012, 2646, 279, 6, 56, "Text",ExpressionUUID->"b140b5ab-2692-4230-8d69-5eb14eec95de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97328, 2657, 165, 3, 53, "Subsection",ExpressionUUID->"b5c65735-9b3c-477f-b3b6-879149a64239"],
Cell[97496, 2662, 218, 5, 34, "Text",ExpressionUUID->"62d60d3c-2e98-4231-84af-831452138f8c"],
Cell[97717, 2669, 193, 3, 34, "Text",ExpressionUUID->"d748a471-6385-4cb3-a53a-dda290e81fe3"],
Cell[97913, 2674, 217, 5, 34, "Text",ExpressionUUID->"d8dc3445-60ab-49be-9963-d5aabddef1be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98167, 2684, 494, 7, 53, "Subsection",ExpressionUUID->"d204d0d2-fc98-4c04-af61-89bc64b0007c"],
Cell[98664, 2693, 418, 8, 100, "Text",ExpressionUUID->"69710dc1-d629-4a0f-862a-fea6e3c0aa68"],
Cell[99085, 2703, 173, 3, 34, "Text",ExpressionUUID->"93e117c2-f6fa-4b60-b6a1-a18f52da7df2"],
Cell[99261, 2708, 214, 4, 34, "Text",ExpressionUUID->"49c5a421-dfdf-4649-ae20-3d1495cb721b"],
Cell[99478, 2714, 166, 3, 34, "Text",ExpressionUUID->"6a32ec14-44b4-490f-9f40-40693d204900"],
Cell[99647, 2719, 485, 11, 56, "Text",ExpressionUUID->"f5031d34-03c7-4397-b806-8c5efe08e389"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100169, 2735, 169, 3, 53, "Subsection",ExpressionUUID->"faa06dfd-8957-4649-bfe2-9fd74c1081f5"],
Cell[100341, 2740, 241, 6, 34, "Text",ExpressionUUID->"f2275906-6222-4cd2-a726-1a6daa3b4f3f"],
Cell[100585, 2748, 158, 3, 34, "Text",ExpressionUUID->"307db4b0-4f41-4d34-a67d-a129149166f7"],
Cell[100746, 2753, 173, 3, 34, "Text",ExpressionUUID->"e8a5321f-1547-4124-a66c-c3cf8ebf6a81"],
Cell[100922, 2758, 167, 3, 34, "Text",ExpressionUUID->"13012d29-c5e8-47b5-a2ff-afa288d90502"],
Cell[101092, 2763, 176, 3, 34, "Text",ExpressionUUID->"c23621fd-d21f-4644-b88e-200e782619d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101305, 2771, 170, 3, 53, "Subsection",ExpressionUUID->"76792a2e-193d-4a2c-89c1-9312563df7d1"],
Cell[101478, 2776, 275, 6, 56, "Text",ExpressionUUID->"7a14dc55-1891-42f1-ba67-e8e35060ec4d"],
Cell[101756, 2784, 281, 4, 44, "Subsubsection",ExpressionUUID->"4bf131d8-ff3f-436a-981c-86ec7ad9365b"],
Cell[102040, 2790, 660, 9, 36, "Subsubsection",ExpressionUUID->"0a08396c-7adc-49bf-b047-c7d066a65bd4"]
}, Open  ]],
Cell[102715, 2802, 534, 8, 53, "Subsection",ExpressionUUID->"74270431-1aca-48c0-817b-2a8004b06b78"],
Cell[CellGroupData[{
Cell[103274, 2814, 693, 10, 37, "Subsection",ExpressionUUID->"cfcb9416-af66-44ee-b534-fd7b05cb175d"],
Cell[103970, 2826, 698, 10, 44, "Subsubsection",ExpressionUUID->"d7ebb0b1-a77f-4326-9209-af46946edcf9"],
Cell[104671, 2838, 688, 10, 36, "Subsubsection",ExpressionUUID->"1b972a06-e27a-4730-918a-7bdb40f813f0"],
Cell[105362, 2850, 747, 11, 36, "Subsubsection",ExpressionUUID->"ee4c402c-294e-47f6-8f20-936b1239e01f"],
Cell[106112, 2863, 700, 10, 36, "Subsubsection",ExpressionUUID->"9a075043-6108-42dd-92a6-c8af091da019"],
Cell[CellGroupData[{
Cell[106837, 2877, 642, 9, 36, "Subsubsection",ExpressionUUID->"0594c910-ab66-4fdd-8b85-cdd5c1d4d3df"],
Cell[107482, 2888, 324, 7, 56, "Text",ExpressionUUID->"89efcc58-3009-4574-8eb2-3926dd67f57c"],
Cell[107809, 2897, 287, 6, 56, "Text",ExpressionUUID->"ab834f2d-9a2b-4446-9a8b-397abc86aeb0"],
Cell[108099, 2905, 200, 3, 34, "Text",ExpressionUUID->"91b90b08-05a5-406a-8efd-c4174ee17ad8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108336, 2913, 197, 3, 44, "Subsubsection",ExpressionUUID->"717a81cf-81a8-4bde-9d94-08a67cd23f26"],
Cell[108536, 2918, 407, 8, 78, "Text",ExpressionUUID->"9d6f8f8c-e7ad-4f45-9a2b-ee98de4d4ddf"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

