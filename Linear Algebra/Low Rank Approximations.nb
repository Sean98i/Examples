(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     50102,       1149]
NotebookOptionsPosition[     45263,       1074]
NotebookOutlinePosition[     45664,       1090]
CellTagsIndexPosition[     45621,       1087]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Low rank approximations", "Title",
 CellChangeTimes->{{3.8213726104536533`*^9, 3.821372616550712*^9}, {
  3.821382744663859*^9, 
  3.8213827570021143`*^9}},ExpressionUUID->"3749f0de-f693-4aaf-a5d1-\
16a58d07f4cf"],

Cell[TextData[{
 "We have seen how the singular value decomposition can be used to identify \
the \[OpenCurlyDoubleQuote]most important\[CloseCurlyDoubleQuote] information \
in a matrix by choosing the \[OpenCurlyDoubleQuote]best\
\[CloseCurlyDoubleQuote] low-rank approximation. One application of this idea \
is in the area of ",
 StyleBox["image compression",
  FontWeight->"Bold"],
 ", where we would like to represent the matrix of pixels in an image in an \
efficient way."
}], "Text",
 CellChangeTimes->{{3.821372661553203*^9, 3.821372687414013*^9}, {
  3.821372797917081*^9, 3.8213728215035667`*^9}, {3.821376874954278*^9, 
  3.821376881889963*^9}, {3.821382038599523*^9, 3.821382070208685*^9}, {
  3.82138276428161*^9, 3.8213827861708307`*^9}, {3.821382839933951*^9, 
  3.821382856315794*^9}, {3.821382896902396*^9, 3.821382934176283*^9}, {
  3.821383007558707*^9, 
  3.8213830079799557`*^9}},ExpressionUUID->"d7076964-f2b5-4bf2-86a7-\
3a425b151fe2"],

Cell[CellGroupData[{

Cell["Flags", "Section",
 CellChangeTimes->{{3.821382880429294*^9, 
  3.821382881489284*^9}},ExpressionUUID->"dbfdf7ce-b901-4594-b5a9-\
8e64244300ae"],

Cell["\<\
For image compression, the use of the singular value decomposition will be \
particularly effective in images where there are a lot of horizontal and \
vertical lines. National flags make perfect examples as many of them can be \
represented by low-rank matrices. Before we start, consider each of the flags \
below. Can you put them in order of rank? Can you predict the rank for each \
of the low-rank cases? \
\>", "Text",
 CellChangeTimes->{{3.821383010220546*^9, 3.8213830662243013`*^9}, {
  3.821428300946546*^9, 
  3.821428407792924*^9}},ExpressionUUID->"6f161d6e-5423-49ba-abd7-\
f8f757d66770"],

Cell[BoxData[
 RowBox[{
  RowBox[{"countries", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Ireland\>\"", ",", "\"\<Norway\>\"", ",", "\"\<Germany\>\"", ",", 
     "\"\<Finland\>\"", ",", "\"\<United Kingdom\>\"", ",", 
     "\"\<Czech Republic\>\"", ",", "\"\<Greece\>\"", ",", "\"\<Japan\>\"", 
     ",", "\"\<Nepal\>\"", ",", "\"\<Thailand\>\"", ",", "\"\<Madagascar\>\"",
      ",", "\"\<Tanzania\>\""}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8214287054236107`*^9, 3.8214287075228558`*^9}, {
   3.821428882593205*^9, 3.8214288847884073`*^9}, 3.821438113176599*^9},
 CellLabel->
  "In[143]:=",ExpressionUUID->"8e71b92d-7ba0-4ade-9c67-5f8a5d98e182"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Labeled", "[", 
    RowBox[{
     RowBox[{"Framed", "[", 
      RowBox[{"CountryData", "[", 
       RowBox[{"country", ",", "\"\<Flag\>\""}], "]"}], "]"}], ",", 
     "country"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"country", ",", "countries"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821428550465108*^9, 3.821428551483494*^9}, 
   3.821428661371194*^9, {3.821428704287668*^9, 3.821428789420484*^9}},
 CellLabel->
  "In[142]:=",ExpressionUUID->"80cf27e4-18d9-4c01-9b3c-56a577eabff8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     FrameBox[
      GraphicsBox[{
        Thickness[0.0010416666666666667`], {
         FaceForm[{
           RGBColor[0., 0.607843, 0.282353], 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 480.}, {
          320., 480.}, {320., 0.}, {0., 0.}}}]}, {
         FaceForm[{
           RGBColor[1., 1., 1.], 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{320., 480.}, {
          640., 480.}, {640., 0.}, {320., 0.}}}]}, {
         FaceForm[{
           RGBColor[1., 0.47451000000000004`, 0.], 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{640., 480.}, {
          960., 480.}, {960., 0.}, {640., 0.}}}]}}, {
       ImageSize -> {{128}, {85}}, AspectRatio -> Automatic, 
        ImageSize -> {484., 242.}, PlotRange -> {{0., 960.}, {0., 480.}}}], 
      StripOnInput -> False], "\"Ireland\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{
     FrameBox[
      GraphicsBox[{
        Thickness[0.0011363636363636363`], {
         FaceForm[{
           RGBColor[0.9372550000000001, 0.168627, 0.17647100000000002`], 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 0.}, {0., 
          640.}, {880., 640.}, {880., 0.}}}]}, {
         FaceForm[{
           RGBColor[1., 1., 1.], 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{240., 640.}, {
          400., 640.}, {400., 0.}, {240., 0.}}}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 400.}, {
          880., 400.}, {880., 240.}, {0., 240.}}}]}, {
         FaceForm[{
           RGBColor[0., 0.15686300000000003`, 0.407843], 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{280., 640.}, {
          360., 640.}, {360., 0.}, {280., 0.}}}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 360.}, {
          880., 360.}, {880., 280.}, {0., 280.}}}]}}, {
       ImageSize -> {{128}, {85}}, AspectRatio -> Automatic, 
        ImageSize -> {467., 341.}, PlotRange -> {{0., 880.}, {0., 640.}}}], 
      StripOnInput -> False], "\"Norway\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{
     FrameBox[
      GraphicsBox[{
        Thickness[0.00125], {
         Thickness[0.00125], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 0.}, {0., 
          480.}, {800., 480.}, {800., 0.}}}]}, {
         FaceForm[{
           RGBColor[0.8666670000000001, 0., 0.], 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 320.}, {
          800., 320.}, {800., 0.}, {0., 0.}}}]}, {
         FaceForm[{
           RGBColor[1., 0.8078430000000001, 0.], 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 160.}, {
          800., 160.}, {800., 0.}, {0., 0.}}}]}}, {
       ImageSize -> {{128}, {85}}, AspectRatio -> Automatic, 
        ImageSize -> {500., 300.}, PlotRange -> {{0., 800.}, {0., 480.}}}], 
      StripOnInput -> False], "\"Germany\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{
     FrameBox[
      GraphicsBox[{
        Thickness[0.0006944444444444445], {
         FaceForm[{
           RGBColor[1., 1., 1.], 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 0.}, {0., 
          880.}, {1440., 880.}, {1440., 0.}}}]}, {
         FaceForm[{
           RGBColor[0., 0.20784300000000003`, 0.501961], 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 560.}, {
          1440., 560.}, {1440., 320.}, {0., 320.}}}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{400., 880.}, {
          640., 880.}, {640., 0.}, {400., 0.}}}]}}, {
       ImageSize -> {{128}, {85}}, AspectRatio -> Automatic, 
        ImageSize -> {497., 302.}, PlotRange -> {{0., 1440.}, {0., 880.}}}], 
      StripOnInput -> False], "\"Finland\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{
     FrameBox[
      GraphicsBox[{{
         RGBColor[0., 0.141176, 0.49019599999999997`], 
         PolygonBox[{{0, 201}, {400, 201}, {400, 401}, {0, 401}}]}, {{
          Thickness[0.00125], {
           FaceForm[{
             RGBColor[1., 1., 1.], 
             Opacity[1.]}], 
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
            0}}}, {{{0., 401.}, {0., 378.641}, {355.277, 201.}, {400., 
            201.}, {400., 223.359}, {44.723000000000006`, 401.}}, {{400., 
            401.}, {400., 378.641}, {44.723000000000006`, 201.}, {0., 201.}, {
            0., 223.363}, {355.277, 401.}}}]}, {
           FaceForm[{
             RGBColor[0.8117650000000001, 0.07843140000000001, 0.168627], 
             Opacity[1.]}], 
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
            1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
            0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 201.}, {133.33200000000002`, 
            267.668}, {163.148, 267.668}, {29.812, 201.}}, {{0., 401.}, {
            133.33200000000002`, 334.332}, {103.52, 334.332}, {0., 
            386.094}}, {{236.85200000000003`, 334.332}, {370.188, 401.}, {
            400., 401.}, {266.668, 334.332}}, {{400., 201.}, {266.668, 
            267.668}, {296.47999999999996`, 267.668}, {400., 215.906}}}]}}, {{
           RGBColor[1., 1., 1.], 
           
           PolygonBox[{{{166.668, 401.}, {166.668, 201.}, {
            233.33200000000002`, 201.}, {233.33200000000002`, 401.}}, {{0., 
            334.332}, {0., 267.668}, {400., 267.668}, {400., 334.332}}}]}, {
           RGBColor[0.8117650000000001, 0.07843140000000001, 0.168627], 
           
           PolygonBox[{{{0., 321.}, {0., 281.}, {400., 281.}, {400., 
            321.}}, {{180., 401.}, {180., 201.}, {220., 201.}, {220., 
            401.}}}]}}}}, {
       ImageSize -> {{128}, {85}}, ImageSize -> {441., Automatic}, 
        PlotRange -> {{0, 400}, {201, 401}}}], StripOnInput -> False], 
     "\"UnitedKingdom\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{
     FrameBox[
      GraphicsBox[{
        Thickness[0.001388888888888889], {
         FaceForm[{
           RGBColor[0.843137, 0.07843140000000001, 0.10196100000000001`], 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 0.}, {0., 
          480.}, {720., 480.}, {720., 0.}}}]}, {
         FaceForm[{
           RGBColor[1., 1., 1.], 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 480.}, {
          720., 480.}, {720., 240.}, {0., 240.}}}]}, {
         FaceForm[{
           RGBColor[0.06666670000000002, 0.27058800000000005`, 0.494118], 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{360., 240.}, {0., 
          480.}, {0., 0.}}}]}}, {
       ImageSize -> {{128}, {85}}, AspectRatio -> Automatic, 
        ImageSize -> {497., 336.}, PlotRange -> {{0., 720.}, {0., 480.}}}], 
      StripOnInput -> False], "\"Czech Republic\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{
     FrameBox[
      GraphicsBox[{
        Thickness[0.0020833333333333333`], {
         FaceForm[{
           RGBColor[0.050980399999999995`, 0.368627, 0.686275], 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 0.}, {0., 
          320.}, {480., 320.}, {480., 0.}}}]}, {
         RGBColor[1., 1., 1.], 
         Thickness[0.074074075], 
         Opacity[1.], 
         CapForm["Butt"], 
         JoinForm[{"Miter", 4.}], 
         JoinedCurveBox[{{{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
          0}}, {{0, 2, 0}}, {{0, 2, 0}}}, {{{88.891, 320.}, {88.891, 
          124.445}}, {{0., 231.10899999999998`}, {177.777, 
          231.10899999999998`}}, {{177.777, 266.668}, {480., 266.668}}, {{
          177.777, 195.555}, {480., 195.555}}, {{0., 124.445}, {480., 
          124.445}}, {{0., 53.331999999999994`}, {480., 
          53.331999999999994`}}}, CurveClosed -> {0, 0, 0, 0, 0, 0}]}}, {
       ImageSize -> {{128}, {85}}, AspectRatio -> Automatic, 
        ImageSize -> {500., 334.}, PlotRange -> {{0., 480.}, {0., 320.}}}], 
      StripOnInput -> False], "\"Greece\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{
     FrameBox[
      GraphicsBox[{
        Thickness[0.001388888888888889], {
         FaceForm[{
           RGBColor[1., 1., 1.], 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 0.}, {0., 
          480.}, {720., 480.}, {720., 0.}}}]}, {
         FaceForm[{
           RGBColor[0.737255, 0., 0.17647100000000002`], 
           Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
          504., 240.}, {504., 160.47299999999998`}, {439.527, 96.}, {360., 
          96.}, {280.47299999999996`, 96.}, {216., 160.47299999999998`}, {
          216., 240.}, {216., 319.527}, {280.47299999999996`, 384.}, {360., 
          384.}, {439.527, 384.}, {504., 319.527}, {504., 240.}}}]}}, {
       ImageSize -> {{128}, {85}}, AspectRatio -> Automatic, 
        ImageSize -> {480., 319.}, PlotRange -> {{0., 720.}, {0., 480.}}}], 
      StripOnInput -> False], "\"Japan\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{
     FrameBox[
      GraphicsBox[{{
         Thickness[0.0017211703958691911`], {
          RGBColor[0., 0.21960800000000003`, 0.5764710000000001], 
          Thickness[0.07213642512908776], 
          Opacity[1.], 
          CapForm["Butt"], 
          JoinForm[{"Miter", 4.}], 
          
          JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
           0}}}, {{{21.047, 365.337471}, {507.949, 365.337471}, {21.047, 
           670.247471}, {21.047, 21.04847099999995}, {507.949, 
           21.04847099999995}, {21.047, 507.946471}}}, CurveClosed -> {1}]}, {
          FaceForm[{
            RGBColor[1., 1., 1.], 
            Opacity[1.]}], 
          
          FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{159.875, 
           129.36100000000002`}, {142.77299999999997`, 88.99700000000001}, {
           125.66799999999999`, 129.36100000000002`}}}]}}, {{
          RGBColor[
          0.8627450000000002, 0.07843140000000001, 0.23529400000000003`], 
          
          PolygonBox[{{{21.047, 365.337}, {507.949, 365.337}, {21.047, 
           670.247}}}]}, {
          RGBColor[
          0.8627450000000002, 0.07843140000000001, 0.23529400000000003`], 
          
          PolygonBox[{{21.047, 21.048}, {507.949, 21.048}, {21.047, 
           507.947}}]}}, {
         Thickness[0.0017211703958691911`], {
          FaceForm[{
            RGBColor[1., 1., 1.], 
            Opacity[1.]}], 
          
          FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYC4r0lkyVYnrk5uG37/PfKr1qH4oyJb2vq/RwW
SOnfVZlQ7dB84NRCV79Ih9eBO+Rab1Y63PpZl7XnRiKc/67G3jSOKx3OFwZp
EMyB62cAgR+5cPNh/AJbruuLU2ocgKrYGlfmOGjG9B/6eqHKIW6XJw9TdpbD
QaC12zZWOhSC1OlkOERabjlRNqnCoRVkEWuqgypb41Tn1+Vw98D4vdPzhJoj
YuF8kPN2cYbD9d8Gqe8JgpsPdo+CD9x+WHjA3IcePgAXt4qb
           "]], 
          
          FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
           187.90200000000002`, 434.552}, {187.90200000000002`, 409.626}, {
           167.695, 389.42299999999994`}, {142.77299999999997`, 
           389.42299999999994`}, {117.848, 389.42299999999994`}, {97.645, 
           409.626}, {97.645, 434.552}, {97.645, 459.474}, {117.848, 
           479.677}, {142.77299999999997`, 479.677}, {167.695, 479.677}, {
           187.90200000000002`, 459.474}, {187.90200000000002`, 434.552}}}], 
          
          FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{160.04299999999998`, 
           476.243}, {155., 496.02099999999996`}, {142.77299999999997`, 
           479.677}}}], 
          
          FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{174.684, 466.462}, {
           177.594, 486.661}, {160.04299999999998`, 476.243}}}], 
          
          FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{184.465, 451.822}, {
           194.883, 469.368}, {174.684, 466.462}}}], 
          
          FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{187.90200000000002`, 
           434.552}, {204.242, 446.779}, {184.465, 451.822}}}], 
          
          FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{184.465, 417.282}, {
           204.242, 422.325}, {187.90200000000002`, 434.552}}}], 
          
          FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{174.684, 
           402.64200000000005`}, {194.883, 399.73199999999997`}, {184.465, 
           417.282}}}], 
          
          FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{125.504, 476.243}, {
           130.547, 496.02099999999996`}, {142.77299999999997`, 479.677}}}], 
          
          FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{110.863, 466.462}, {
           107.953, 486.661}, {125.504, 476.243}}}], 
          
          FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{101.082, 451.822}, {
           90.664, 469.368}, {110.863, 466.462}}}], 
          
          FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{97.645, 434.552}, {
           81.30499999999999, 446.779}, {101.082, 451.822}}}], 
          
          FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{101.082, 417.282}, {
           81.30499999999999, 422.325}, {97.645, 434.552}}}], 
          
          FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{110.863, 
           402.64200000000005`}, {90.664, 399.73199999999997`}, {101.082, 
           417.282}}}], 
          
          FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
           208.85500000000002`, 193.19299999999998`}, {208.85500000000002`, 
           156.697}, {179.26999999999998`, 127.111}, {142.77299999999997`, 
           127.111}, {106.277, 127.111}, {76.691, 156.697}, {76.691, 
           193.19299999999998`}, {76.691, 229.689}, {106.277, 259.279}, {
           142.77299999999997`, 259.279}, {179.26999999999998`, 259.279}, {
           208.85500000000002`, 229.689}, {208.85500000000002`, 
           193.19299999999998`}}}], 
          
          FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{159.875, 
           129.36100000000002`}, {142.77299999999997`, 88.99700000000001}, {
           125.66799999999999`, 129.36100000000002`}}}], 
          
          FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{125.66799999999999`, 
           257.025}, {142.77299999999997`, 297.392}, {159.875, 257.025}}}], 
          
          FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{78.94100000000002, 
           176.091}, {38.574, 193.19299999999998`}, {78.94100000000002, 
           210.298}}}], 
          
          FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{206.605, 210.298}, {
           246.969, 193.19299999999998`}, {206.605, 176.091}}}], 
          
          FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{125.66799999999999`, 
           129.36100000000002`}, {90.67599999999999, 102.95400000000001`}, {
           96.043, 146.466}}}], 
          
          FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{159.875, 257.025}, {
           194.871, 283.4309999999999}, {189.5, 239.923}}}], 
          
          FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{78.94100000000002, 
           210.298}, {52.535000000000004`, 245.29}, {96.043, 239.923}}}], 
          
          FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{206.605, 176.091}, {
           233.012, 141.095}, {189.5, 146.466}}}], 
          
          FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{96.043, 146.466}, {
           52.535000000000004`, 141.095}, {78.94100000000002, 176.091}}}], 
          
          FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{189.5, 239.923}, {
           233.012, 245.29}, {206.605, 210.298}}}], 
          
          FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{96.043, 239.923}, {
           90.67599999999999, 283.4309999999999}, {125.66799999999999`, 
           257.025}}}], 
          
          FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{189.5, 146.466}, {
           194.871, 102.95400000000001`}, {159.875, 
           129.36100000000002`}}}]}}}, {
       ImageSize -> {{128}, {85}}, AspectRatio -> Automatic, 
        ImageSize -> {233., 282.}, PlotRange -> {{0., 581.}, {0., 709.}}}], 
      StripOnInput -> False], "\"Nepal\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{
     FrameBox[
      GraphicsBox[{
        Thickness[0.001388888888888889], {
         FaceForm[{
           RGBColor[0.9294119999999999, 0.109804, 0.141176], 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 0.}, {0., 
          480.}, {720., 480.}, {720., 0.}}}]}, {
         FaceForm[{
           RGBColor[1., 1., 1.], 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 400.}, {
          720., 400.}, {720., 80.}, {0., 80.}}}]}, {
         FaceForm[{
           RGBColor[0.141176, 0.11372500000000002`, 0.309804], 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 320.}, {
          720., 320.}, {720., 160.}, {0., 160.}}}]}}, {
       ImageSize -> {{128}, {85}}, AspectRatio -> Automatic, 
        ImageSize -> {486., 324.}, PlotRange -> {{0., 720.}, {0., 480.}}}], 
      StripOnInput -> False], "\"Thailand\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{
     FrameBox[
      GraphicsBox[{{
         Thickness[0.0010416666666666667`], {
          FaceForm[{
            RGBColor[1., 1., 1.], 
            Opacity[1.]}], 
          
          FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 480.}, {
           720., 480.}, {720., 0.}, {0., 0.}}}]}}, {
         FaceForm[{
           RGBColor[0.988235, 0.23921600000000004`, 0.196078], 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{240., 480.}, {
          720., 480.}, {720., 0.}, {240., 0.}}}]}, {
         FaceForm[{
           RGBColor[0., 0.494118, 0.22745100000000001`], 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{240., 240.}, {
          720., 240.}, {720., 0.}, {240., 0.}}}]}}, {
       ImageSize -> {{128}, {85}}, ImageSize -> {469., Automatic}, 
        PlotRange -> {{0., 720.}, {0., 480.}}}], StripOnInput -> False], 
     "\"Madagascar\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{
     FrameBox[
      GraphicsBox[{
        Thickness[0.0018148820326678765`], {
         FaceForm[{
           RGBColor[0.117647, 0.709804, 0.22745100000000001`], 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{35.105000000000004`, 
          373.71}, {515.105, 373.71}, {35.105000000000004`, 53.71}}}]}, {
         FaceForm[{
           RGBColor[0., 0.6392159999999999, 0.8666670000000001], 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{35.105000000000004`, 
          53.71}, {515.105, 53.71}, {515.105, 373.71}}}]}, {
         Thickness[0.0018148820326678765`], 
         FilledCurveBox[{{{0, 2, 0}}}, {{{35.105000000000004`, 53.71}, {
          515.105, 373.71}}}]}, {
         RGBColor[0.988235, 0.8196080000000001, 0.08627450000000002], 
         Thickness[0.22988505807622506`], 
         Opacity[1.], 
         CapForm["Butt"], 
         JoinForm[{"Miter", 4.}], 
         JoinedCurveBox[{{{0, 2, 0}}}, {{{35.105000000000004`, 
          53.70965599999994}, {515.105, 373.70965599999994`}}}, 
          CurveClosed -> {0}]}, {
         Thickness[0.15728977676950998`], 
         FilledCurveBox[{{{0, 2, 0}}}, {{{35.105000000000004`, 53.71}, {
          515.105, 373.71}}}]}, {
         Thickness[0.15728977676950998`], 
         CapForm["Butt"], 
         JoinForm[{"Miter", 4.}], 
         JoinedCurveBox[{{{0, 2, 0}}}, {{{35.105000000000004`, 
          53.70965599999994}, {515.105, 373.70965599999994`}}}, 
          CurveClosed -> {0}]}}, {
       ImageSize -> {{128}, {85}}, AspectRatio -> Automatic, 
        ImageSize -> {457., 304.}, 
        PlotRange -> {{35.105000000000004`, 515.105}, {53.71, 373.71}}}], 
      StripOnInput -> False], "\"Tanzania\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{3.821438166228996*^9},
 CellLabel->
  "Out[142]=",ExpressionUUID->"dc004fc5-8b56-4fd6-98de-97947a28c8c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rank-1 flags", "Subsection",
 CellChangeTimes->{{3.821383072394261*^9, 3.821383075441016*^9}, {
  3.8213840921253*^9, 
  3.8213840950978823`*^9}},ExpressionUUID->"5eb00f02-020c-49e5-8ca4-\
aa4fec3d964c"],

Cell["Let\[CloseCurlyQuote]s load the Irish flag from Mathematica\
\[CloseCurlyQuote]s CountryData:", "Text",
 CellChangeTimes->{{3.821383081088839*^9, 
  3.82138309596605*^9}},ExpressionUUID->"6046d0fa-1d7f-4f45-be9e-\
d6fbcc0ca3f2"],

Cell["\<\
This is an image built up out pixels represented by a matrix of size 127 x \
255. Each entry in the matrix contains three numbers, one each representing \
how much of red, green and blue is present in that pixel. For simplicity, let\
\[CloseCurlyQuote]s convert these three numbers to a single number by \
converting the colour image to grayscale.\
\>", "Text",
 CellChangeTimes->{{3.8213831103643837`*^9, 
  3.8213833248742323`*^9}},ExpressionUUID->"b5b4bc32-04a2-4e64-bbf9-\
0818428a5b70"],

Cell["\<\
Next we translate this image into 127 x 255 matrix of numbers in the range \
[0,1] where 0 represents black and 1 represents white.\
\>", "Text",
 CellChangeTimes->{{3.8213833599459248`*^9, 3.821383378997982*^9}, {
  3.821383503584065*^9, 
  3.821383535135927*^9}},ExpressionUUID->"df4ef440-7406-48c7-99c0-\
5ba676d7ae93"],

Cell["\<\
Now that we have a matrix, we can compute its singular value decomposition:\
\>", "Text",
 CellChangeTimes->{{3.821383494995969*^9, 3.82138350926128*^9}, {
  3.821383551504621*^9, 
  3.821383562177918*^9}},ExpressionUUID->"9a423892-17ec-4e08-a9f4-\
fb1bb5a16985"],

Cell["We can reconstruct the original matrix and image from these:", "Text",
 CellChangeTimes->{{3.821383693872184*^9, 3.821383707359193*^9}, {
  3.8213837392354593`*^9, 
  3.821383741176255*^9}},ExpressionUUID->"6d9dbc82-4b3d-471e-9dbc-\
5ae342bd3f78"],

Cell["\<\
Let\[CloseCurlyQuote]s look at the singular values, to see how many important \
singular vectors there are:\
\>", "Text",
 CellChangeTimes->{{3.8213836595139513`*^9, 
  3.82138368104055*^9}},ExpressionUUID->"4d5d85c3-cc55-4e3f-b367-\
d60ccd0c3cb1"],

Cell["\<\
This is a particularly nice matrix since it only has one singular value. It \
is therefore rank-1 and we have a very efficient low-rank approximation that \
is exact!\
\>", "Text",
 CellChangeTimes->{
  3.8213836837165117`*^9, {3.821383770328486*^9, 
   3.8213837890711317`*^9}},ExpressionUUID->"116c7595-d64c-4c06-9686-\
330fc56bbedc"],

Cell["\<\
This represents the flag by the first singular vector in U, which is just a \
vector with the same number 127 times. This tells us that the flag doesn\
\[CloseCurlyQuote]t change along the vertical.\
\>", "Text",
 CellChangeTimes->{{3.821383852557892*^9, 
  3.821383922658437*^9}},ExpressionUUID->"1eaff618-f5f2-46c2-b6ca-\
61f4537b720f"],

Cell["\<\
The first singular vector in V is just a 255 element vector of three numbers, \
representing the darkness of each of the three bands that change along the \
horizontal.\
\>", "Text",
 CellChangeTimes->{{3.821383931346808*^9, 
  3.821384022210888*^9}},ExpressionUUID->"7b2b597a-7fed-440c-9142-\
dfda27692b1f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Higher rank flags", "Subsection",
 CellChangeTimes->{{3.821384106132739*^9, 
  3.821384108673048*^9}},ExpressionUUID->"bc39e82c-e57e-499f-81a1-\
734e0db4a259"],

Cell["\<\
Other flags are less simple than the Irish flag. Let\[CloseCurlyQuote]s try \
to figure out what rank the Greek flag is.\
\>", "Text",
 CellChangeTimes->{{3.821385013126275*^9, 
  3.821385040495315*^9}},ExpressionUUID->"78a0e87f-fe3a-4590-9004-\
48fe5562d955"],

Cell["Let\[CloseCurlyQuote]s load the Greek flag from Mathematica\
\[CloseCurlyQuote]s CountryData:", "Text",
 CellChangeTimes->{{3.821383081088839*^9, 3.82138309596605*^9}, {
  3.821385064148036*^9, 
  3.8213850648173656`*^9}},ExpressionUUID->"1b0a0785-b3ea-4bbf-b9bf-\
3d96a3a55eb4"],

Cell["Now convert the colour image to grayscale.", "Text",
 CellChangeTimes->{{3.8213831103643837`*^9, 3.8213833248742323`*^9}, {
  3.821385089736887*^9, 
  3.821385097310774*^9}},ExpressionUUID->"b678c033-87e3-44fa-8467-\
dc0f283ca221"],

Cell["\<\
Next we translate this image into 169 x 255 matrix of numbers in the range \
[0,1] where 0 represents black and 1 represents white.\
\>", "Text",
 CellChangeTimes->{{3.8213833599459248`*^9, 3.821383378997982*^9}, {
  3.821383503584065*^9, 3.821383535135927*^9}, {3.8213851041799*^9, 
  3.821385105202289*^9}},ExpressionUUID->"c8d8249f-1ba1-4699-82d2-\
22380f73b0f9"],

Cell["\<\
Now that we have a matrix, we can compute its singular value decomposition:\
\>", "Text",
 CellChangeTimes->{{3.821383494995969*^9, 3.82138350926128*^9}, {
  3.821383551504621*^9, 
  3.821383562177918*^9}},ExpressionUUID->"cf937ae4-c415-4020-b3a5-\
abc2dac1c9be"],

Cell["It looks like there are only 3 (or maybe 6) singular values:", "Text",
 CellChangeTimes->{{3.821385185903266*^9, 
  3.821385203956046*^9}},ExpressionUUID->"47e35860-928e-449e-84a5-\
c324201ddfd9"],

Cell["\<\
We can reconstruct the original matrix and image from the full set:\
\>", "Text",
 CellChangeTimes->{{3.821383693872184*^9, 3.821383707359193*^9}, {
  3.8213837392354593`*^9, 3.821383741176255*^9}, {3.821385244938142*^9, 
  3.821385247909584*^9}},ExpressionUUID->"16af7c97-13d8-462a-977a-\
38591b2995c6"],

Cell["We can see how this is built up from three rank-1 matrices:", "Text",
 CellChangeTimes->{
  3.8213836837165117`*^9, {3.821383770328486*^9, 3.8213837890711317`*^9}, {
   3.82138527329053*^9, 
   3.8213852832772713`*^9}},ExpressionUUID->"1fb2d8bb-c885-45ea-88c7-\
75204566fbde"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Full rank flags", "Subsection",
 CellChangeTimes->{{3.8213854589645967`*^9, 
  3.821385462496249*^9}},ExpressionUUID->"5608ee5f-164a-4ee0-ae5b-\
7c72c87bb9b0"],

Cell["\<\
It doesn\[CloseCurlyQuote]t take much of a change to turn a nice and simple \
low-rank flag into something full-rank. Take the Scottish flag, for example:\
\>", "Text",
 CellChangeTimes->{{3.821385464213275*^9, 3.82138549712705*^9}, {
  3.821385530828796*^9, 
  3.821385531801023*^9}},ExpressionUUID->"7042c497-11b7-48db-8e3e-\
1b0be51def51"],

Cell["\<\
This looks just as simple as the other flags, but from the point of view of \
the SVD those diagonal lines are a disaster.\
\>", "Text",
 CellChangeTimes->{{3.821385680438339*^9, 
  3.821385708935869*^9}},ExpressionUUID->"d1d2db8f-5d19-4c75-9802-\
8ebf4925e504"],

Cell[TextData[{
 "Given that we know that this should be a simple one, is there something \
that we can do to make the SVD see it? How about if we rotate the image by ",
 Cell[BoxData[
  FormBox[
   FractionBox["\[Pi]", "2"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "90ab41ce-03a9-44e5-b5a1-69f7e7449f6c"],
 " first to transform diagonal lines to horizontal and vertical, and then do \
the SVD on the rotated image. "
}], "Text",
 CellChangeTimes->{{3.821385978642861*^9, 
  3.8213860553258257`*^9}},ExpressionUUID->"ac2ac73f-3e45-4898-92bf-\
ef64137f76b5"],

Cell["First, let\[CloseCurlyQuote]s resize and rotate the flag", "Text",
 CellChangeTimes->{{3.821386067566588*^9, 
  3.8213861027576857`*^9}},ExpressionUUID->"542958a3-c99d-4fa3-b2d1-\
007c6071cb71"],

Cell["Now compute the SVD", "Text",
 CellChangeTimes->{{3.821386165171637*^9, 
  3.821386167652452*^9}},ExpressionUUID->"ea00ed71-da08-4797-858f-\
e67743ce5ec8"],

Cell["\<\
We can check that the singular values now fall off quite a bit faster\
\>", "Text",
 CellChangeTimes->{{3.821386307963194*^9, 
  3.821386319987719*^9}},ExpressionUUID->"e9c3d471-e2b4-4dda-8bd8-\
16b2310fdaf6"],

Cell["Now reconstruct the original flag.", "Text",
 CellChangeTimes->{{3.821386361598111*^9, 3.821386367501863*^9}, {
  3.821386493965519*^9, 
  3.82138649550786*^9}},ExpressionUUID->"8bd7db97-1c8f-4062-be6e-\
2a979f30df47"],

Cell["We see that it\[CloseCurlyQuote]s almost perfectly rank-2!", "Text",
 CellChangeTimes->{{3.821386497599277*^9, 3.821386515332518*^9}, 
   3.8213866615178633`*^9},ExpressionUUID->"3aa38b2a-4927-4e3d-a39a-\
ee21f3c70147"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Image compression", "Section",
 CellChangeTimes->{{3.821384115462833*^9, 
  3.821384118210629*^9}},ExpressionUUID->"67e33619-aac1-491f-ace1-\
c91b1871ec2b"],

Cell["\<\
Compression using singular values can also be achieve with more complicated \
images. Let\[CloseCurlyQuote]s try it with a photo of UCD. First, we load the \
image and convert it to grayscale\
\>", "Text",
 CellChangeTimes->{{3.8213841216396017`*^9, 3.821384157179367*^9}, {
  3.8213847725247793`*^9, 
  3.821384782556816*^9}},ExpressionUUID->"d5f51845-d523-4ef8-a771-\
189bfd1c5768"],

Cell["Now convert the grayscale image to a matrix of pixel values.", "Text",
 CellChangeTimes->{{3.821384785808263*^9, 
  3.821384799667306*^9}},ExpressionUUID->"53ef4bd1-9038-4864-9c44-\
d179938da54c"],

Cell["Next, compute the SVD:", "Text",
 CellChangeTimes->{{3.8213848026313066`*^9, 
  3.82138480832417*^9}},ExpressionUUID->"5a71649c-81c9-49a3-8c83-\
ff6167c0b209"],

Cell["We can reconstruct the original image from the full SVD", "Text",
 CellChangeTimes->{{3.821384811366639*^9, 
  3.821384820774004*^9}},ExpressionUUID->"5f1ea7d6-391d-4832-a213-\
fa49e59830db"],

Cell["\<\
We can also get a pretty good approximation by only including the largest \
singular values and vectors\
\>", "Text",
 CellChangeTimes->{{3.821384824473394*^9, 
  3.8213848594327507`*^9}},ExpressionUUID->"f715f0d8-12d3-499e-badf-\
bf1faaac3190"],

Cell["\<\
If we plot the singular values, we see that they drop off rapidly until about \
the 100th value. This suggests that stopping around rank-100 is a good choice.\
\>", "Text",
 CellChangeTimes->{{3.821384880127262*^9, 
  3.8213849240534363`*^9}},ExpressionUUID->"b3243a7e-7259-45cc-823a-\
3fcc14ad0b83"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Singular value decomposition for approximating functions", "Section",
 CellChangeTimes->{{3.821386865128355*^9, 
  3.821386872862752*^9}},ExpressionUUID->"05e4041f-de11-44bb-987d-\
d36d041fdcdd"],

Cell[TextData[{
 "The singular value decomposition does not only apply to linear algebra. We \
can also use it to get an approximation to an arbitrary function. For \
example, say we have a functional ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["m", "n"], TraditionalForm]],ExpressionUUID->
  "a462a17a-f75d-4ddd-ad84-76fd86599a1f"],
 "(x), which is parametrized by n, and for each n we get a function of x. A \
simple example is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["m", "n"], "(", "x", ")"}], "=", 
    RowBox[{"sin", "(", 
     RowBox[{"n", " ", "x"}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "193d7400-c4e5-41b1-b238-acdb15ee130f"],
 " with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "\[LessEqual]", "n", "\[LessEqual]", "10"}], 
   TraditionalForm]],ExpressionUUID->"091a5871-1695-44b7-80e6-b6d5e27fe97a"],
 ". In reality, this could be a much more complicated function that we would \
like to approximate in terms of simple functions. In our example, we wish to \
approximate it by a linear combination of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"sin", "(", 
    RowBox[{"n", " ", "x"}], ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "14d2f31e-98c0-4a43-9f77-602088426cae"],
 " (i.e. basis functions) for specific values of ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b6683060-664a-4efa-a83d-3cc4b0ce351e"],
 ". The question then is how many specific values of n do we need in our \
basis so that we can  faithfully reproduce the function for all n? We can \
answer this question using the singular value decomposition. For this to \
work, it is important that the function has sufficiently many points in the x \
direction such that it is resolved. The number of singular values gives the \
number of basis functions required. These will all be of the same order. Once \
enough basis functions are included, any further singular values should \
decrease exponentially in magnitude."
}], "Text",
 CellChangeTimes->{{3.821386876469549*^9, 3.8213869459887857`*^9}, {
  3.821386976477116*^9, 
  3.821387140709669*^9}},ExpressionUUID->"2f7fef42-7f8c-4598-aa54-\
4fccb4f5aba9"],

Cell["Let\[CloseCurlyQuote]s evaluate our function on a grid:", "Text",
 CellChangeTimes->{{3.625592703474412*^9, 3.625592787842861*^9}, {
   3.6255930452958393`*^9, 3.6255930579436817`*^9}, 3.82138692823139*^9, {
   3.821387181034205*^9, 
   3.821387185227269*^9}},ExpressionUUID->"8f03376c-acdd-49c2-bdfb-\
261b871b7e0a"],

Cell[TextData[{
 "We see that in our ",
 Cell[BoxData[
  FormBox[
   RowBox[{"sin", "(", 
    RowBox[{"n", " ", "x"}], ")"}], TraditionalForm]],ExpressionUUID->
  "3084ddff-4fc7-4a39-a425-07ca061519ac"],
 " example, computing the singular values reveals that it is sufficient to \
have ~20 basis functions in order to reconstruct any value in the range 0\
\[LessEqual]n\[LessEqual]10."
}], "Text",
 CellChangeTimes->{{3.625593027415509*^9, 3.62559314262429*^9}, {
  3.821387274856439*^9, 
  3.821387288405575*^9}},ExpressionUUID->"63f1b98c-507c-485d-b9f4-\
6adcd44c3e32"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{681, 676},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"eafd9048-e396-4f23-a88a-cf6ebc7b00ad"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 219, 4, 96, "Title",ExpressionUUID->"3749f0de-f693-4aaf-a5d1-16a58d07f4cf"],
Cell[802, 28, 959, 18, 100, "Text",ExpressionUUID->"d7076964-f2b5-4bf2-86a7-3a425b151fe2"],
Cell[CellGroupData[{
Cell[1786, 50, 150, 3, 67, "Section",ExpressionUUID->"dbfdf7ce-b901-4594-b5a9-8e64244300ae"],
Cell[1939, 55, 612, 11, 122, "Text",ExpressionUUID->"6f161d6e-5423-49ba-abd7-f8f757d66770"],
Cell[2554, 68, 661, 13, 67, "Input",ExpressionUUID->"8e71b92d-7ba0-4ade-9c67-5f8a5d98e182"],
Cell[CellGroupData[{
Cell[3240, 85, 560, 14, 48, "Input",ExpressionUUID->"80cf27e4-18d9-4c01-9b3c-56a577eabff8"],
Cell[3803, 101, 28265, 618, 551, "Output",ExpressionUUID->"dc004fc5-8b56-4fd6-98de-97947a28c8c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32105, 724, 209, 4, 53, "Subsection",ExpressionUUID->"5eb00f02-020c-49e5-8ca4-aa4fec3d964c"],
Cell[32317, 730, 234, 4, 34, "Text",ExpressionUUID->"6046d0fa-1d7f-4f45-be9e-d6fbcc0ca3f2"],
Cell[32554, 736, 501, 9, 100, "Text",ExpressionUUID->"b5b4bc32-04a2-4e64-bbf9-0818428a5b70"],
Cell[33058, 747, 332, 7, 56, "Text",ExpressionUUID->"df4ef440-7406-48c7-99c0-5ba676d7ae93"],
Cell[33393, 756, 273, 6, 34, "Text",ExpressionUUID->"9a423892-17ec-4e08-a9f4-fb1bb5a16985"],
Cell[33669, 764, 253, 4, 34, "Text",ExpressionUUID->"6d9dbc82-4b3d-471e-9dbc-5ae342bd3f78"],
Cell[33925, 770, 258, 6, 34, "Text",ExpressionUUID->"4d5d85c3-cc55-4e3f-b367-d60ccd0c3cb1"],
Cell[34186, 778, 346, 8, 56, "Text",ExpressionUUID->"116c7595-d64c-4c06-9686-330fc56bbedc"],
Cell[34535, 788, 348, 7, 56, "Text",ExpressionUUID->"1eaff618-f5f2-46c2-b6ca-61f4537b720f"],
Cell[34886, 797, 318, 7, 56, "Text",ExpressionUUID->"7b2b597a-7fed-440c-9142-dfda27692b1f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35241, 809, 165, 3, 53, "Subsection",ExpressionUUID->"bc39e82c-e57e-499f-81a1-734e0db4a259"],
Cell[35409, 814, 270, 6, 56, "Text",ExpressionUUID->"78a0e87f-fe3a-4590-9004-48fe5562d955"],
Cell[35682, 822, 285, 5, 34, "Text",ExpressionUUID->"1b0a0785-b3ea-4bbf-b9bf-3d96a3a55eb4"],
Cell[35970, 829, 237, 4, 34, "Text",ExpressionUUID->"b678c033-87e3-44fa-8467-dc0f283ca221"],
Cell[36210, 835, 376, 7, 56, "Text",ExpressionUUID->"c8d8249f-1ba1-4699-82d2-22380f73b0f9"],
Cell[36589, 844, 273, 6, 34, "Text",ExpressionUUID->"cf937ae4-c415-4020-b3a5-abc2dac1c9be"],
Cell[36865, 852, 202, 3, 34, "Text",ExpressionUUID->"47e35860-928e-449e-84a5-c324201ddfd9"],
Cell[37070, 857, 314, 6, 34, "Text",ExpressionUUID->"16af7c97-13d8-462a-977a-38591b2995c6"],
Cell[37387, 865, 282, 5, 34, "Text",ExpressionUUID->"1fb2d8bb-c885-45ea-88c7-75204566fbde"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37706, 875, 165, 3, 53, "Subsection",ExpressionUUID->"5608ee5f-164a-4ee0-ae5b-7c72c87bb9b0"],
Cell[37874, 880, 352, 7, 56, "Text",ExpressionUUID->"7042c497-11b7-48db-8e3e-1b0be51def51"],
Cell[38229, 889, 272, 6, 56, "Text",ExpressionUUID->"d1d2db8f-5d19-4c75-9802-8ebf4925e504"],
Cell[38504, 897, 585, 13, 83, "Text",ExpressionUUID->"ac2ac73f-3e45-4898-92bf-ef64137f76b5"],
Cell[39092, 912, 200, 3, 34, "Text",ExpressionUUID->"542958a3-c99d-4fa3-b2d1-007c6071cb71"],
Cell[39295, 917, 161, 3, 34, "Text",ExpressionUUID->"ea00ed71-da08-4797-858f-e67743ce5ec8"],
Cell[39459, 922, 219, 5, 34, "Text",ExpressionUUID->"e9c3d471-e2b4-4dda-8bd8-16b2310fdaf6"],
Cell[39681, 929, 224, 4, 34, "Text",ExpressionUUID->"8bd7db97-1c8f-4062-be6e-2a979f30df47"],
Cell[39908, 935, 225, 3, 34, "Text",ExpressionUUID->"3aa38b2a-4927-4e3d-a39a-ee21f3c70147"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[40182, 944, 162, 3, 67, "Section",ExpressionUUID->"67e33619-aac1-491f-ace1-c91b1871ec2b"],
Cell[40347, 949, 394, 8, 56, "Text",ExpressionUUID->"d5f51845-d523-4ef8-a771-189bfd1c5768"],
Cell[40744, 959, 202, 3, 34, "Text",ExpressionUUID->"53ef4bd1-9038-4864-9c44-d179938da54c"],
Cell[40949, 964, 165, 3, 34, "Text",ExpressionUUID->"5a71649c-81c9-49a3-8c83-ff6167c0b209"],
Cell[41117, 969, 197, 3, 34, "Text",ExpressionUUID->"5f1ea7d6-391d-4832-a213-fa49e59830db"],
Cell[41317, 974, 255, 6, 56, "Text",ExpressionUUID->"f715f0d8-12d3-499e-badf-bf1faaac3190"],
Cell[41575, 982, 310, 6, 56, "Text",ExpressionUUID->"b3243a7e-7259-45cc-823a-3fcc14ad0b83"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41922, 993, 201, 3, 105, "Section",ExpressionUUID->"05e4041f-de11-44bb-987d-d36d041fdcdd"],
Cell[42126, 998, 2209, 49, 298, "Text",ExpressionUUID->"2f7fef42-7f8c-4598-aa54-4fccb4f5aba9"],
Cell[44338, 1049, 323, 5, 34, "Text",ExpressionUUID->"8f03376c-acdd-49c2-bdfb-261b871b7e0a"],
Cell[44664, 1056, 571, 14, 56, "Text",ExpressionUUID->"63f1b98c-507c-485d-b9f4-6adcd44c3e32"]
}, Open  ]]
}, Open  ]]
}
]
*)

