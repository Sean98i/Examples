(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    214671,       4094]
NotebookOptionsPosition[    202783,       3937]
NotebookOutlinePosition[    203307,       3956]
CellTagsIndexPosition[    203264,       3953]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Principal Component Analysis", "Section",
 CellChangeTimes->{{3.821298065639636*^9, 3.8212980721688423`*^9}, {
  3.821989679723143*^9, 
  3.8219896866761436`*^9}},ExpressionUUID->"71f30d7c-0d3d-4783-9b7b-\
e231f4081234"],

Cell["\<\
We have seen in the lectures how Principal Component Analysis can be used to \
find the \[OpenCurlyDoubleQuote]most important directions\
\[CloseCurlyDoubleQuote] in data. Let\[CloseCurlyQuote]s try it out with a \
simple 2D dataset that roughly fits on a line:\
\>", "Text",
 CellChangeTimes->{{3.821261714371255*^9, 3.8212617148696632`*^9}, {
  3.8219897689842377`*^9, 
  3.821989831978258*^9}},ExpressionUUID->"13af3e83-451e-4a4e-88d7-\
1000ad6fc587"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"3", "+", 
        RowBox[{"2", "x"}], "+", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", "0.6"}], "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "5", ",", "0.005"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.821183512484281*^9, 3.821183542049678*^9}, {
   3.821183580999058*^9, 3.821183586326396*^9}, {3.821183778328753*^9, 
   3.8211837816799097`*^9}, {3.8211838686763353`*^9, 3.821183892990655*^9}, {
   3.821183963150795*^9, 3.82118399538337*^9}, 3.821187466643404*^9, {
   3.821187813843504*^9, 3.8211878280974913`*^9}, {3.821352007799478*^9, 
   3.821352016455101*^9}, {3.821994659350267*^9, 3.8219946846573277`*^9}, {
   3.821995354085598*^9, 3.8219953729139423`*^9}, {3.821995481010845*^9, 
   3.821995510127408*^9}, {3.821995557919126*^9, 3.82199555819276*^9}, {
   3.821995856589182*^9, 3.821995856671425*^9}},
 CellLabel->
  "In[404]:=",ExpressionUUID->"c26d2979-b491-4d4f-ae69-d5ff3b1612dc"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", "data", "]"}]], "Input",
 CellChangeTimes->{{3.821993834751796*^9, 3.821993837950075*^9}},
 CellLabel->
  "In[405]:=",ExpressionUUID->"33383fe4-0f7a-4b99-82e6-d6411aeaba82"],

Cell["\<\
In the video lectures we had the matrix of data with rows corresponding to \
the variables and columns corresponding to the samples (measurements of those \
variables). Here, we work with the standard convention in statistics and have \
rows for samples and columns for variables so we will need to keep in mind \
this different convention.\
\>", "Text",
 CellChangeTimes->{{3.821989861059564*^9, 3.821989902750708*^9}, {
  3.821989949165165*^9, 3.8219899504028597`*^9}, {3.821989980794836*^9, 
  3.8219900416739597`*^9}, {3.821993351010601*^9, 
  3.821993451981394*^9}},ExpressionUUID->"bc293daf-5d4d-4a94-acf7-\
b496d1b1e65c"],

Cell["\<\
The first thing we need to do is subtract the mean in each column (i.e. \
standardize the data):\
\>", "Text",
 CellChangeTimes->{{3.821993750747079*^9, 3.821993770478919*^9}, {
  3.82199381826602*^9, 3.8219938229880257`*^9}, {3.821995665341416*^9, 
  3.821995672699621*^9}, {3.8219972361429787`*^9, 
  3.821997236843732*^9}},ExpressionUUID->"b6b26fe8-754b-4b3b-baf8-\
0a7a58ef3b15"],

Cell[BoxData[
 RowBox[{
  RowBox[{"standardizedData", "=", 
   RowBox[{"Standardize", "[", 
    RowBox[{"data", ",", "Mean", ",", 
     RowBox[{"1", "&"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.821993618645382*^9, 3.8219936864360332`*^9}, {
   3.821995639350088*^9, 3.821995655714013*^9}, 3.821996742438181*^9},
 CellLabel->
  "In[406]:=",ExpressionUUID->"d01f2047-ccfc-4d32-979a-9f5940748afd"],

Cell[BoxData[
 RowBox[{"\[Mu]", "=", 
  RowBox[{"Mean", "/@", 
   RowBox[{"Transpose", "[", "data", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.821995692214918*^9, 3.821995736244199*^9}},
 CellLabel->
  "In[407]:=",ExpressionUUID->"437b6333-1c71-49cb-9848-d84084e12c35"],

Cell[BoxData[
 RowBox[{"\[Sigma]", "=", 
  RowBox[{"StandardDeviation", "/@", 
   RowBox[{"Transpose", "[", "data", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.821995692214918*^9, 3.82199574484863*^9}},
 CellLabel->
  "In[408]:=",ExpressionUUID->"7e6e9579-7c60-4fe0-9791-c448a15f2eb7"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", "standardizedData", "]"}]], "Input",
 CellChangeTimes->{{3.821993831831574*^9, 3.821993857309126*^9}},
 CellLabel->
  "In[409]:=",ExpressionUUID->"39bee789-22b0-40b8-8f8d-0b4eadb84423"],

Cell["Next we compute the singular value decomposition.", "Text",
 CellChangeTimes->{{3.821993897758915*^9, 
  3.821993908180545*^9}},ExpressionUUID->"a30f84de-ae8b-4c7b-97de-\
c819284bd632"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"U", ",", "\[CapitalSigma]", ",", "V"}], "}"}], "=", 
   RowBox[{"SingularValueDecomposition", "[", "standardizedData", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]s", "=", 
   RowBox[{"Diagonal", "[", "\[CapitalSigma]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8212618519305487`*^9, 3.821261870287751*^9}, {
   3.821261963337182*^9, 3.821261973178479*^9}, {3.821262276401876*^9, 
   3.821262283794168*^9}, {3.821270514938692*^9, 3.821270520488521*^9}, {
   3.821352223160768*^9, 3.821352234590126*^9}, {3.8219938838675957`*^9, 
   3.821993932815226*^9}, 3.821996008649548*^9, {3.8219967327519827`*^9, 
   3.821996739622121*^9}, {3.822026153532114*^9, 3.822026163993668*^9}},
 CellLabel->
  "In[414]:=",ExpressionUUID->"af74fc54-8b44-4918-be38-6ede77eb598c"],

Cell["\<\
As expected, we have two singular values, one which is much larger than the \
other. This reflects the fact that there is much more variance along the line \
than orthogonal to it.\
\>", "Text",
 CellChangeTimes->{{3.821993948030292*^9, 
  3.821993987436459*^9}},ExpressionUUID->"11f67241-72b5-4653-a7d1-\
123a18402950"],

Cell["\<\
The singular vectors in the columns of V give us the \
\[OpenCurlyDoubleQuote]most important\[CloseCurlyDoubleQuote] directions in \
the data\
\>", "Text",
 CellChangeTimes->{{3.821994485779088*^9, 
  3.821994532624415*^9}},ExpressionUUID->"41482608-8006-4da5-af59-\
d3259d1e2ef8"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"standardizedData", ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ",", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Thick", ",", 
      RowBox[{"Line", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"\[Sigma]s", "[", 
          RowBox[{"[", "1", "]"}], "]"}], 
         SqrtBox[
          RowBox[{
           RowBox[{"Length", "[", "data", "]"}], "-", "1"}]]], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"-", 
           RowBox[{"V", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], "}"}]}], "]"}]}], 
     "}"}], "]"}], ",", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Thick", ",", 
      RowBox[{"Line", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"\[Sigma]s", "[", 
          RowBox[{"[", "2", "]"}], "]"}], 
         SqrtBox[
          RowBox[{
           RowBox[{"Length", "[", "data", "]"}], "-", "1"}]]], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"V", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
     "}"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821994514968671*^9, 3.821994625296584*^9}, {
  3.8219947123576097`*^9, 3.821994719208687*^9}, {3.821994771291559*^9, 
  3.821994784893441*^9}, {3.821994822734104*^9, 3.821994826501153*^9}, {
  3.821995311898563*^9, 3.821995340147822*^9}, {3.821995399879834*^9, 
  3.821995464667021*^9}, {3.821995502385129*^9, 3.821995503089501*^9}, {
  3.8219955346708393`*^9, 3.821995619641123*^9}, {3.821995826868766*^9, 
  3.821995931812011*^9}, {3.821996010758544*^9, 3.821996011675497*^9}, {
  3.821996705125779*^9, 3.821996705274102*^9}},
 CellLabel->
  "In[416]:=",ExpressionUUID->"c9bbdc93-e452-4cb9-acba-0f93dd7f6852"],

Cell["\<\
The singular vectors in the columns of U give us the projection of the data \
long those \[OpenCurlyDoubleQuote]most important\[CloseCurlyDoubleQuote] \
directions (i.e. the same as standardizedData.V)\
\>", "Text",
 CellChangeTimes->{{3.821994485779088*^9, 3.821994532624415*^9}, {
  3.8219948442301817`*^9, 
  3.8219948898067417`*^9}},ExpressionUUID->"7ba9227e-d85d-4804-9cbc-\
2ad09d70cc6c"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"U", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], ".", 
   RowBox[{"\[CapitalSigma]", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"1", ";;", "2"}], ",", 
      RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8219941406245527`*^9, 3.821994149032875*^9}, {
  3.821994198993887*^9, 3.821994227359392*^9}, {3.821994298993411*^9, 
  3.821994325200536*^9}},
 CellLabel->
  "In[179]:=",ExpressionUUID->"e347afe2-3daa-4da4-b452-84ed75088a6a"],

Cell["\<\
We can also directly compute this projected form of the data using \
PrincipalComponents\
\>", "Text",
 CellChangeTimes->{{3.821995944656753*^9, 
  3.821995958522593*^9}},ExpressionUUID->"396910eb-ad24-4c15-a09a-\
fddeef6de798"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"PrincipalComponents", "[", "standardizedData", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.821296954428936*^9, 3.8212969610848713`*^9}, {
   3.821297046382584*^9, 3.821297049224703*^9}, {3.821297080759111*^9, 
   3.82129708319392*^9}, {3.821297115143008*^9, 3.821297117942663*^9}, {
   3.821993484309148*^9, 3.8219935044129763`*^9}, {3.821993669295561*^9, 
   3.8219936927695932`*^9}, 3.821994436904553*^9},
 CellLabel->
  "In[180]:=",ExpressionUUID->"3f945c97-df4e-4628-a1eb-d94e7c0fa318"],

Cell[CellGroupData[{

Cell["In higher dimensions", "Subsection",
 CellChangeTimes->{{3.821996491584209*^9, 
  3.8219964943847303`*^9}},ExpressionUUID->"69fc2dd0-745f-4871-bc9a-\
569458acaa80"],

Cell["Construct a 3-dimensional dataset with 3 variables:", "Text",
 CellChangeTimes->{{3.821997198806382*^9, 
  3.821997216970263*^9}},ExpressionUUID->"a94eff33-39da-4dcc-9d1f-\
b82c2dcefac9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data3D", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"3", "+", 
        RowBox[{"2", "x"}], "+", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", "0.6"}], "]"}], "]"}]}], ",", 
       RowBox[{"7", "+", 
        RowBox[{"4", "x"}], "+", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", "6"}], "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "5", ",", "0.005"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.821183512484281*^9, 3.821183542049678*^9}, {
   3.821183580999058*^9, 3.821183586326396*^9}, {3.821183778328753*^9, 
   3.8211837816799097`*^9}, {3.8211838686763353`*^9, 3.821183892990655*^9}, {
   3.821183963150795*^9, 3.82118399538337*^9}, 3.821187466643404*^9, {
   3.821187813843504*^9, 3.8211878280974913`*^9}, {3.821352007799478*^9, 
   3.821352016455101*^9}, {3.821994659350267*^9, 3.8219946846573277`*^9}, {
   3.821995354085598*^9, 3.8219953729139423`*^9}, {3.821995481010845*^9, 
   3.821995510127408*^9}, {3.821995557919126*^9, 3.82199555819276*^9}, {
   3.821995856589182*^9, 3.821995856671425*^9}, {3.821996545507558*^9, 
   3.82199659837794*^9}, {3.8219966288277473`*^9, 3.821996628919792*^9}, {
   3.8219970546053*^9, 3.8219970547506647`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"1bda63a2-983a-4b16-a902-742b1f6f14a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPointPlot3D", "[", "data3D", "]"}]], "Input",
 CellChangeTimes->{{3.821996616133357*^9, 3.821996617867909*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"19be27e5-be4b-4772-b195-a6632107832a"],

Cell[BoxData[
 Graphics3DBox[{{
    {RGBColor[0.3315753, 0.4561011, 0.6388182], PointSize[
     0.009722222222222222], Point3DBox[CompressedData["
1:eJw83Hc81e/7B3B7HeOcY29n2ntk3xcqGiSjoYUiJUUkLVFJQwlNlTQoUqHQ
oBSlhChRUUbIyM5ev/P9uN8/j/5SnfM+9/28X/d1D2i+u9z8eLi4uLp4ubg4
f/7/K+jLvqVf8oSgU5qLdf2sAByQeujYsj8MSbXkRkTOCkOaZVyR4Btl/P1j
KKs76cObZD4Ii9tx7/EmWXiqEtOz8ulZdM4mM/7lMS7Y9YCuAI/k8L8/j/S5
EybGzCRg+bL7ztYPSJB85b8vVKm7ImeLnAh0zRau6Of8l/nXSUHeTpXP7xry
Q7ZjbOmLnTPo78r//c1NVB7s8iZKmA/ixBPFDey08OvfQd1SjUPkr6JQrGWh
Hjk+gUTqbwfbiNxFSVUpp2M3CMHQypMpxs4s/L4ZqPu6/oahcwIgmaiRwLWD
DJrr49+MaGQhlxj3a6/YZDi+uv78nbts/DwPkYrMWKTUc14IDFSPStE2hjuc
V6+/nY2as1wdE4JEQe9FSjhtgynMP2cOiq9c/MDQkwTPtyctTQxlgvF/X4/R
Mpln0jrlVPCqhJZF++n4+Z8g44b3O4u+8YN3UdrbLemTqGREg/NEeShSIWKj
0WESeNCSA2ePqsD85ypAXum2d9KWiEC/kZVM0BkVcJt/UOSQ0K53mEUB74Pk
zwvyv6H5z/sMpfaNaCzME4D0cSVqsykdWvb/742fo5/b5BNaXIVg1IPkcvep
LG6HQjTwaOPhl12CUKxaInD3KhtC/vdxg4uQQATP8pcTYuB6Vabv4YlxNP+2
L9GWwsEQ5QZe2HGKYmtbKQ3zqopRXqQrfxpLCDKO3NTa72+A260YPXfX3xus
PIsiy9c47H+mBU7/PdBrdE7I2DjQVxiexS6q+fBYHbfna5T7oeuQv5M4GNwt
TLm+ue/V/56S86hI/OUB9g0TEhiAdfRvHUPcziWoWfLd640XROG58hmh42eo
8F+z1ZegKDdRP81TgnB5uqVylyUTt38pYrv8VM1fIQoX/3w5ocOnC6r/+1gq
b1Ex9a5tsL8AjDp3XD/AoMB8v7xFtBBjKrorAtY7okvqX4nAVv//fb1DIQFb
z+6MFIESvz/baCRF3F9lyF8ugVXqIwJrRIb7Fl/kg/+9q9TDMpQUUt/adEAU
qo+b0X0r1HA/vkdz+lv/qhgIQZhN4ruQB9zFo/9725H3KDydLLFCmQwnPQXS
/vApYs8f0ICGjLmtuxB82iKfU1GvArb/vXE5+vB0RVzQYxFoznm248VuGu73
cuRr46rT0ssDKTYxR00TFOG/jxvzESX1u6y90isEU/qnRA75UbGHClRaJrD9
WiEfMPO8o/5en0SVFf99IeNqu9VlPaKgNftI1s5BDjupRGsku9YE8pAhR157
q1OiJkj/94GrkMBLJKWzUAj8dTL3Fzw3wuOrCp38s6c7wEMEHkVtL31MUoP/
3nb9J7TVLC/EMooEUcYhufSlbOyqGjXUjd9rDuUF5a74yRqkjNutGmXm28Un
B/PC2c2725Y782Nv1ejEpc00w0kSPL26w+HJGBduz2r0bdm7c77/SJA4UyUb
dlEeO6xBMT/4r7VaUaF2ZGWZXrYKbucatGrj9uw2ZzLMSl/vTB5mYp81iGGx
9ZDSchHIcTw3fuyWFG7/zyjO2X6ooUMCRPzKpDaFsGHe7WcUXXxjKv8YGU58
vrGp2U0L98tnNNF1pyE2XgD2W/fNvgllYM9fENfG403lugIw9a32Dkmbifvr
CzLs0efdyvHzdPLVorXLRl/NO/+C4uc0L7G5xKHRNXrFzTcyuB9rkWzhwUfS
KYJw7uMOR31LNvZfixR2rrZvvCsMTqln3r7P7sX9W4s+nOp98ZrjNnytUVRR
hSoeF1/RC7FehXYdYbjmfNqfW1oU9/tXlOA03smfSwKNsf0b1Vdr4PHyFSVW
f8kW2ywGRz/vWlSSw8Qe6tDDuVhPWytxuPOWu/i0PQOPozrUhS4VyydJADU0
5nz8FhJ2UofIQ+eo187zwOy2sM8VFkZ4fNWj7M8NMrfDyCDsfd1rYYoq9lOP
QgM+Ml+3i4NZqcK/mvdCeNzVoxCf2k4rTo71hJyj3NiohV19Qw8jezdk7CaD
UrofXxgfHbv6hsbX3/TJ6qLAi4xXJ42SydjVN3RHNKNtwVYKxAl+CvftNoJ5
V9+Q2m7VOoaHMBT3XBtN/fQTzbv6jn4ts2R9PkEBPuslDZsOT+J8/o6W+epe
kbshBfvjuf1SRInc+46iv+6Y1mqVA2un0wMvmAbY1Q8kGtwdXkqTgLhbJ08+
eyMP5/5z9QO9nTruGcr5XHQ+hzCuaiPs6gfSlaCeT8kWhdGJvJ5nXPLYVQP6
Ferea8WZ/zYb7bxfFkTDrhpQbijXU6OXJFBTPnX9TWYzmm/mBvR0dLWpTZEg
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
      "]]}, {}, {}}, {}},
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  Lighting->{{"Ambient", 
     GrayLevel[0.5]}, {"Directional", 
     GrayLevel[0.5], 
     ImageScaled[{0, 2, 2}]}, {"Directional", 
     GrayLevel[0.5], 
     ImageScaled[{2, 2, 2}]}, {"Directional", 
     GrayLevel[0.5], 
     ImageScaled[{2, 0, 2}]}},
  PlotRange->{{0., 5.}, {1.8821873336466823`, 14.036738301114985`}, Automatic},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8220430104688234`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"79565d58-14d1-4af7-8802-6b3a3bae9370"]
}, Open  ]],

Cell["\<\
In this case we choose to standardise by subtracting the mean and dividing by \
the standard deviation\
\>", "Text",
 CellChangeTimes->{{3.82199724472686*^9, 
  3.821997266020989*^9}},ExpressionUUID->"08af93f2-c183-4d1f-b1c9-\
3d5bcd736d65"],

Cell[BoxData[
 RowBox[{
  RowBox[{"standardizedData3D", "=", 
   RowBox[{"Standardize", "[", "data3D", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.821993618645382*^9, 3.8219936864360332`*^9}, {
   3.821995639350088*^9, 3.821995655714013*^9}, {3.82199666238344*^9, 
   3.821996664052538*^9}, 3.821996766151763*^9, 3.821996875146304*^9, {
   3.821997060305534*^9, 3.82199706396734*^9}, 3.8219971078179827`*^9},
 CellLabel->"In[44]:=",ExpressionUUID->"b888cc86-8542-42bd-ab93-2ada61862e66"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Mu]", "=", 
  RowBox[{"Mean", "/@", 
   RowBox[{"Transpose", "[", "data3D", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.821995692214918*^9, 3.821995736244199*^9}, {
  3.821996666532011*^9, 3.8219966668215227`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"56596cd2-1f76-4b86-8307-02b5cd2fef34"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.5`", ",", "7.994688773901404`", ",", "16.624642828050057`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.822043015523672*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"7af09e7e-9af6-4279-a468-a26afb862e77"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Sigma]", "=", 
  RowBox[{"StandardDeviation", "/@", 
   RowBox[{"Transpose", "[", "data3D", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.821995692214918*^9, 3.82199574484863*^9}, {
  3.821996668888715*^9, 3.8219966692606363`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"6a4c4c45-130f-41e1-9381-2abba3a044d3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.4455405563317827`", ",", "2.966964982838991`", ",", 
   "8.241785049688984`"}], "}"}]], "Output",
 CellChangeTimes->{3.822043018873396*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"01a6d881-3bac-49e0-9e68-10663823ccab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPointPlot3D", "[", "standardizedData3D", "]"}]], "Input",
 CellChangeTimes->{{3.821993831831574*^9, 3.821993857309126*^9}, {
  3.82199667493652*^9, 3.821996678741593*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"bde07c24-481b-4e47-97cb-883f26cb27f3"],

Cell[BoxData[
 Graphics3DBox[{{
    {RGBColor[0.3315753, 0.4561011, 0.6388182], PointSize[
     0.009722222222222222], Point3DBox[CompressedData["
1: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
HNv/7nM4H/v5WxbdF1cdxxsGkRQFzn7cpWn7y25uHPMSZdfG7RtHxtKEyu6x
WbQ0Nc/WGhtH3pUZ3imc4+jt0FIJxRP4006vZkvnOFo/nJO+0zqOWeJmpoU6
E0jzUu2dqRpHw4eL1F7tG8RjD3XmdVIGcE+k/EQFO3/cX4c/U9g7gbvUpqvP
SvTDA9y8KCyRjQftayuF9lPxwU33XqcTY5hQu1zENmIcF+y2ipjJpuECjmAN
tf5RnBiak9L8wH4PrxWcyo8GMfW2AP/ng+moyDm8X/LtOE4tjjvqfo2Gn2w0
onLEhtFGpOnUtD27vp9ttORRHcaUxFj+a4W5mCxTYFB+dxw1Vp99qSFBRe5R
2pbayAqYOpZ466vxOD5rWuC//XA/8lsnb1/SxkBlg6/2j3XYPLX631ebViou
3brrsk/pGNpaerlpsO9Rfky7Tlm/Hyv2XOZ6Yt6Pf50dQ8T3jmOxlXWk8MER
9P/5ve34oSmc+3jnx6QUuw8l6Fm0sHnBjQtXv7vsysZD8YaZpez8XKe9Nr/q
KQsfDSm761xqhKdFp6q+sPNEITpN/sZrdl54bX/mpJCAjpmWeWOzY/hh2dGg
29wDqLxQ1NCHzYcXjJ7pD+hg35+09pBS8TjuafC+cy84CV6s2c57LGcMnS+0
86gVDeHK9q1img5ZsPA4j/Ro+BgurL7+7fbXQcx54nqqtbYbne53nfF3HcO6
1k/C46JMfBbmM9q0uhMXf0q/q3J3DN3flsYlbxnGZaUrWPKpAfim5IPnsPYY
rqH2Hu0yGMZy93m+VVaVwDf16LcvG79qv2/YIDLajVv7K98sZvPcd5I6tYfX
jGFQ5nnGrZlR1J9LUSlXT8dl2rKswblRtCxSXrFvlIZ8i88JvFOdQ08HPtH3
naPYmfIkYnEsDY1OLf7Mt5iFK6MpSpA7is/LUjxH2fnb6Ea3sWF/L5/6bMOB
iFHcyHBhZChM4hd9fx5TrnkUWvjJwfvtKD60Cv5mV9iH3+rXFfB01KP/LrtP
B++NYnxUdOK43Ag+DXmwgPPOOIpeupBF0RnF0Z1LitRih5FOU69s1EjCQJc9
PZ57R1GFO2dF5u4hzM0Npfc7N+C6xBU8B9ay33/WQmZz/QCek8pcZj45giFd
w1v7/o2gw1f9MCsNGtqUdp18v6QSNi0vPOnRNYLbn6o/eOFBQc9a19X1IsX4
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
rBP/B6yv4vk=
      "]]}, {}, {}}, {}},
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  Lighting->{{"Ambient", 
     GrayLevel[0.5]}, {"Directional", 
     GrayLevel[0.5], 
     ImageScaled[{0, 2, 2}]}, {"Directional", 
     GrayLevel[0.5], 
     ImageScaled[{2, 2, 2}]}, {"Directional", 
     GrayLevel[0.5], 
     ImageScaled[{2, 0, 2}]}},
  PlotRange->{{-1.729456838169953, 1.7294568381699538`}, {-2.060186579757295, 
    2.036441131648325}, Automatic},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8220430222945433`*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"30357da9-3d1f-44f6-a153-7d115c1a1fb2"]
}, Open  ]],

Cell["Next we compute the singular value decomposition.", "Text",
 CellChangeTimes->{{3.821993897758915*^9, 
  3.821993908180545*^9}},ExpressionUUID->"34a552b3-4f8c-4508-8b2f-\
8e2c78529bb7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"U", ",", "\[CapitalSigma]", ",", "V"}], "}"}], "=", 
   RowBox[{"SingularValueDecomposition", "[", "standardizedData3D", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]s", "=", 
   RowBox[{"Diagonal", "[", "\[CapitalSigma]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8212618519305487`*^9, 3.821261870287751*^9}, {
   3.821261963337182*^9, 3.821261973178479*^9}, {3.821262276401876*^9, 
   3.821262283794168*^9}, {3.821270514938692*^9, 3.821270520488521*^9}, {
   3.821352223160768*^9, 3.821352234590126*^9}, {3.8219938838675957`*^9, 
   3.821993932815226*^9}, 3.821996008649548*^9, {3.821996687962088*^9, 
   3.8219966884770603`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"6b805889-0ff8-41e8-8b03-a66693ea9a0f"],

Cell["\<\
As expected, we have two singular values, one which is much larger than the \
other. This reflects the fact that there is much more variance along the line \
than orthogonal to it.\
\>", "Text",
 CellChangeTimes->{{3.821993948030292*^9, 
  3.821993987436459*^9}},ExpressionUUID->"f9b2a820-8642-4251-849c-\
81cf17d9fa5e"],

Cell["\<\
The singular vectors in the columns of V give us the \
\[OpenCurlyDoubleQuote]most important\[CloseCurlyDoubleQuote] directions in \
the data\
\>", "Text",
 CellChangeTimes->{{3.821994485779088*^9, 
  3.821994532624415*^9}},ExpressionUUID->"508072d1-43e3-49ce-9d6c-\
7ead8b87e770"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPointPlot3D", "[", 
    RowBox[{"standardizedData3D", ",", 
     RowBox[{"BoxRatios", "\[Rule]", "Automatic"}]}], "]"}], ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Thick", ",", 
      RowBox[{"Line", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"\[Sigma]s", "[", 
          RowBox[{"[", "1", "]"}], "]"}], 
         SqrtBox[
          RowBox[{
           RowBox[{"Length", "[", "data", "]"}], "-", "1"}]]], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"-", 
           RowBox[{"V", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], "}"}]}], "]"}]}], 
     "}"}], "]"}], ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Thick", ",", 
      RowBox[{"Line", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"\[Sigma]s", "[", 
          RowBox[{"[", "2", "]"}], "]"}], 
         SqrtBox[
          RowBox[{
           RowBox[{"Length", "[", "data", "]"}], "-", "1"}]]], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"V", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
     "}"}], "]"}], ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Thick", ",", 
      RowBox[{"Line", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"\[Sigma]s", "[", 
          RowBox[{"[", "3", "]"}], "]"}], 
         SqrtBox[
          RowBox[{
           RowBox[{"Length", "[", "data", "]"}], "-", "1"}]]], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"V", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "3"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
     "}"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821994514968671*^9, 3.821994625296584*^9}, {
  3.8219947123576097`*^9, 3.821994719208687*^9}, {3.821994771291559*^9, 
  3.821994784893441*^9}, {3.821994822734104*^9, 3.821994826501153*^9}, {
  3.821995311898563*^9, 3.821995340147822*^9}, {3.821995399879834*^9, 
  3.821995464667021*^9}, {3.821995502385129*^9, 3.821995503089501*^9}, {
  3.8219955346708393`*^9, 3.821995619641123*^9}, {3.821995826868766*^9, 
  3.821995931812011*^9}, {3.821996010758544*^9, 3.821996011675497*^9}, {
  3.821996693239285*^9, 3.821996698154256*^9}, {3.8219967972874804`*^9, 
  3.821996896685752*^9}, {3.821997020035323*^9, 3.8219970386502733`*^9}, {
  3.822026063152669*^9, 3.822026063636393*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"2e3fbdc7-8b36-4afc-9c75-3fefbeea6458"],

Cell[BoxData[
 Graphics3DBox[{{{
     {RGBColor[0.3315753, 0.4561011, 0.6388182], PointSize[
      0.009722222222222222], Point3DBox[CompressedData["
1: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
HNv/7nM4H/v5WxbdF1cdxxsGkRQFzn7cpWn7y25uHPMSZdfG7RtHxtKEyu6x
WbQ0Nc/WGhtH3pUZ3imc4+jt0FIJxRP4006vZkvnOFo/nJO+0zqOWeJmpoU6
E0jzUu2dqRpHw4eL1F7tG8RjD3XmdVIGcE+k/EQFO3/cX4c/U9g7gbvUpqvP
SvTDA9y8KCyRjQftayuF9lPxwU33XqcTY5hQu1zENmIcF+y2ipjJpuECjmAN
tf5RnBiak9L8wH4PrxWcyo8GMfW2AP/ng+moyDm8X/LtOE4tjjvqfo2Gn2w0
onLEhtFGpOnUtD27vp9ttORRHcaUxFj+a4W5mCxTYFB+dxw1Vp99qSFBRe5R
2pbayAqYOpZ466vxOD5rWuC//XA/8lsnb1/SxkBlg6/2j3XYPLX631ebViou
3brrsk/pGNpaerlpsO9Rfky7Tlm/Hyv2XOZ6Yt6Pf50dQ8T3jmOxlXWk8MER
9P/5ve34oSmc+3jnx6QUuw8l6Fm0sHnBjQtXv7vsysZD8YaZpez8XKe9Nr/q
KQsfDSm761xqhKdFp6q+sPNEITpN/sZrdl54bX/mpJCAjpmWeWOzY/hh2dGg
29wDqLxQ1NCHzYcXjJ7pD+hg35+09pBS8TjuafC+cy84CV6s2c57LGcMnS+0
86gVDeHK9q1img5ZsPA4j/Ro+BgurL7+7fbXQcx54nqqtbYbne53nfF3HcO6
1k/C46JMfBbmM9q0uhMXf0q/q3J3DN3flsYlbxnGZaUrWPKpAfim5IPnsPYY
rqH2Hu0yGMZy93m+VVaVwDf16LcvG79qv2/YIDLajVv7K98sZvPcd5I6tYfX
jGFQ5nnGrZlR1J9LUSlXT8dl2rKswblRtCxSXrFvlIZ8i88JvFOdQ08HPtH3
naPYmfIkYnEsDY1OLf7Mt5iFK6MpSpA7is/LUjxH2fnb6Ea3sWF/L5/6bMOB
iFHcyHBhZChM4hd9fx5TrnkUWvjJwfvtKD60Cv5mV9iH3+rXFfB01KP/LrtP
B++NYnxUdOK43Ag+DXmwgPPOOIpeupBF0RnF0Z1LitRih5FOU69s1EjCQJc9
PZ57R1GFO2dF5u4hzM0Npfc7N+C6xBU8B9ay33/WQmZz/QCek8pcZj45giFd
w1v7/o2gw1f9MCsNGtqUdp18v6QSNi0vPOnRNYLbn6o/eOFBQc9a19X1IsX4
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
rBP/B6yv4vk=
       "]]}, {}, {}}, {}}, 
   {RGBColor[1, 0, 0], Thickness[Large], 
    Line3DBox[{{0., 0., 0.}, {0.9691661733781691, 0.9652784562106824, 
     0.8448023127362583}}]}, 
   {RGBColor[1, 0, 0], Thickness[Large], 
    Line3DBox[{{0., 0., 0.}, {-0.22529134384534935`, -0.24209220700056142`, 
     0.5350732764685061}}]}, 
   {RGBColor[1, 0, 0], Thickness[Large], 
    Line3DBox[{{0., 0., 0.}, {-0.09980350077965297, 0.09812678169144297, 
     0.0023751220446161605`}}]}},
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->Automatic,
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{367.4655815390327, 280.00980304219433`},
  ImageSizeRaw->Automatic,
  Lighting->{{"Ambient", 
     GrayLevel[0.5]}, {"Directional", 
     GrayLevel[0.5], 
     ImageScaled[{0, 2, 2}]}, {"Directional", 
     GrayLevel[0.5], 
     ImageScaled[{2, 2, 2}]}, {"Directional", 
     GrayLevel[0.5], 
     ImageScaled[{2, 0, 2}]}},
  PlotRange->All,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-3.017676343629247, -0.9561408243765099, 1.1955852997846002`},
  ViewVertical->{-0.8315079969748908, 0.5410584001280303, 
   0.12589781021805377`}]], "Output",
 CellChangeTimes->{3.8220430294786177`*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"56986971-4755-48d6-99a2-a6795ca79163"]
}, Open  ]],

Cell["\<\
The singular vectors in the columns of U give us the projection of the data \
long those \[OpenCurlyDoubleQuote]most important\[CloseCurlyDoubleQuote] \
directions (i.e. the same as standardizedData.V)\
\>", "Text",
 CellChangeTimes->{{3.821994485779088*^9, 3.821994532624415*^9}, {
  3.8219948442301817`*^9, 
  3.8219948898067417`*^9}},ExpressionUUID->"8f635ade-7d12-4158-b8aa-\
ddc9a2cb0829"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPointPlot3D", "[", 
  RowBox[{
   RowBox[{"U", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"1", ";;", "3"}]}], "]"}], "]"}], ".", 
   RowBox[{"\[CapitalSigma]", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"1", ";;", "3"}], ",", 
      RowBox[{"1", ";;", "3"}]}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8219941406245527`*^9, 3.821994149032875*^9}, {
  3.821994198993887*^9, 3.821994227359392*^9}, {3.821994298993411*^9, 
  3.821994325200536*^9}, {3.821997138766798*^9, 3.821997144729169*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"8506e743-f06b-4467-b9ec-83824dc492b3"],

Cell[BoxData[
 Graphics3DBox[{{
    {RGBColor[0.3315753, 0.4561011, 0.6388182], PointSize[
     0.009722222222222222], Point3DBox[CompressedData["
1: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
oAWVlYkL5xyYPDJLndb0hYG190tS5QN4wTL5o0FvD86vnGV8IJ4FN5wSBg+q
9KL0lc2IwJJC9CM5FTzZno+/OzkIJ7m7kENIYaU3pQnsZDsNGyk7Mea4n/94
8AC+eCt/1Y8LUexqam1gbhpu+VXe/L2ejlYrItPZ1pNoW/y0Mo82Hw0TVZqq
3qyiJPsxkY2USbCz+ygrm1UAjO7MOhY1w/jW5fZ3m+As4BaqLWY8WoAUftyf
L9rMYorNxwPPREOgT5pJalKyCAKV6Spkni4hpQAL8efMOWCcOWL8kC0P3xC3
+FQX9uNejDE2CtTjkasayg84k5G1wDqJPX8JlZPeXKwgHYQ9vyvX1FRzwHma
L01nn8NoXG7yUVEvY/+1a3RSyfl4Lsppvd91Ak+sGvQdvRcIjqFHSqYsnuLc
Y+HH1T+7cbTrfn4xeTPqepXX/orPR9ozSmT2bj040535mUS8Bz+5POSx2I5A
Lc2GSaK5fsycGKy9wFqMNJbXC8KmCzF6ceqfZ1IQMD7vV02+t4h80pKRlLYF
WHRxiCzGehiNX77rzTApRPk6n6L/qhKxvFHqpdfvQXTkGLZ6Lz2P8i2OioQz
zfBogls1gX8ek0haFuJKZoEIDt4R0GvG9dPRX/6RDOP7PwICWr/8IXGslOFS
VhkSyXIlRTkW4qeUJ/a/Qpcw7NIh6e8aQWClAi7VMI5NOnn5OFmPbRkkB9MT
EsCZ7K5+52gbEjYaznam9GP8fftbOY8L0GKNjIntfgver3sduXNzHtv4k+VV
DZKgs0vq70nKcVTVnFRGhVJcUTXVuSnCg+cy5/IuJC1g7cO/1N/YSnHzmvrv
ytZGCMqXADqyITz1aUqgz6gNmZ8lZBLZhaPIOZVbkcn9mEukWLRIX4lHk6dF
96rLUS/bfuVh+SK6ydTtDTT2wx/BcGaZ57+Qy2sh6cPIANrkMcpl6TSgWT5V
oIRnAQ5KwzWjO2MYo/vscdXbRGysxycn/bJwnt3MJphlGWnN/FsyPlfBHvEd
enu3CpDPq/psq7hfX9ZeQtr1AZDj/ROspFeCfYTQRRWWUdTNqhJbGO7FIvZq
nhd340HuhGpCNPM45mxtMj4byMeFrfHDV4USMZynNOCe+QSGm3s6OefXo/Ec
Vfx/Mr5QcHpvmediPdLf76UxDp1HqiPVyR6Xw9GLfr2Mf3IU66ysRsSIGjBK
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
SXpYhP4HRwaK2g==
      "]]}, {}, {}}, {}},
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{385.8990561329182, 239.1944324333097},
  ImageSizeRaw->Automatic,
  Lighting->{{"Ambient", 
     GrayLevel[0.5]}, {"Directional", 
     GrayLevel[0.5], 
     ImageScaled[{0, 2, 2}]}, {"Directional", 
     GrayLevel[0.5], 
     ImageScaled[{2, 2, 2}]}, {"Directional", 
     GrayLevel[0.5], 
     ImageScaled[{2, 0, 2}]}},
  PlotRange->{{-3.39502472223224, 3.267072667282784}, {-1.8539073776324895`, 
    1.9054597550841046`}, Automatic},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.7362946305528322`, -2.517241236361906, 1.4487158154284736`},
  ViewVertical->{0.08778349092370984, -0.03547866128011562, 
   0.9955075706969876}]], "Output",
 CellChangeTimes->{3.8220430688824663`*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"3098f27f-a325-4f39-88bf-99f859e4a71e"]
}, Open  ]],

Cell["\<\
We can also directly compute this projected form of the data using \
PrincipalComponents\
\>", "Text",
 CellChangeTimes->{{3.821995944656753*^9, 
  3.821995958522593*^9}},ExpressionUUID->"66f3a089-4904-4909-90ad-\
9febc0488d42"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPointPlot3D", "[", 
  RowBox[{"PrincipalComponents", "[", "standardizedData3D", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.821296954428936*^9, 3.8212969610848713`*^9}, {
   3.821297046382584*^9, 3.821297049224703*^9}, {3.821297080759111*^9, 
   3.82129708319392*^9}, {3.821297115143008*^9, 3.821297117942663*^9}, {
   3.821993484309148*^9, 3.8219935044129763`*^9}, {3.821993669295561*^9, 
   3.8219936927695932`*^9}, 3.821994436904553*^9, {3.821997171825379*^9, 
   3.821997185905403*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"7af42ab3-8102-49a3-9d8f-ca86e470d8c6"],

Cell[BoxData[
 Graphics3DBox[{{
    {RGBColor[0.3315753, 0.4561011, 0.6388182], PointSize[
     0.009722222222222222], Point3DBox[CompressedData["
1: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
hWrrF/wPdXaJVQ==
      "]]}, {}, {}}, {}},
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{432.02348702900343`, 288.9337915526148},
  ImageSizeRaw->Automatic,
  Lighting->{{"Ambient", 
     GrayLevel[0.5]}, {"Directional", 
     GrayLevel[0.5], 
     ImageScaled[{0, 2, 2}]}, {"Directional", 
     GrayLevel[0.5], 
     ImageScaled[{2, 2, 2}]}, {"Directional", 
     GrayLevel[0.5], 
     ImageScaled[{2, 0, 2}]}},
  PlotRange->{{-3.39502472223224, 3.267072667282785}, {-1.9054597550841068`, 
    1.8539073776324893`}, Automatic},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.084883880711129, -2.208343207204606, 1.4921392304822532`},
  ViewVertical->{0.06808950306731222, -0.03395383360989972, 
   0.9971012770803364}]], "Output",
 CellChangeTimes->{3.822043072032607*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"73a7905e-c625-4a7e-bbe8-8474d2c0f99b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Identifying types of flower", "Section",
 CellChangeTimes->{{3.8219896645927277`*^9, 3.821989670170643*^9}, {
  3.822026885405249*^9, 
  3.822026891574415*^9}},ExpressionUUID->"ca9dccf1-41f7-4cdc-b990-\
8b7ebf833162"],

Cell["\<\
Let\[CloseCurlyQuote]s now use PCA to identify the type of a flower based on \
measurements of their properties. We will work with a dataset for three \
different types of iris: setosa, versicolor and virginica.\
\>", "Text",
 CellChangeTimes->{{3.821997752460844*^9, 3.821997790446974*^9}, {
  3.8220269051508627`*^9, 3.822026954221487*^9}, {3.8220269986092052`*^9, 
  3.8220270286473017`*^9}},ExpressionUUID->"bb70450c-5a46-4797-bf36-\
7d8933b0ab16"],

Cell[BoxData[
 RowBox[{"WolframAlpha", "[", 
  RowBox[{"\"\<Iris\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<Image:PlantData\>\"", ",", "1"}], "}"}], ",", 
     "\"\<Content\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821997923854452*^9, 3.821997927852162*^9}},
 CellLabel->
  "In[277]:=",ExpressionUUID->"effa7c7c-bfc7-4cd5-bbfc-2f28b425574d"],

Cell["\<\
The dataset is available directly through Mathematica and contains 4 \
variables for the length and width of the sepals and petals (in centimeters). \
Let\[CloseCurlyQuote]s load the data:\
\>", "Text",
 CellChangeTimes->{{3.822026962314794*^9, 
  3.822027017761835*^9}},ExpressionUUID->"43058145-d45f-4e6b-b311-\
08fa651cd2f1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"iris", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<FisherIris\>\""}], "}"}], 
     ",", " ", "\"\<Data\>\""}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[261]:=",
 CellID->2081614806,ExpressionUUID->"357e1539-5cd1-46e4-8aa8-a4cb56b2752c"],

Cell["Rearrange the data so that it is grouped by species:", "Text",
 CellChangeTimes->{{3.822028287841877*^9, 
  3.8220282970854073`*^9}},ExpressionUUID->"96cdb699-bcd1-411f-9285-\
b738bba0dff8"],

Cell[BoxData[
 RowBox[{"irisbyspecies", "=", 
  RowBox[{"GroupBy", "[", 
   RowBox[{"iris", ",", 
    RowBox[{"Last", "\[Rule]", "First"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8220287940602417`*^9, 3.82202879440374*^9}, 
   3.822028873857771*^9},
 CellLabel->"In[506]:=",
 CellID->1604525905,ExpressionUUID->"48ab6691-cb45-4ba9-9d14-516505d3fb25"],

Cell["\<\
Let\[CloseCurlyQuote]s first try to plot the data. This is a 4-dimensional \
dataset (one dimension for each variable) so we don\[CloseCurlyQuote]t have \
an easy way to visualise it all. Instead,  just visualise three dimensions by \
dropping one dimension\
\>", "Text",
 CellChangeTimes->{{3.822028428962113*^9, 
  3.822028497848538*^9}},ExpressionUUID->"7b29358f-af96-4a22-8bb7-\
9cdf1aa87643"],

Cell[BoxData[
 RowBox[{"ListPointPlot3D", "[", 
  RowBox[{"irisbyspecies", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "All", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.822028374314674*^9, 3.822028416828528*^9}, 
   3.8220287976899977`*^9},
 CellLabel->
  "In[504]:=",ExpressionUUID->"1e7dc639-7511-4c44-aeac-d247ae0105f0"],

Cell["\<\
It looks like there is hope for separating out the species based on their \
properties, but it is difficult working with 4-dimensional data. Instead, let\
\[CloseCurlyQuote]s project it onto the two-dimensional space spanned by the \
first two principal components. We do this as before: standardize the data, \
use the SVD to find the principal components and the projection of the data \
onto those components and then un-standardize the result for plotting.  \
Instead of doing those steps manually again, let\[CloseCurlyQuote]s use \
Mathematica\[CloseCurlyQuote]s DimensionReduction function which does exactly \
that. We tell it to use Principal Component Analysis and to project onto two \
dimensions\
\>", "Text",
 CellChangeTimes->{{3.822028509199498*^9, 
  3.822028719133795*^9}},ExpressionUUID->"21e0cb44-fac9-4a6a-8358-\
4ff2c73bbf20"],

Cell[BoxData[
 RowBox[{"diris", "=", 
  RowBox[{"DimensionReduction", "[", 
   RowBox[{
    RowBox[{"iris", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", " ", "2", ",", " ", 
    RowBox[{"Method", "\[Rule]", "\"\<PrincipalComponentsAnalysis\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.822027352593321*^9, {3.822027742281348*^9, 3.822027767215048*^9}, 
   3.822028723990364*^9, {3.822028928158904*^9, 3.8220289531493597`*^9}},
 CellLabel->
  "In[510]:=",ExpressionUUID->"2c51563c-d7a4-452b-90cf-0f6b60a802d3"],

Cell["\<\
The result is a DimensionReducerFunction which takes in a vector of 4 numbers \
and returns a vector of two numbers obtained by projecting along the two \
principal directions. We now apply this projection function to our iris data\
\>", "Text",
 CellChangeTimes->{{3.822028728499848*^9, 3.822028768968663*^9}, {
  3.82202881732827*^9, 
  3.822028856552979*^9}},ExpressionUUID->"ffa87055-2228-4433-83b7-\
9d4ea8d50eaf"],

Cell[BoxData[
 RowBox[{"dirisbyspecies", "=", 
  RowBox[{"diris", "/@", "irisbyspecies"}]}]], "Input",
 CellChangeTimes->{{3.822027361260202*^9, 3.822027385272833*^9}, 
   3.82202777198269*^9, {3.822028837034367*^9, 3.822028865830894*^9}},
 CellLabel->
  "In[511]:=",ExpressionUUID->"130735eb-0207-4f96-b5c4-caafc89c5209"],

Cell["\<\
When we plot this lower dimensional representation of the data, we can \
clearly delineate between the species:\
\>", "Text",
 CellChangeTimes->{{3.82202988261653*^9, 
  3.822029905971447*^9}},ExpressionUUID->"5ec87d40-bfd2-4a87-9ad1-\
4c3b80edc70e"],

Cell[BoxData["dirisbyspecies"], "Input",
 CellLabel->
  "In[700]:=",ExpressionUUID->"f6b67ef2-ea7e-4d75-b6ff-0faf356f6d9f"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", "dirisbyspecies", "]"}]], "Input",
 CellChangeTimes->{{3.8220289603780107`*^9, 3.822028967991988*^9}},
 CellLabel->
  "In[512]:=",ExpressionUUID->"d9970778-e905-4027-9484-3a0aaf4ceb97"],

Cell["\<\
We can go even further than this. We have seen how we can use PCA to project \
high-dimensional data onto a lower dimensional surface, but we could also \
reconstruct those projected vectors in the original 4-dimensional space. For \
example, let\[CloseCurlyQuote]s take one sample of the setosa species:\
\>", "Text",
 CellChangeTimes->{{3.822029909269264*^9, 3.8220299157842216`*^9}, {
  3.822030188831064*^9, 3.82203023632477*^9}, {3.822030268053771*^9, 
  3.822030268783704*^9}, {3.822030398771963*^9, 3.822030401340191*^9}, {
  3.8220305784492397`*^9, 3.822030586464943*^9}, {3.822030860774939*^9, 
  3.822030893868408*^9}},ExpressionUUID->"66290fcf-5470-4dc2-a8a7-\
f8c298f121e1"],

Cell[BoxData[
 RowBox[{"setosa1", "=", 
  RowBox[{
   RowBox[{"irisbyspecies", "[", "\"\<setosa\>\"", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.822029943816687*^9, 3.822029958789904*^9}},
 CellLabel->
  "In[538]:=",ExpressionUUID->"bbd89a78-a21f-4c23-a125-bb6ba68c8546"],

Cell["We can project this onto the lower-dimensional space:", "Text",
 CellChangeTimes->{{3.82203090988809*^9, 
  3.82203091876994*^9}},ExpressionUUID->"8b968971-c488-4ec3-b76b-\
5c81f91903db"],

Cell[BoxData[
 RowBox[{"pcs", "=", 
  RowBox[{"diris", "[", "setosa1", "]"}]}]], "Input",
 CellChangeTimes->{{3.8220309218927107`*^9, 3.822030922048188*^9}, {
  3.8220311678977737`*^9, 3.822031168812689*^9}},
 CellLabel->
  "In[553]:=",ExpressionUUID->"74e65c4d-bcd3-4a38-bbaf-55e1a62d9859"],

Cell["\<\
Then we can take these principal components and combine them with the \
principal component vectors to reconstruct a 4-vector in the original space. \
This will be the closest point on our lower-dimensional surface to the \
original 4-dimensional sample:\
\>", "Text",
 CellChangeTimes->{{3.822030928011619*^9, 3.822030979441312*^9}, {
   3.822031113458107*^9, 3.822031129756094*^9}, {3.8220311784781427`*^9, 
   3.822031183122361*^9}, {3.822031225153006*^9, 3.822031258526787*^9}, 
   3.822031297032358*^9, {3.822032249364324*^9, 
   3.8220322523225517`*^9}},ExpressionUUID->"8a701d98-f6f5-45f7-bfdf-\
f56a43d7a158"],

Cell[BoxData[
 RowBox[{"diris", "[", 
  RowBox[{"pcs", ",", "\"\<OriginalData\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.822031031545665*^9, 3.822031092434791*^9}, {
  3.822031171359131*^9, 3.82203117168118*^9}},
 CellLabel->
  "In[555]:=",ExpressionUUID->"30dd762c-11e9-4625-baa5-4909d159db77"],

Cell["\<\
We can do these two steps (projection and reconstruction) in one go by asking \
for the reconstructed vector directly:\
\>", "Text",
 CellChangeTimes->{{3.822031268154028*^9, 
  3.822031295206451*^9}},ExpressionUUID->"8132d46f-5826-4be9-a2fe-\
d58bda9bc7fa"],

Cell[BoxData[
 RowBox[{"diris", "[", 
  RowBox[{"setosa1", ",", "\"\<ReconstructedVectors\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8220309036272097`*^9, 3.822030906820197*^9}},
 CellLabel->
  "In[552]:=",ExpressionUUID->"87fab038-fb47-4eaa-919c-ff2e2b1025d8"],

Cell[BoxData[
 RowBox[{"diris", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"irisbyspecies", "[", "\"\<setosa\>\"", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<ReconstructedVectors\>\""}], 
  "]"}]], "Input",
 CellLabel->
  "In[583]:=",ExpressionUUID->"a1ab1433-c779-4081-a362-c73261530ce4"],

Cell["Now let\[CloseCurlyQuote]s do this for all sample points and plot the \
result:", "Text",
 CellChangeTimes->{{3.822032352533532*^9, 
  3.8220323686512213`*^9}},ExpressionUUID->"5df37c7b-2870-4e93-91bf-\
e90f2f33e164"],

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"coords", "=", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"ListPointPlot3D", "[", 
         RowBox[{
          RowBox[{"irisbyspecies", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "All", ",", "coords"}], "]"}], "]"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}], ",", 
        RowBox[{"Graphics3D", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Opacity", "[", "0.3", "]"}], ",", "Gray", ",", 
           RowBox[{"InfinitePlane", "[", 
            RowBox[{
             RowBox[{"diris", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"irisbyspecies", "[", "\"\<setosa\>\"", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", 
               "\"\<ReconstructedVectors\>\""}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "coords"}], "]"}], "]"}], "]"}]}], "}"}], 
         "]"}]}], "]"}], ",", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"ListPointPlot3D", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"diris", "[", 
               RowBox[{"#", ",", "\"\<ReconstructedVectors\>\""}], "]"}], 
              "&"}], "/@", "irisbyspecies"}], ")"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "All", ",", "coords"}], "]"}], "]"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}], ",", 
        RowBox[{"Graphics3D", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Opacity", "[", "0.3", "]"}], ",", "Gray", ",", 
           RowBox[{"InfinitePlane", "[", 
            RowBox[{
             RowBox[{"diris", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"irisbyspecies", "[", "\"\<setosa\>\"", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", 
               "\"\<ReconstructedVectors\>\""}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "coords"}], "]"}], "]"}], "]"}]}], "}"}], 
         "]"}]}], "]"}]}], "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.822029154889082*^9, 3.8220291834294147`*^9}, {
  3.822030708224794*^9, 3.822030773040504*^9}, {3.8220313223026133`*^9, 
  3.8220313837096357`*^9}, {3.822031670161545*^9, 3.8220318538126307`*^9}, {
  3.8220320577145967`*^9, 3.822032091680922*^9}, {3.8220321787561483`*^9, 
  3.822032189368094*^9}, {3.8220322860482807`*^9, 3.8220323227812157`*^9}},
 CellLabel->
  "In[594]:=",ExpressionUUID->"4e951649-8139-42d4-a8a9-76a2b006ece7"],

Cell["\<\
Finally, we can also use this approach to fill in missing data. For example, \
say we had missed a measurement for our first setosa sample \
\>", "Text",
 CellChangeTimes->{{3.822032432615691*^9, 
  3.822032472408146*^9}},ExpressionUUID->"b81abec2-d724-4338-8f18-\
57aa9ba023b0"],

Cell[BoxData["setosa1"], "Input",
 CellChangeTimes->{{3.822032473840289*^9, 3.822032475976602*^9}},
 CellLabel->
  "In[595]:=",ExpressionUUID->"e5040bef-3fb1-4356-8a7f-402dd68d052d"],

Cell[BoxData[
 RowBox[{"setosa1missing", "=", 
  RowBox[{"{", 
   RowBox[{"5.1", ",", 
    RowBox[{"Missing", "[", "]"}], ",", "1.4", ",", "0.2"}], "}"}]}]], "Input",\

 CellChangeTimes->{{3.822032497818289*^9, 3.8220325006860533`*^9}},
 CellLabel->
  "In[596]:=",ExpressionUUID->"483caaa2-7af0-4a5a-9c69-c9150405729d"],

Cell["We can still project this onto the lower dimensional space", "Text",
 CellChangeTimes->{{3.822032486555703*^9, 
  3.8220325174698257`*^9}},ExpressionUUID->"0df6ed88-c985-47c1-94e5-\
294a92a2e8e6"],

Cell[BoxData[
 RowBox[{"diris", "[", "setosa1missing", "]"}]], "Input",
 CellChangeTimes->{{3.822032520441545*^9, 3.822032529190756*^9}},
 CellLabel->
  "In[597]:=",ExpressionUUID->"b921edfa-57a9-4802-9d11-f4d1ccfc5b5d"],

Cell["\<\
And we can reconstruct a 4-dimensional vector from this, \
\[OpenCurlyDoubleQuote]filling in\[CloseCurlyDoubleQuote] the missing  piece:\
\
\>", "Text",
 CellChangeTimes->{{3.822032557580513*^9, 
  3.8220325769620867`*^9}},ExpressionUUID->"b50624bb-f9a5-4e83-acf4-\
7b784f5d5ff3"],

Cell[BoxData[
 RowBox[{"diris", "[", 
  RowBox[{"setosa1missing", ",", "\"\<ReconstructedVectors\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.822032520441545*^9, 3.822032536709972*^9}},
 CellLabel->
  "In[598]:=",ExpressionUUID->"11d1296d-5bf5-4913-a79c-9e2daf19c06c"],

Cell["\<\
If all we want to do is fill in the missing piece and leave the others \
unchanged, then we could do that too:\
\>", "Text",
 CellChangeTimes->{{3.822032580459586*^9, 
  3.8220325971983843`*^9}},ExpressionUUID->"2481a076-d59d-434e-b1c9-\
f6435968604a"],

Cell[BoxData[
 RowBox[{"diris", "[", 
  RowBox[{"setosa1missing", ",", "\"\<ImputedVectors\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.822029297300639*^9, 3.822029315402711*^9}, {
   3.822029568511066*^9, 3.8220295833758574`*^9}, 3.822032494131835*^9, 
   3.822032540737076*^9},
 CellLabel->
  "In[600]:=",ExpressionUUID->"8e40664a-7d4f-464e-ae88-8da43a363810"],

Cell["\<\
We won\[CloseCurlyQuote]t cover this idea further in this module, but this is \
a lot of information about data imputation available online.\
\>", "Text",
 CellChangeTimes->{{3.822032611018156*^9, 3.82203262726687*^9}, {
  3.822032706976388*^9, 
  3.822032723120388*^9}},ExpressionUUID->"328c081d-24c0-4a60-aebd-\
b3890cd63ed1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Handwriting recognition", "Section",
 CellChangeTimes->{{3.821985161740225*^9, 
  3.821985166975065*^9}},ExpressionUUID->"c8917f6b-6a1e-497a-b15a-\
0427e1e9c97a"],

Cell["\<\
We now look at another example: handwriting recognition, and in particular \
reading numbers. The National Institute of Standards and Technology in the US \
have produced a set of 60,000 handwritten numbers collected from Census \
Bureau employees and high school students. Let\[CloseCurlyQuote]s first load \
the dataset (this may take a few seconds to download the first time you run \
it).\
\>", "Text",
 CellChangeTimes->{{3.822029013498911*^9, 3.822029035055365*^9}, {
  3.822032738798958*^9, 3.822032749518331*^9}, {3.822032861665357*^9, 
  3.822032884182498*^9}, {3.822032975517097*^9, 
  3.8220330119261007`*^9}},ExpressionUUID->"3885e468-b429-477d-8207-\
9041991cc8fa"],

Cell[BoxData[
 RowBox[{"ExampleData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<MNIST\>\""}], "}"}], ",", 
   "\"\<Description\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.822033673079082*^9, 3.822033674766336*^9}, {
  3.822033706101058*^9, 3.822033723524551*^9}},
 CellLabel->
  "In[638]:=",ExpressionUUID->"457eb166-3576-4521-b59f-619f08d98ec2"],

Cell[BoxData[
 RowBox[{"ExampleData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<MNIST\>\""}], "}"}], ",", 
   "\"\<VariableDescriptions\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.822033673079082*^9, 3.822033674766336*^9}, {
  3.822033706101058*^9, 3.8220337325501137`*^9}, {3.822033769551708*^9, 
  3.822033775152437*^9}},
 CellLabel->
  "In[641]:=",ExpressionUUID->"3e70aa8e-793d-48e1-8296-e387b5510dad"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MNIST", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<MNIST\>\""}], "}"}], ",", 
     "\"\<TrainingData\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.82178433819939*^9, 3.821784359377384*^9}, {
   3.821998365668429*^9, 3.821998390644134*^9}, 3.821998668594962*^9, 
   3.822033647805273*^9, {3.822033779360832*^9, 3.822033791127304*^9}},
 CellLabel->
  "In[643]:=",ExpressionUUID->"1b53817b-63d7-4a67-8aa0-d91a0a1e21ff"],

Cell[BoxData[
 RowBox[{"Length", "[", "MNIST", "]"}]], "Input",
 CellChangeTimes->{{3.822033173440756*^9, 3.8220331765909567`*^9}},
 CellLabel->
  "In[645]:=",ExpressionUUID->"e1d3349a-19dd-4d55-b6b1-b248e43353b9"],

Cell["\<\
This is a list of 60,000 entries, each with an image of a handwritten number \
and the corresponding integer label (as interpreted by a human). Take a \
random sample of 30 entries to get an idea of what they look like\
\>", "Text",
 CellChangeTimes->{{3.8220330577685127`*^9, 
  3.82203317073836*^9}},ExpressionUUID->"77564320-aac7-4fe5-8f92-\
d440acf89c39"],

Cell[BoxData[
 RowBox[{"RandomSample", "[", 
  RowBox[{"MNIST", ",", "30"}], "]"}]], "Input",
 CellChangeTimes->{{3.822033018222289*^9, 3.822033048435541*^9}},
 CellLabel->
  "In[647]:=",ExpressionUUID->"09e153cd-90d4-4cf2-a138-4ae69390dee1"],

Cell["Group the entries by the number they represent", "Text",
 CellChangeTimes->{{3.8220332842768097`*^9, 
  3.8220332908888597`*^9}},ExpressionUUID->"3214cc16-f618-4609-a695-\
435f0628a557"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MNISTbynumber", "=", 
   RowBox[{"GroupBy", "[", 
    RowBox[{"MNIST", ",", 
     RowBox[{"Last", "\[Rule]", "First"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.822033207695846*^9, 3.822033301592517*^9}},
 CellLabel->
  "In[648]:=",ExpressionUUID->"bc0a513d-f314-4c2a-97b5-2790f5d72ad9"],

Cell["We will just work with the zeros and ones", "Text",
 CellChangeTimes->{{3.822033844510476*^9, 
  3.822033854914041*^9}},ExpressionUUID->"bc99a32a-5644-41e6-adee-\
c0ab8a8a8d9e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"MNIST01", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Values", "[", 
     RowBox[{"MNISTbynumber", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "2"}], "]"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MNIST01", "//", "Length"}]}], "Input",
 CellChangeTimes->{{3.822033532139124*^9, 3.822033573159412*^9}, {
  3.822033904596336*^9, 3.8220339395471773`*^9}},
 CellLabel->
  "In[657]:=",ExpressionUUID->"c28de8a6-f881-48e4-80a7-9bbf4c8fa948"],

Cell[BoxData[
 RowBox[{"28", " ", "28"}]], "Input",
 CellChangeTimes->{{3.822033999181847*^9, 3.822034000245907*^9}},
 CellLabel->
  "In[659]:=",ExpressionUUID->"58f9b118-1886-4197-b1a2-0ce86cb5df87"],

Cell["\<\
If we think of each 28 x 28 image as a 784 dimensional vector, then we can \
consider this as a set of 12,665 samples in a 784 dimensional vector space. A \
random vector in that space won\[CloseCurlyQuote]t look like much, but the \
12,665 samples are special as they represent important \
\[OpenCurlyDoubleQuote]directions\[CloseCurlyDoubleQuote] in this space.\
\>", "Text",
 CellChangeTimes->{{3.8220339465872297`*^9, 3.822034045970973*^9}, {
  3.822034206182135*^9, 
  3.82203421517177*^9}},ExpressionUUID->"9c931891-2f40-4d04-8347-\
bac4654bcd5f"],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Framed", "[", 
     RowBox[{"Image", "[", 
      RowBox[{
       RowBox[{"RandomReal", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"28", ",", "28"}], "}"}]}], "]"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], "]"}], ",", 
    RowBox[{"Framed", "[", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"MNIST01", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.822034047076509*^9, 3.8220341001723423`*^9}, {
  3.8220341670969887`*^9, 3.822034199286067*^9}},
 CellLabel->
  "In[671]:=",ExpressionUUID->"e301be12-6beb-4b4e-a39d-2bed921734c0"],

Cell["\<\
Let\[CloseCurlyQuote]s see if PCA will allow us to identify the important \
\[OpenCurlyDoubleQuote]directions\[CloseCurlyDoubleQuote] corresponding to \
zeros and ones, and even to differentiate between them. First, let\
\[CloseCurlyQuote]s convert the images to vectors of numbers:\
\>", "Text",
 CellChangeTimes->{{3.822034103846882*^9, 3.822034145617293*^9}, {
  3.822034204498136*^9, 3.822034250339089*^9}, {3.822034284771891*^9, 
  3.822034300001247*^9}},ExpressionUUID->"b1e1e1cd-8c4e-45c3-8230-\
00b8fb25b615"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"MNIST01data", "=", 
   RowBox[{"Flatten", "/@", 
    RowBox[{"ImageData", "/@", "MNIST01"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "MNIST01data", "]"}]}], "Input",
 CellChangeTimes->{{3.822034328588912*^9, 3.8220343440225677`*^9}},
 CellLabel->
  "In[676]:=",ExpressionUUID->"44e0d6d1-44db-41d4-81c4-de93e045d627"],

Cell["\<\
Now that we have a matrix, we can use PCA to reduce the 784 dimensional \
vectors to just the two most important ones\
\>", "Text",
 CellChangeTimes->{{3.822034898781403*^9, 
  3.822034927819832*^9}},ExpressionUUID->"4ae13b15-ade7-4856-a14b-\
119b9900d6cf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dMNIST01", "=", 
   RowBox[{"DimensionReduction", "[", 
    RowBox[{"MNIST01data", ",", " ", "2", ",", " ", 
     RowBox[{"Method", "\[Rule]", "\"\<PrincipalComponentsAnalysis\>\""}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.822027352593321*^9, {3.822027742281348*^9, 3.822027767215048*^9}, 
   3.822028723990364*^9, {3.822028928158904*^9, 3.8220289531493597`*^9}, {
   3.822034359642975*^9, 3.822034379262926*^9}},
 CellLabel->
  "In[708]:=",ExpressionUUID->"c267d248-3bd2-49fa-9d41-ea1498783cb3"],

Cell["\<\
Now we map our dimension reduction projection function over all of the images \
in our training set\
\>", "Text",
 CellChangeTimes->{{3.822034864953619*^9, 3.822034882829431*^9}, {
  3.822034950832604*^9, 
  3.822034952125383*^9}},ExpressionUUID->"7b6d6713-05c2-44c5-8059-\
f72b253dfa8f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"projMNIST01", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"dMNIST01", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"ImageData", "[", "#", "]"}], "]"}], "]"}], "&"}], ",", 
     RowBox[{"MNISTbynumber", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "2"}], "]"}], "]"}], ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8220349831977167`*^9, 3.822034986558077*^9}},
 CellLabel->
  "In[709]:=",ExpressionUUID->"832715bd-7e05-4936-a23e-6fa77f21e111"],

Cell["\<\
If we now visualise all of those samples on our two-dimensional space, we can \
quite clearly distinguish between zeros and ones:\
\>", "Text",
 CellChangeTimes->{{3.822035019005986*^9, 
  3.822035041884879*^9}},ExpressionUUID->"d246499a-61cf-4714-8a53-\
a897dd4e5d06"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Values", "[", "projMNIST01", "]"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Keys", "[", "projMNIST01", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.82203473591787*^9, 3.8220348056616077`*^9}, {
  3.822034992245479*^9, 3.822034993817135*^9}},
 CellLabel->
  "In[711]:=",ExpressionUUID->"c4d9dcdc-c888-48bf-9b94-4632e6af97dd"],

Cell["\<\
That\[CloseCurlyQuote]s all well and good, but it could be that we have just \
trained our model to understand the images in the training dataset we used. \
What if we were to throw a new, previously unseen image at it? The MNIST \
dataset is separated into training and testing datasets for exactly this \
purpose. Let\[CloseCurlyQuote]s load the test data and see how that fares\
\>", "Text",
 CellChangeTimes->{{3.82203506286215*^9, 
  3.822035160758116*^9}},ExpressionUUID->"50f880f7-6776-417e-bf9c-\
c014e4eb882e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MNISTtest", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<MNIST\>\""}], "}"}], ",", 
     "\"\<TestData\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.822035146374194*^9, 3.822035151412876*^9}},
 CellLabel->
  "In[712]:=",ExpressionUUID->"3a54692a-1581-4e93-9a42-73e3928dda94"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MNISTtestbynumber", "=", 
   RowBox[{"GroupBy", "[", 
    RowBox[{"MNISTtest", ",", 
     RowBox[{"Last", "\[Rule]", "First"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.822033207695846*^9, 3.822033301592517*^9}, {
  3.8220351980963507`*^9, 3.82203519994499*^9}},
 CellLabel->
  "In[713]:=",ExpressionUUID->"9fbe041c-9fa6-40b1-b595-5c84bb7a8d6b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"MNISTtest01", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Values", "[", 
     RowBox[{"MNISTtestbynumber", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "2"}], "]"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MNISTtest01", "//", "Length"}]}], "Input",
 CellChangeTimes->{{3.822033532139124*^9, 3.822033573159412*^9}, {
  3.822033904596336*^9, 3.8220339395471773`*^9}, {3.822035202993657*^9, 
  3.822035206668241*^9}},
 CellLabel->
  "In[714]:=",ExpressionUUID->"44e51f7e-6e4e-4213-a99b-08c6403342bc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"projMNISTtest01", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"dMNIST01", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"ImageData", "[", "#", "]"}], "]"}], "]"}], "&"}], ",", 
     RowBox[{"MNISTtestbynumber", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "2"}], "]"}], "]"}], ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8220349831977167`*^9, 3.822034986558077*^9}, {
  3.8220352271072893`*^9, 3.822035231212138*^9}},
 CellLabel->
  "In[716]:=",ExpressionUUID->"70c4ed4a-1b89-48c4-b9ed-6d3fc0d4e00a"],

Cell["\<\
If we now visualise all of those samples on our two-dimensional space, we can \
quite clearly distinguish between zeros and ones:\
\>", "Text",
 CellChangeTimes->{{3.822035019005986*^9, 
  3.822035041884879*^9}},ExpressionUUID->"d492e42f-3f59-48ff-801c-\
5b64b8458865"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Values", "[", "projMNIST01", "]"}], ",", 
     RowBox[{"Values", "[", "projMNISTtest01", "]"}]}], "]"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Keys", "[", "projMNIST01", "]"}], ",", 
      RowBox[{"Keys", "[", "projMNISTtest01", "]"}]}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.82203473591787*^9, 3.8220348056616077`*^9}, {
  3.822034992245479*^9, 3.822034993817135*^9}, {3.8220352354408617`*^9, 
  3.8220353060525103`*^9}},
 CellLabel->
  "In[720]:=",ExpressionUUID->"08bc32a2-c91a-4670-a5db-df82361d1f33"],

Cell["\<\
We can also reconstruct what our model thinks a zero and a one look like:\
\>", "Text",
 CellChangeTimes->{{3.822036374555936*^9, 
  3.822036396134006*^9}},ExpressionUUID->"32299fd2-40b3-4170-889c-\
83b99cb84c4f"],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Image", "[", 
     RowBox[{
      RowBox[{"Partition", "[", 
       RowBox[{
        RowBox[{"dMNIST01", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "10"}], ",", "0"}], "}"}], ",", 
          "\"\<OriginalData\>\""}], "]"}], ",", "28"}], "]"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
    RowBox[{"Image", "[", 
     RowBox[{
      RowBox[{"Partition", "[", 
       RowBox[{
        RowBox[{"dMNIST01", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"10", ",", "0"}], "}"}], ",", "\"\<OriginalData\>\""}], 
         "]"}], ",", "28"}], "]"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8220353775183573`*^9, 3.8220354754600277`*^9}, {
   3.8220355859500217`*^9, 3.822035592453383*^9}, 3.822035694926078*^9, {
   3.822035926338431*^9, 3.8220359317409363`*^9}, 3.8220360554867992`*^9},
 CellLabel->
  "In[737]:=",ExpressionUUID->"fa8fd670-f979-4f99-b17a-095802b99e62"],

Cell["\<\
And we can even use it to fill in missing data, as we did in the iris case:\
\>", "Text",
 CellChangeTimes->{{3.822036399949534*^9, 
  3.822036412391017*^9}},ExpressionUUID->"123254fd-08ec-48ce-bddd-\
63ccf3e9fa10"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"vectormissing", "=", 
   RowBox[{"MNIST01data", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vectormissing", "[", 
    RowBox[{"[", 
     RowBox[{"309", ";;", "364"}], "]"}], "]"}], "=", 
   RowBox[{"Missing", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imagemissing", " ", "=", " ", 
   RowBox[{"Image", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"Replace", "[", 
        RowBox[{"vectormissing", ",", " ", 
         RowBox[{"_Missing", "\[Rule]", " ", "1"}], ",", 
         RowBox[{"{", "1", "}"}]}], "]"}], ",", "28"}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imageimputed", "=", 
   RowBox[{"Image", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"dMNIST01", "[", 
        RowBox[{"vectormissing", ",", " ", "\"\<ImputedVectors\>\"", ",", " ", 
         RowBox[{"PerformanceGoal", "->", "\"\<Quality\>\""}]}], "]"}], ",", 
       "28"}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.822036096887414*^9, 3.822036195234859*^9}, {
  3.822036241827203*^9, 3.822036242505948*^9}, {3.8220362876537323`*^9, 
  3.822036315133309*^9}},
 CellLabel->"In[761]:=",
 CellID->746582873,ExpressionUUID->"82ff1da9-843e-465c-8b83-da06be02ccda"],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"MNIST01", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
    "imagemissing", ",", "imageimputed"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8220362523313932`*^9, 3.8220362742836847`*^9}},
 CellLabel->
  "In[765]:=",ExpressionUUID->"e7915beb-6914-41b5-9332-6afc6929feab"]
}, Open  ]]
},
WindowSize->{681, 676},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
Magnification:>1. Inherited,
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"cf76fbb4-ce6f-4864-abff-cd231cb58e58"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 226, 4, 67, "Section",ExpressionUUID->"71f30d7c-0d3d-4783-9b7b-e231f4081234"],
Cell[809, 28, 464, 9, 34, "Text",ExpressionUUID->"13af3e83-451e-4a4e-88d7-1000ad6fc587"],
Cell[1276, 39, 1171, 25, 28, "Input",ExpressionUUID->"c26d2979-b491-4d4f-ae69-d5ff3b1612dc"],
Cell[2450, 66, 213, 4, 28, "Input",ExpressionUUID->"33383fe4-0f7a-4b99-82e6-d6411aeaba82"],
Cell[2666, 72, 638, 11, 56, "Text",ExpressionUUID->"bc293daf-5d4d-4a94-acf7-b496d1b1e65c"],
Cell[3307, 85, 393, 8, 34, "Text",ExpressionUUID->"b6b26fe8-754b-4b3b-baf8-0a7a58ef3b15"],
Cell[3703, 95, 406, 9, 28, "Input",ExpressionUUID->"d01f2047-ccfc-4d32-979a-9f5940748afd"],
Cell[4112, 106, 269, 6, 28, "Input",ExpressionUUID->"437b6333-1c71-49cb-9848-d84084e12c35"],
Cell[4384, 114, 284, 6, 28, "Input",ExpressionUUID->"7e6e9579-7c60-4fe0-9791-c448a15f2eb7"],
Cell[4671, 122, 225, 4, 28, "Input",ExpressionUUID->"39bee789-22b0-40b8-8f8d-0b4eadb84423"],
Cell[4899, 128, 191, 3, 34, "Text",ExpressionUUID->"a30f84de-ae8b-4c7b-97de-c819284bd632"],
Cell[5093, 133, 859, 17, 48, "Input",ExpressionUUID->"af74fc54-8b44-4918-be38-6ede77eb598c"],
Cell[5955, 152, 330, 7, 56, "Text",ExpressionUUID->"11f67241-72b5-4653-a7d1-123a18402950"],
Cell[6288, 161, 291, 7, 34, "Text",ExpressionUUID->"41482608-8006-4da5-af59-d3259d1e2ef8"],
Cell[6582, 170, 2105, 55, 161, "Input",ExpressionUUID->"c9bbdc93-e452-4cb9-acba-0f93dd7f6852"],
Cell[8690, 227, 404, 8, 56, "Text",ExpressionUUID->"7ba9227e-d85d-4804-9cbc-2ad09d70cc6c"],
Cell[9097, 237, 593, 16, 28, "Input",ExpressionUUID->"e347afe2-3daa-4da4-b452-84ed75088a6a"],
Cell[9693, 255, 238, 6, 34, "Text",ExpressionUUID->"396910eb-ad24-4c15-a09a-fddeef6de798"],
Cell[9934, 263, 547, 10, 28, "Input",ExpressionUUID->"3f945c97-df4e-4628-a1eb-d94e7c0fa318"],
Cell[CellGroupData[{
Cell[10506, 277, 170, 3, 53, "Subsection",ExpressionUUID->"69fc2dd0-745f-4871-bc9a-569458acaa80"],
Cell[10679, 282, 193, 3, 34, "Text",ExpressionUUID->"a94eff33-39da-4dcc-9d1f-b82c2dcefac9"],
Cell[10875, 287, 1517, 31, 48, "Input",ExpressionUUID->"1bda63a2-983a-4b16-a902-742b1f6f14a3"],
Cell[CellGroupData[{
Cell[12417, 322, 218, 3, 28, "Input",ExpressionUUID->"19be27e5-be4b-4772-b195-a6632107832a"],
Cell[12638, 327, 26012, 438, 296, "Output",ExpressionUUID->"79565d58-14d1-4af7-8802-6b3a3bae9370"]
}, Open  ]],
Cell[38665, 768, 251, 6, 56, "Text",ExpressionUUID->"08af93f2-c183-4d1f-b1c9-3d5bcd736d65"],
Cell[38919, 776, 491, 8, 28, "Input",ExpressionUUID->"b888cc86-8542-42bd-ab93-2ada61862e66"],
Cell[CellGroupData[{
Cell[39435, 788, 318, 6, 28, "Input",ExpressionUUID->"56596cd2-1f76-4b86-8307-02b5cd2fef34"],
Cell[39756, 796, 245, 5, 32, "Output",ExpressionUUID->"7af09e7e-9af6-4279-a468-a26afb862e77"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40038, 806, 333, 6, 28, "Input",ExpressionUUID->"6a4c4c45-130f-41e1-9381-2abba3a044d3"],
Cell[40374, 814, 263, 6, 32, "Output",ExpressionUUID->"01a6d881-3bac-49e0-9e68-10663823ccab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40674, 825, 278, 4, 28, "Input",ExpressionUUID->"bde07c24-481b-4e47-97cb-883f26cb27f3"],
Cell[40955, 831, 29000, 488, 307, "Output",ExpressionUUID->"30357da9-3d1f-44f6-a153-7d115c1a1fb2"]
}, Open  ]],
Cell[69970, 1322, 191, 3, 34, "Text",ExpressionUUID->"34a552b3-4f8c-4508-8b2f-8e2c78529bb7"],
Cell[70164, 1327, 811, 16, 48, "Input",ExpressionUUID->"6b805889-0ff8-41e8-8b03-a66693ea9a0f"],
Cell[70978, 1345, 330, 7, 56, "Text",ExpressionUUID->"f9b2a820-8642-4251-849c-81cf17d9fa5e"],
Cell[71311, 1354, 291, 7, 34, "Text",ExpressionUUID->"508072d1-43e3-49ce-9d6c-7ead8b87e770"],
Cell[CellGroupData[{
Cell[71627, 1365, 2890, 75, 208, "Input",ExpressionUUID->"2e3fbdc7-8b36-4afc-9c75-3fefbeea6458"],
Cell[74520, 1442, 29592, 501, 297, "Output",ExpressionUUID->"56986971-4755-48d6-99a2-a6795ca79163"]
}, Open  ]],
Cell[104127, 1946, 404, 8, 56, "Text",ExpressionUUID->"8f635ade-7d12-4158-b8aa-ddc9a2cb0829"],
Cell[CellGroupData[{
Cell[104556, 1958, 642, 15, 28, "Input",ExpressionUUID->"8506e743-f06b-4467-b9ec-83824dc492b3"],
Cell[105201, 1975, 32602, 548, 256, "Output",ExpressionUUID->"3098f27f-a325-4f39-88bf-99f859e4a71e"]
}, Open  ]],
Cell[137818, 2526, 238, 6, 34, "Text",ExpressionUUID->"66f3a089-4904-4909-90ad-9febc0488d42"],
Cell[CellGroupData[{
Cell[138081, 2536, 602, 10, 28, "Input",ExpressionUUID->"7af42ab3-8102-49a3-9d8f-ca86e470d8c6"],
Cell[138686, 2548, 32600, 548, 306, "Output",ExpressionUUID->"73a7905e-c625-4a7e-bbe8-8474d2c0f99b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[171347, 3103, 223, 4, 67, "Section",ExpressionUUID->"ca9dccf1-41f7-4cdc-b990-8b7ebf833162"],
Cell[171573, 3109, 462, 8, 56, "Text",ExpressionUUID->"bb70450c-5a46-4797-bf36-7d8933b0ab16"],
Cell[172038, 3119, 392, 10, 28, "Input",ExpressionUUID->"effa7c7c-bfc7-4cd5-bbfc-2f28b425574d"],
Cell[172433, 3131, 338, 7, 56, "Text",ExpressionUUID->"43058145-d45f-4e6b-b311-08fa651cd2f1"],
Cell[172774, 3140, 349, 9, 28, "Input",ExpressionUUID->"357e1539-5cd1-46e4-8aa8-a4cb56b2752c",
 CellID->2081614806],
Cell[173126, 3151, 196, 3, 34, "Text",ExpressionUUID->"96cdb699-bcd1-411f-9285-b738bba0dff8"],
Cell[173325, 3156, 354, 8, 28, "Input",ExpressionUUID->"48ab6691-cb45-4ba9-9d14-516505d3fb25",
 CellID->1604525905],
Cell[173682, 3166, 407, 8, 78, "Text",ExpressionUUID->"7b29358f-af96-4a22-8bb7-9cdf1aa87643"],
Cell[174092, 3176, 414, 11, 28, "Input",ExpressionUUID->"1e7dc639-7511-4c44-aeac-d247ae0105f0"],
Cell[174509, 3189, 857, 14, 188, "Text",ExpressionUUID->"21e0cb44-fac9-4a6a-8358-4ff2c73bbf20"],
Cell[175369, 3205, 552, 13, 48, "Input",ExpressionUUID->"2c51563c-d7a4-452b-90cf-0f6b60a802d3"],
Cell[175924, 3220, 429, 8, 78, "Text",ExpressionUUID->"ffa87055-2228-4433-83b7-9d4ea8d50eaf"],
Cell[176356, 3230, 322, 6, 30, "Input",ExpressionUUID->"130735eb-0207-4f96-b5c4-caafc89c5209"],
Cell[176681, 3238, 260, 6, 35, "Text",ExpressionUUID->"5ec87d40-bfd2-4a87-9ad1-4c3b80edc70e"],
Cell[176944, 3246, 123, 2, 30, "Input",ExpressionUUID->"f6b67ef2-ea7e-4d75-b6ff-0faf356f6d9f"],
Cell[177070, 3250, 225, 4, 30, "Input",ExpressionUUID->"d9970778-e905-4027-9484-3a0aaf4ceb97"],
Cell[177298, 3256, 696, 11, 57, "Text",ExpressionUUID->"66290fcf-5470-4dc2-a8a7-f8c298f121e1"],
Cell[177997, 3269, 310, 7, 30, "Input",ExpressionUUID->"bbd89a78-a21f-4c23-a125-bb6ba68c8546"],
Cell[178310, 3278, 193, 3, 35, "Text",ExpressionUUID->"8b968971-c488-4ec3-b76b-5c81f91903db"],
Cell[178506, 3283, 291, 6, 30, "Input",ExpressionUUID->"74e65c4d-bcd3-4a38-bbaf-55e1a62d9859"],
Cell[178800, 3291, 627, 11, 57, "Text",ExpressionUUID->"8a701d98-f6f5-45f7-bfdf-f56a43d7a158"],
Cell[179430, 3304, 299, 6, 30, "Input",ExpressionUUID->"30dd762c-11e9-4625-baa5-4909d159db77"],
Cell[179732, 3312, 268, 6, 35, "Text",ExpressionUUID->"8132d46f-5826-4be9-a2fe-d58bda9bc7fa"],
Cell[180003, 3320, 265, 5, 30, "Input",ExpressionUUID->"87fab038-fb47-4eaa-919c-ff2e2b1025d8"],
Cell[180271, 3327, 303, 8, 30, "Input",ExpressionUUID->"a1ab1433-c779-4081-a362-c73261530ce4"],
Cell[180577, 3337, 223, 4, 35, "Text",ExpressionUUID->"5df37c7b-2870-4e93-91bf-e90f2f33e164"],
Cell[180803, 3343, 2869, 70, 115, "Input",ExpressionUUID->"4e951649-8139-42d4-a8a9-76a2b006ece7"],
Cell[183675, 3415, 289, 6, 35, "Text",ExpressionUUID->"b81abec2-d724-4338-8f18-57aa9ba023b0"],
Cell[183967, 3423, 182, 3, 30, "Input",ExpressionUUID->"e5040bef-3fb1-4356-8a7f-402dd68d052d"],
Cell[184152, 3428, 319, 8, 30, "Input",ExpressionUUID->"483caaa2-7af0-4a5a-9c69-c9150405729d"],
Cell[184474, 3438, 202, 3, 35, "Text",ExpressionUUID->"0df6ed88-c985-47c1-94e5-294a92a2e8e6"],
Cell[184679, 3443, 220, 4, 30, "Input",ExpressionUUID->"b921edfa-57a9-4802-9d11-f4d1ccfc5b5d"],
Cell[184902, 3449, 290, 7, 35, "Text",ExpressionUUID->"b50624bb-f9a5-4e83-acf4-7b784f5d5ff3"],
Cell[185195, 3458, 273, 6, 30, "Input",ExpressionUUID->"11d1296d-5bf5-4913-a79c-9e2daf19c06c"],
Cell[185471, 3466, 262, 6, 35, "Text",ExpressionUUID->"2481a076-d59d-434e-b1c9-f6435968604a"],
Cell[185736, 3474, 364, 7, 30, "Input",ExpressionUUID->"8e40664a-7d4f-464e-ae88-8da43a363810"],
Cell[186103, 3483, 338, 7, 35, "Text",ExpressionUUID->"328c081d-24c0-4a60-aebd-b3890cd63ed1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186478, 3495, 168, 3, 67, "Section",ExpressionUUID->"c8917f6b-6a1e-497a-b15a-0427e1e9c97a"],
Cell[186649, 3500, 688, 12, 57, "Text",ExpressionUUID->"3885e468-b429-477d-8207-9041991cc8fa"],
Cell[187340, 3514, 390, 9, 30, "Input",ExpressionUUID->"457eb166-3576-4521-b59f-619f08d98ec2"],
Cell[187733, 3525, 450, 10, 30, "Input",ExpressionUUID->"3e70aa8e-793d-48e1-8296-e387b5510dad"],
Cell[188186, 3537, 539, 12, 30, "Input",ExpressionUUID->"1b53817b-63d7-4a67-8aa0-d91a0a1e21ff"],
Cell[188728, 3551, 214, 4, 30, "Input",ExpressionUUID->"e1d3349a-19dd-4d55-b6b1-b248e43353b9"],
Cell[188945, 3557, 369, 7, 57, "Text",ExpressionUUID->"77564320-aac7-4fe5-8f92-d440acf89c39"],
Cell[189317, 3566, 242, 5, 30, "Input",ExpressionUUID->"09e153cd-90d4-4cf2-a138-4ae69390dee1"],
Cell[189562, 3573, 192, 3, 35, "Text",ExpressionUUID->"3214cc16-f618-4609-a695-435f0628a557"],
Cell[189757, 3578, 331, 8, 30, "Input",ExpressionUUID->"bc0a513d-f314-4c2a-97b5-2790f5d72ad9"],
Cell[190091, 3588, 183, 3, 35, "Text",ExpressionUUID->"bc99a32a-5644-41e6-adee-c0ab8a8a8d9e"],
Cell[190277, 3593, 509, 13, 52, "Input",ExpressionUUID->"c28de8a6-f881-48e4-80a7-9bbf4c8fa948"],
Cell[190789, 3608, 200, 4, 30, "Input",ExpressionUUID->"58f9b118-1886-4197-b1a2-0ce86cb5df87"],
Cell[190992, 3614, 563, 10, 57, "Text",ExpressionUUID->"9c931891-2f40-4d04-8347-bac4654bcd5f"],
Cell[191558, 3626, 858, 24, 30, "Input",ExpressionUUID->"e301be12-6beb-4b4e-a39d-2bed921734c0"],
Cell[192419, 3652, 527, 9, 35, "Text",ExpressionUUID->"b1e1e1cd-8c4e-45c3-8230-00b8fb25b615"],
Cell[192949, 3663, 378, 9, 52, "Input",ExpressionUUID->"44e0d6d1-44db-41d4-81c4-de93e045d627"],
Cell[193330, 3674, 267, 6, 35, "Text",ExpressionUUID->"4ae13b15-ade7-4856-a14b-119b9900d6cf"],
Cell[193600, 3682, 549, 12, 30, "Input",ExpressionUUID->"c267d248-3bd2-49fa-9d41-ea1498783cb3"],
Cell[194152, 3696, 298, 7, 35, "Text",ExpressionUUID->"7b6d6713-05c2-44c5-8059-f72b253dfa8f"],
Cell[194453, 3705, 560, 15, 30, "Input",ExpressionUUID->"832715bd-7e05-4936-a23e-6fa77f21e111"],
Cell[195016, 3722, 279, 6, 35, "Text",ExpressionUUID->"d246499a-61cf-4714-8a53-a897dd4e5d06"],
Cell[195298, 3730, 410, 9, 30, "Input",ExpressionUUID->"c4d9dcdc-c888-48bf-9b94-4632e6af97dd"],
Cell[195711, 3741, 529, 9, 57, "Text",ExpressionUUID->"50f880f7-6776-417e-bf9c-c014e4eb882e"],
Cell[196243, 3752, 396, 10, 30, "Input",ExpressionUUID->"3a54692a-1581-4e93-9a42-73e3928dda94"],
Cell[196642, 3764, 389, 9, 30, "Input",ExpressionUUID->"9fbe041c-9fa6-40b1-b595-5c84bb7a8d6b"],
Cell[197034, 3775, 570, 14, 52, "Input",ExpressionUUID->"44e51f7e-6e4e-4213-a99b-08c6403342bc"],
Cell[197607, 3791, 619, 16, 30, "Input",ExpressionUUID->"70c4ed4a-1b89-48c4-b9ed-6d3fc0d4e00a"],
Cell[198229, 3809, 279, 6, 35, "Text",ExpressionUUID->"d492e42f-3f59-48ff-801c-5b64b8458865"],
Cell[198511, 3817, 734, 17, 30, "Input",ExpressionUUID->"08bc32a2-c91a-4670-a5db-df82361d1f33"],
Cell[199248, 3836, 223, 5, 35, "Text",ExpressionUUID->"32299fd2-40b3-4170-889c-83b99cb84c4f"],
Cell[199474, 3843, 1116, 30, 30, "Input",ExpressionUUID->"fa8fd670-f979-4f99-b17a-095802b99e62"],
Cell[200593, 3875, 225, 5, 35, "Text",ExpressionUUID->"123254fd-08ec-48ce-bddd-63ccf3e9fa10"],
Cell[200821, 3882, 1479, 38, 94, "Input",ExpressionUUID->"82ff1da9-843e-465c-8b83-da06be02ccda",
 CellID->746582873],
Cell[202303, 3922, 464, 12, 30, "Input",ExpressionUUID->"e7915beb-6914-41b5-9332-6afc6929feab"]
}, Open  ]]
}
]
*)

