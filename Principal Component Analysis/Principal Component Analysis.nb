(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    306495,       5711]
NotebookOptionsPosition[    296210,       5554]
NotebookOutlinePosition[    296734,       5573]
CellTagsIndexPosition[    296691,       5570]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Principal Component Analysis", "Section",
 CellChangeTimes->{{3.821298065639636*^9, 3.8212980721688423`*^9}, {
  3.821989679723143*^9, 
  3.8219896866761436`*^9}},ExpressionUUID->"71f30d7c-0d3d-4783-9b7b-\
e231f4081234"],

Cell["\<\
We have seen in the lectures how Principal Component Analysis can be used to \
find the \[OpenCurlyDoubleQuote]most important directions\
\[CloseCurlyDoubleQuote] in data. Let\[CloseCurlyQuote]s try it out with a \
simple 2D dataset that roughly fits on a line:\
\>", "Text",
 CellChangeTimes->{{3.821261714371255*^9, 3.8212617148696632`*^9}, {
  3.8219897689842377`*^9, 
  3.821989831978258*^9}},ExpressionUUID->"13af3e83-451e-4a4e-88d7-\
1000ad6fc587"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SeedRandom", "[", "1", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.822041077332098*^9, 3.822041081553977*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"ed29506d-fec4-4f3f-bd3f-1709a8e561a7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"3", "+", 
        RowBox[{"2", "x"}], "+", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", "0.6"}], "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "5", ",", "0.005"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8220408002159376`*^9, 3.822040831065183*^9}, {
  3.8220408664839153`*^9, 3.82204089263459*^9}, {3.822040926436454*^9, 
  3.822040938800031*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"c9dea3d4-7b2a-474c-b9e2-21fb21f1b9d3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", "data", "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"3", "+", 
      RowBox[{"2", "x"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.822040845097659*^9, 3.822040848753278*^9}, {
  3.8220418237952175`*^9, 3.8220418529933414`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"c4d95b9a-67d7-4457-8b08-002fc76bb4eb"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw12Xc81X0UB/BrXPe613WXvdfl0vQ0lMr3pEXDKKE9Sam0o6SdkoqSdknR
0FIRWiqkNGhZDRTZe8/nPo/z9U8vj/zGeZ/POd/7ZLzUb6aXPIPBqFBgMP77
k375V+a5vHfjwHa1O1OKt20igXvybkxxV8bv9xEN9du808f5kGSwv8o16SgZ
o7XAjvuTjT+PIN13yjs+uirB2TP/f5GDVu2LjN3Y+PcvkuurtqSPj2BDtet/
/+UyGRkWdnQHi17/KvGRsIKj25WAk3tl3TjONXLfq0aNc4eD17tB1MtjmKzx
KmA5/9jLFuktwqtj7d1owsLr3yHD72pxfrzkwlXZb+deuUcYQ8XdfVwFvF88
4Sy++/r4Oy4M+//rARmvef604kQu3v8hMT2bs2rbBgV41SKV3SGBnN5xekZt
jAo+zyNyjiHkaqkrwMz+G5JlS+6stLzNxudLJk3aK802zFKG4m3/XTCFXE2c
Feh9Ux6f9wnZs3Tol7knusn6/x5v3VOS4VSld6yGg8//jCz/mTv5DZsJ/Rqp
ZMur0LE963j4Pqlk1ivJUjtnOXD4/wYvyOyLEwvAWwXf7wVxHXLEtEiFCf/d
TXZLcsfj55LtvfL4vq/IgnDnlIztTPj/dXJfkTcu6V83D6L1TyPW40VPk28z
wfC/xzFIJ1GVHT1aN9lYj3Ry+btR6edAEazw/u8rg8jNNN/004CF9XlN9gz/
+yg1mQP/XU3tzmuyJoLpdn+vKtYrk8wTtH3OncWB1v8u15JJamdaDj+jK8D6
vSG+j2tc+7q5YPf/Bd+SZ2M2e+8OVcF6viUzeOuPNmYqwf+Ptz+LKGWl6HTr
qmF935Gw6BvbeXF8eP/u/y+y1zp08lR1Reiv93tiH/LZ7aSOAqj//4AfSH3Q
gtr1qwRY/w/EK00SmP9OBf6/3PyPJFRQGatsIUCPbJJ0bQWzT8LH98kmQdGt
Q6u1BOiTTfKz/W/fkyrj+2WT1CjF+jB3JnrlkHHtajX23rSfc4iFkRTUL/PR
L4cMbCz3HnGDg+//ieibzA8TlHPQ8xM5Nd9+evwGIdbjExnz8X3v+jIh+n4m
d4NbE335fKzPZ7Io6VbA0Jkc9P5MJjk3/zaxFmC9vhD7DXf9MrqU0P8LaRuR
udrkoyrW7wvx7PLqKevhYD98JQVLP5VP/sDDen4l8buUZ//N5GF/fCUb+1TH
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
Ggx9Z/jwiLUl/AtRXtPf
      "]]}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJwtyXkwHGYcxvEVRxYbdr1oxLG7LLuvq7SjkQzeX+ihjqiImkqqte4Sia2d
iaNNotlgMnTTKkLVoHTCIIJ2SGkcjVvDJqroEItMJSToiqtUZt4/nu/nj4cv
Pn8q6gCDwfDf3ytLvhRrOUemeezHlMFgQreC5xfC+4i4MBVG3lpM2Lvf/hWP
F0cipk+w5SwmlNzL4WryUkjHK0yYkOAuPfeSm03SFieWyRtMUGzH5r3g3iTP
KwI7L0Uy4eDkrHCJe4uMG5O4vV4mlPWXJj3ltpDqHZNfdm9oQ1199mSCYz9Z
d0kqHnpHF2LIyM1nEgWZCEi2uTvFgsR5rGyq+4ucTel3rY3XAx3+VeG06wzx
ZD7uO6rHhlz2gG3Zp0oi6L7jIxpng3jy9G/qgwtk/K1HzxmNHEj6/ar4vHCR
nHUuG5/MNoCGC6ygw+8vEXuzLsN3TyEoS4tfdAp5QR60uUgL7Qwho3Qn8N9n
K6QjYFeUum4IDMUM/Jq6Ri7HXeCFtRmBTXL0xdO2KoKOv+lm+50xzKkKPtRt
WyerW741srDXwGf+sy++SdoglZJmjz7Xw3ByTm5nYbFFhJJeI319E1jsEl/u
rd0mqnBnmBszAUfOmLnXJ/+RAubT3LL6I6Cz/0yt7RJZ6ZbTcoopvLcU+tIy
mEE1g/HOSLVQezWqOTRndYfxVGpUc4jWlM4MDx+gWkCEJK2ZVaRO5cLrMXbD
fuEaUNhoFFPlxIM/DOx1pcc0IVY7X9b6PQ/u1mUU26trQVhIh3++Gh/S1Gw/
GPxbC9oZRqKFRD7oTKV6JzYdBM1Ed8HRCT7MV/HzStOZIFGw+wM8LCFPZKLR
EqwNPnmsjKlqS5AXRfeE83TA279R6cS2gtC8j4dZT3TAod8x5trnVrDxduVm
absupJeP7gRMW4Fy3vNiZyYLViV8t8deAih3dzYdCj8EIz8U5izcFkCtTMqJ
cdCDsc7WrEZja8gMjvBVV+lBd3VD5ZVUa3CZKruVOaQPR5YfPOxasIZCXFw7
5Mum2sClezmFvi1sqg34mwZX9gs4VCGcSOw5w8nmUIVQaiYWDKo4VCEIun7K
P3nGgCoCuUOn7Wi7AVUE0WsaI322iIpB3LDKy/4aUTEkZATt+NxAVAzSoKY/
Wd8iKoYslTRXno+oGOqObW4XlCAqhs2OvbGqGkTFIB9l5XT3ICqGoopzsdf6
EBVDRfKwl/cAomL42Vi+NTCMqBimQlGs4hGiYhAqTbxmlYiKwakp1eLHeUTF
cFw2uRn1BFEx+AlLbv+ziKgYJPE8i5UVRMWQ7nZl884aomKQHZp9mKxCVAyF
9RXXNzYQFUP5ZY2Y1i1ExVATGOWZvoOoGJos75t77CIqhvY1m829PUTF8D/E
nSdl
        "]]},
      Annotation[#, "Charting`Private`Tag$7832#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 5.}, {0, 14.408466213256478`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.822041853389068*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"f14239c2-2e53-4e27-8685-938c03423d58"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "data", "]"}]], "Input",
 CellChangeTimes->{{3.8220409469841723`*^9, 3.8220409535830126`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"ae15de80-9508-4bd2-9843-1a1af2d779bb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1001", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.8220409538973875`*^9, 3.822041090023096*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"4231b2f9-d59f-4564-8492-18532766975c"]
}, Open  ]],

Cell["\<\
In the video lectures we had the matrix of data with rows corresponding to \
the variables and columns corresponding to the samples (measurements of those \
variables). Here, we work with the standard convention in statistics and have \
rows for samples and columns for variables so we will need to keep in mind \
this different convention.\
\>", "Text",
 CellChangeTimes->{{3.821989861059564*^9, 3.821989902750708*^9}, {
  3.821989949165165*^9, 3.8219899504028597`*^9}, {3.821989980794836*^9, 
  3.8219900416739597`*^9}, {3.821993351010601*^9, 
  3.821993451981394*^9}},ExpressionUUID->"bc293daf-5d4d-4a94-acf7-\
b496d1b1e65c"],

Cell["\<\
The first thing we need to do is subtract the mean in each column (i.e. \
standardize the data):\
\>", "Text",
 CellChangeTimes->{{3.821993750747079*^9, 3.821993770478919*^9}, {
  3.82199381826602*^9, 3.8219938229880257`*^9}, {3.821995665341416*^9, 
  3.821995672699621*^9}, {3.8219972361429787`*^9, 
  3.821997236843732*^9}},ExpressionUUID->"b6b26fe8-754b-4b3b-baf8-\
0a7a58ef3b15"],

Cell[BoxData[
 RowBox[{
  RowBox[{"standardizedData", " ", "=", " ", 
   RowBox[{"Standardize", "[", 
    RowBox[{"data", ",", "Mean", ",", 
     RowBox[{"1", "&"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.822042077900727*^9, 3.822042172531694*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"b70c49d5-5e68-4ac8-896f-b17e2eea25fc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "standardizedData", "]"}]], "Input",
 CellChangeTimes->{{3.822042176895527*^9, 3.822042206127181*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"8e3427ed-217b-4304-8ceb-5dd7871f3756"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
muHnpssrBe9S9Bz7sMd+zTrmneBbipt9MOZTlYgPFTxLsfbqg0cF+kXoJfiV
YvSzu7+mdBXxzoJXKb5r96XURKTEzoJPKc5/LLnTaX49Mo8SnP86Iey5l5o8
SvDj5xmnHc6IyKMERVsrl2bdEPHMowTTen7apxgnIo8StG2xtLZVZhEyD83f
O+RGbDRSkEcJqnc2XLnkWI/Moxi9W7RyGf1MwjOPYry8/FgLs+lKZB7FqP/c
6nyL4gLyKMaWBXPWBl2qRuZRjF0/qsxP6kh45lGMIpe3vstSs8mjCN2ezun8
ZGIhMo8i/Bjd5m2YdRUyjyKcf2Ne6fRMMc88irD/tk3/TpCKyKMIzxVKn96d
L+GZRxHeuVEk3nREnzwKsW/BgIkP9uaTRyEmFD22cPzVhMyjEAP1Ztw+dbCe
PArRfvvcFl28NPeRgkch7qy/fPH8uVryKMT8w1vKIo+KKD8KkK8vaZg9T5sf
BSi6vAMyDv5G5lGAnr+2yUJvN1F+FODksNMKg5BaZB4F6Ku3qkahqCSPArTY
tsBn8xgpzzwK0P3Biikt2irIIx9fPdHb1vxSmx/5eK7X+qF1OWXkkY8iz+sm
puJL5JGPyuRNt0+31uZHPnY73PnWnr/rKT/ycW+JSqU7SMwzjzzsNsjkmP5B
XcqPPIwZmLvL53s9eeThZAudMDBRUH7kYUDbX9W9DNXIPDTvbfbdV0ysovzI
w4+zn7rp/VIi88jFte1/DJ23WMQzj1w8/qnbE/W7FPLIxWVbZw/7mlxLHrmY
dep9q4EWTeSRi/Z/BizYc0PrkYulCdPdFhpVUn7kYOK+uHGSdDHPPHLQtktC
7JLMGvLIQbl/fseRodXkkYNWLTNOBYu09SoHJxx5WbB+Uz15aN7bLpr0Jimb
8iMH3x331HlkWUEe2Zje1dSg+nUDeWSjy1+LVn/QtMM8sjGr44MrE8epyCMb
Q2dO2Lnw6RdgHtkYGzO4sreogTyy0T2jv+5XkxrKj98Y1V3fYfjoOsqP3zgk
qFWSRXA1efzG0LZHnu08Ukkev9F+fqv8WT8qyeM3cts+RcEsMeXHb838O8xq
/VUFeWSh75DPL8LnaetVFiZNubxH92QDeWRhQv2CjfufKckjC/WT+g+Iqy4g
jyx0yfDR6dC7hjyyNPEN6x3bUIG1gkempl6qT/YyysZrQvwzMf1SPwNuVAO6
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
LclDh8t5YOI4Y5UF9z/Ub4AD
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-2.4999999999999996`, 2.5000000000000004`}, {-6.20794458907309,
    6.414546331154276}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8220422081530356`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"0e25f90e-9792-4003-8360-dc0fd3c5f3b9"]
}, Open  ]],

Cell["Next we compute the singular value decomposition.", "Text",
 CellChangeTimes->{{3.821993897758915*^9, 
  3.821993908180545*^9}},ExpressionUUID->"a30f84de-ae8b-4c7b-97de-\
c819284bd632"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"U", ",", "\[CapitalSigma]", ",", "V"}], "}"}], " ", "=", " ", 
   RowBox[{"SingularValueDecomposition", "[", "standardizedData", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8220422165624585`*^9, 3.822042255928844*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"08532ed9-db18-4496-8c53-93894f036ec1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Sigma]s", " ", "=", " ", 
  RowBox[{"Diagonal", "[", "\[CapitalSigma]", "]"}]}]], "Input",
 CellChangeTimes->{{3.822042292060725*^9, 3.822042317465345*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"1dbef4aa-ee9c-43c3-81d8-94c79c016ebf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"103.77797747452907`", ",", "8.276359234721342`"}], "}"}]], "Output",
 CellChangeTimes->{3.8220423178355603`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"e91fa9e8-0bce-4e50-bc82-7c31b98554dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "U", "]"}]], "Input",
 CellChangeTimes->{{3.822042258378085*^9, 3.8220422621723156`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"c60b45c3-3efc-4314-869d-cd956b93477c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1001", ",", "1001"}], "}"}]], "Output",
 CellChangeTimes->{3.82204226266311*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"c07358b6-b213-45e1-a8d6-0b541c8baa23"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "\[CapitalSigma]", "]"}]], "Input",
 CellChangeTimes->{{3.8220422649180384`*^9, 3.8220422711716757`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"40c2256c-3c84-4160-91dd-29eb82de82f7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1001", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.822042271472556*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"21a0b7a9-1b5e-492b-8ec5-2baac5a5a578"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "V", "]"}]], "Input",
 CellChangeTimes->{{3.8220422738495083`*^9, 3.822042281606357*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"9fd5a2da-34e0-4560-b84b-8d85a366c2bf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.822042282007227*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"5d293ca7-121b-4e83-900c-d58390150ea6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"V", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8220423253237886`*^9, 3.822042330192713*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"82c37aa0-1f5a-4bc1-a08a-0689cc6c4530"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "0.43458332649881987`"}], 
      RowBox[{"-", "0.9006316296517792`"}]},
     {
      RowBox[{"-", "0.9006316296517792`"}], "0.4345833264988202`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.822042330926216*^9},
 CellLabel->
  "Out[35]//MatrixForm=",ExpressionUUID->"58d32be1-4c7a-4454-a5c7-\
03605a831191"]
}, Open  ]],

Cell["\<\
As expected, we have two singular values, one which is much larger than the \
other. This reflects the fact that there is much more variance along the line \
than orthogonal to it.\
\>", "Text",
 CellChangeTimes->{{3.821993948030292*^9, 
  3.821993987436459*^9}},ExpressionUUID->"11f67241-72b5-4653-a7d1-\
123a18402950"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"standardizedData", ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ",", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Thick", ",", 
      RowBox[{"Line", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"\[Sigma]s", "[", 
          RowBox[{"[", "1", "]"}], "]"}], 
         SqrtBox[
          RowBox[{
           RowBox[{"Length", "[", "data", "]"}], "-", "1"}]]], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"-", 
           RowBox[{"V", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], "}"}]}], "]"}]}], 
     "}"}], "]"}], ",", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Thick", ",", 
      RowBox[{"Line", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"\[Sigma]s", "[", 
          RowBox[{"[", "2", "]"}], "]"}], 
         SqrtBox[
          RowBox[{
           RowBox[{"Length", "[", "data", "]"}], "-", "1"}]]], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"V", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
     "}"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellLabel->"In[36]:=",ExpressionUUID->"1d6c3a0c-d031-4acf-994e-59d498ebbfaa"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
muHnpssrBe9S9Bz7sMd+zTrmneBbipt9MOZTlYgPFTxLsfbqg0cF+kXoJfiV
YvSzu7+mdBXxzoJXKb5r96XURKTEzoJPKc5/LLnTaX49Mo8SnP86Iey5l5o8
SvDj5xmnHc6IyKMERVsrl2bdEPHMowTTen7apxgnIo8StG2xtLZVZhEyD83f
O+RGbDRSkEcJqnc2XLnkWI/Moxi9W7RyGf1MwjOPYry8/FgLs+lKZB7FqP/c
6nyL4gLyKMaWBXPWBl2qRuZRjF0/qsxP6kh45lGMIpe3vstSs8mjCN2ezun8
ZGIhMo8i/Bjd5m2YdRUyjyKcf2Ne6fRMMc88irD/tk3/TpCKyKMIzxVKn96d
L+GZRxHeuVEk3nREnzwKsW/BgIkP9uaTRyEmFD22cPzVhMyjEAP1Ztw+dbCe
PArRfvvcFl28NPeRgkch7qy/fPH8uVryKMT8w1vKIo+KKD8KkK8vaZg9T5sf
BSi6vAMyDv5G5lGAnr+2yUJvN1F+FODksNMKg5BaZB4F6Ku3qkahqCSPArTY
tsBn8xgpzzwK0P3Biikt2irIIx9fPdHb1vxSmx/5eK7X+qF1OWXkkY8iz+sm
puJL5JGPyuRNt0+31uZHPnY73PnWnr/rKT/ycW+JSqU7SMwzjzzsNsjkmP5B
XcqPPIwZmLvL53s9eeThZAudMDBRUH7kYUDbX9W9DNXIPDTvbfbdV0ysovzI
w4+zn7rp/VIi88jFte1/DJ23WMQzj1w8/qnbE/W7FPLIxWVbZw/7mlxLHrmY
dep9q4EWTeSRi/Z/BizYc0PrkYulCdPdFhpVUn7kYOK+uHGSdDHPPHLQtktC
7JLMGvLIQbl/fseRodXkkYNWLTNOBYu09SoHJxx5WbB+Uz15aN7bLpr0Jimb
8iMH3x331HlkWUEe2Zje1dSg+nUDeWSjy1+LVn/QtMM8sjGr44MrE8epyCMb
Q2dO2Lnw6RdgHtkYGzO4sreogTyy0T2jv+5XkxrKj98Y1V3fYfjoOsqP3zgk
qFWSRXA1efzG0LZHnu08Ukkev9F+fqv8WT8qyeM3cts+RcEsMeXHb838O8xq
/VUFeWSh75DPL8LnaetVFiZNubxH92QDeWRhQv2CjfufKckjC/WT+g+Iqy4g
jyx0yfDR6dC7hjyyNPEN6x3bUIG1gkempl6qT/YyysZrQvwzMf1SPwNuVAO6
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
LclDh8t5YOI4Y5UF9z/Ub4AD
      "]]}, {{}, {}}}, 
   {RGBColor[1, 0, 0], Thickness[Large], 
    LineBox[{{0., 0.}, {1.4261928747205275`, 2.9556458672852295`}}]}, 
   {RGBColor[1, 0, 0], Thickness[Large], 
    LineBox[{{0., 0.}, {-0.23571462427349724`, 0.11373978233565096`}}]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{304.68520102240586`, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8220424412502403`*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"45cb761f-066b-4d76-94df-ab71992c2894"]
}, Open  ]],

Cell["\<\
The singular vectors in the columns of V give us the \
\[OpenCurlyDoubleQuote]most important\[CloseCurlyDoubleQuote] directions in \
the data\
\>", "Text",
 CellChangeTimes->{{3.821994485779088*^9, 
  3.821994532624415*^9}},ExpressionUUID->"41482608-8006-4da5-af59-\
d3259d1e2ef8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"U", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], ".", 
   RowBox[{"\[CapitalSigma]", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"1", ";;", "2"}], ",", 
      RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.822042664437009*^9, 3.8220427306475143`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"e68a876f-55c6-4dfd-99e1-a66a90c12252"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
C7ZCvkZ4H9a/pDG74s7ahv4HBWyBUg==
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-6.841872465626427, 6.629725402377021}, {-0.9755494897980131, 
   0.8447466220970697}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.822042716164813*^9, 3.822042731601157*^9}},
 CellLabel->"Out[38]=",ExpressionUUID->"67a27246-4a51-4041-8fa1-b1969082febc"]
}, Open  ]],

Cell["\<\
The singular vectors in the columns of U give us the projection of the data \
long those \[OpenCurlyDoubleQuote]most important\[CloseCurlyDoubleQuote] \
directions (i.e. the same as standardizedData.V)\
\>", "Text",
 CellChangeTimes->{{3.821994485779088*^9, 3.821994532624415*^9}, {
  3.8219948442301817`*^9, 
  3.8219948898067417`*^9}},ExpressionUUID->"7ba9227e-d85d-4804-9cbc-\
2ad09d70cc6c"],

Cell["\<\
We can also directly compute this projected form of the data using \
PrincipalComponents\
\>", "Text",
 CellChangeTimes->{{3.821995944656753*^9, 
  3.821995958522593*^9}},ExpressionUUID->"396910eb-ad24-4c15-a09a-\
fddeef6de798"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"PrincipalComponents", "[", "standardizedData", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8220427529792895`*^9, 3.8220427660921316`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"79bb3558-faa4-4ce6-b20a-c86051a6679f"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
Yf0UajMrzqwt6H/BnW74
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-6.841872465626424, 6.629725402377026}, {-0.975549489798014, 
   0.8447466220970685}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.822042766692281*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"34b9337a-5f2d-4861-993a-daeff673a675"]
}, Open  ]],

Cell[CellGroupData[{

Cell["In higher dimensions", "Subsection",
 CellChangeTimes->{{3.821996491584209*^9, 
  3.8219964943847303`*^9}},ExpressionUUID->"69fc2dd0-745f-4871-bc9a-\
569458acaa80"],

Cell["Construct a 3-dimensional dataset with 3 variables:", "Text",
 CellChangeTimes->{{3.821997198806382*^9, 
  3.821997216970263*^9}},ExpressionUUID->"a94eff33-39da-4dcc-9d1f-\
b82c2dcefac9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data3D", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"3", "+", 
        RowBox[{"2", "x"}], "+", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", "0.6"}], "]"}], "]"}]}], ",", 
       RowBox[{"7", "+", 
        RowBox[{"4", "x"}], "+", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", "6"}], "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "5", ",", "0.005"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[40]:=",ExpressionUUID->"fc94a7a6-8dc5-4081-abc1-a34c8644a1ec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPointPlot3D", "[", "data3D", "]"}]], "Input",
 CellChangeTimes->{{3.822042937247514*^9, 3.822042947244624*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"dd9ff972-8359-4e9c-8331-d7402496f1eb"],

Cell[BoxData[
 Graphics3DBox[{{
    {RGBColor[0.3315753, 0.4561011, 0.6388182], PointSize[
     0.009722222222222222], Point3DBox[CompressedData["
1:eJw83Hc81d//AHB7j3uvvbnusvem84q0aIkohSSJaKqohKLSkmggFdlFRUUk
aaFlNFBWWSEje//u99N5/zw+f/XxuPd9z3me13m9Xudcat67nbZzcXBw/Obm
4GD/9/8/vnKXUbSpMPi1NDh+vjD1/Ihk3rL20ANoz1xBeyUXHxx28leR+fQL
//tJ5BQ81pJnxwVwd/6mZL0KFClH9a0ruoA6+UX/ONzgBw+XQ4eoPCrw7/fj
kXQmLayxSBC4HNQ3i2xUgsTr//0g1Yqx9cx6Xvj86CG3raE6fp0UNNQawEwj
CYJucMss05invH/d//7PbWRpuvR9xls+uPH374ZzhYr49e+g5MRoM2VVTshT
9mhwDaSD0Le0PTZCmcjyM/ldxBw35JztGLb8YITfNxvxDud3+HLzAeMat+e2
/fygsflixRjrLgq1i8s5cngeLVrcun/kHh9+njzEtceG+6IHP2S1WzNmcqTg
DvvVv6XdR9fvH13SPMALh9YmRFFuaMG/53yAfAJGxLIm+MDCWsOv55gGGP33
U4DUdtCinScFISdXX4XblIqfvxDJrZPWCXjMByUKIUdep6vDyzEW+4keoQTD
7Wsm1bgh45C00pJ2Ofy5niBL+3MB11rIEN4xtlNw+TRy+vegaGvtNrsiA2Go
Lt71IuccA3/eYuTxGfX6VgpA7Bxnlv9ozfP20P+98VPUdiZvrDiZH/Kg2uC7
LR8eh1K0tbF1xXyQIJC2t3/IOcsLe//3cfc8Q4sP7AjIfikO4yG2rY93KuPx
KUNPq9YkSEiJgEw+38Tp3WrwT1U52ixN2zLMyQ9XGhNKu/bz4nErR3ccRvbP
enBC7M/ZTNpJGiz/74FeoMEgtVHdBAG48MV9d4C+IJ73F2i4Lutzg4wo0F5T
3oWZcML/npL9qKg0r2W6uoIXYj8oK9mqEOP8EqWpLf65SIIMbwKlGyPfaMJ/
w/btJWI+Msyrl+SH/ielpo4vZPD4v0IFW3Ssn7mIg3nKAZWJqcHnKv/7WMqv
0Za9NrPdw8LglRW2bPyLGJ6X14jvxaNQvhZx8CiNe6L4QA92+P7v5w1qzu/b
pXWPFx6S3NTsVzLxfL1FJbNxQg9PCIBs+9XBUTkW/O9dJfPeoq+3JSPFRUlw
8qLretV5Pvg3j5Vofl2nZ1yaCFzNkK0N4ZGB8f+97VglKqXtiXyUxgN+jInc
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
      "]]}, {}, {}}, {}},
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{335.28394420483835`, 248.84799330478322`},
  ImageSizeRaw->Automatic,
  Lighting->{{"Ambient", 
     GrayLevel[0.5]}, {"Directional", 
     GrayLevel[0.5], 
     ImageScaled[{0, 2, 2}]}, {"Directional", 
     GrayLevel[0.5], 
     ImageScaled[{2, 2, 2}]}, {"Directional", 
     GrayLevel[0.5], 
     ImageScaled[{2, 0, 2}]}},
  PlotRange->{{0., 5.}, {1.904414812368684, 14.037151300351086`}, Automatic},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.10803440610558733`, 2.9998584225623723`, 1.5617868009683682`},
  ViewVertical->{0.02184351083696212, 0.06100546725495361, 
   0.9978983886144522}]], "Output",
 CellChangeTimes->{3.822042947854127*^9},
 CellLabel->"Out[41]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
g1xSeJGjZP37ZHmcWe2f+K2cczlp1w4WfTSsoZUUAUlkdJAkyRryIfNZA7KL
Bfp9x2r3xQY5HaRkuxgk1SybjWW7HwuX/JRrMzUU7iaox+S6S551LSJMEuv5
aGPon7LHIRN4/G27NSUpTha07bbAbyZuekgc5NOeWGcgEMgCCJhVj1F6YWm2
aT4ya3G53eGDcdYlf6qQZs898+7tTFb117xUnEzyoWs7XssSZG4fMjf/Uva/
ePmN6QvbvwKwzNiPWXvK3/KR6CoU1pifnsx0AopcZcvTMrHe6hKdEmO+vuQB
pPVp2Zu7zCgWH0FchRAylQDpFmQEb+Xe87d/A3jwKGGTaa92rDNzXGtgC00K
v8g8Ql35+9GywuAZT+bAj1AQ+javuGpIcY0jI6m3NjLQ9kMe8xoAROwvF9lz
8NJx7RgJ78ujhraxwA1OhcpWO2WGiH1Az1MtiPgHMpvIiKB9YlZqgwg1lnk7
JRcfLMPuvXjrG7vnrn3e6bmBpcNtlt/ygdwLX0XA8DXK7eBMsIZcs6xPkl9B
5KhQOpb+k+VaRNVfzetR+X3KriV38UhaY2obIt8MqBP4ja/t/p3nb/3qwUvb
Xzv56s13XA7WYOGEngKOPAe+Vm9cKTmETdePHBdgdbAF2BtJRWZvE+oRPBvM
qNA5ksDmquRO2rUUJz1YxmAuVDDetftTJtcRmGxiRmDyEDxJxEwOlxJMocFy
i53dcRNQgfgiGKrhgA35PXRHNc2k441Z1tXFdon0LICMEH7s/Av8pkRydVG7
VgbbGE47x4gCgTuXrKMERmOPCbKCU7c0KQZChvHpkuUAdpBW0C/brJMVlhMn
+ZCHEmeTEyrQuKokuuwdTs9d+dmo9XvUsU/gQboZZFleXDMSTWD1MO6+z7tX
xGADjMBoQDKKn+sLomF4iLKcQYCghcB51a7WvzqzJ9dAHHzmi4I21y8r04yg
eQCs3vMVQ1YqJjiNUj51kUaRlFcNpIG7oR5qhN3e8LT0jlERLwGC03lguH2i
BrAKymtw3lmIBmqA8ZgaUwdEFi5jyG/P/QgKZZoCdREFhGdmlMYCHet3+Cue
CYBcwZTJyDKRm7RkAn7JEcLq3rsgU90gIztVQLy8pt7P3BXjFgjWIY6WNaAK
dMGaAbVjj5OovAjRw0jDyO0kWmHDLNwYMyPKI/J/cZKzpz5qXPN6H4bZi6hF
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
fNeRduT/AIR+yW0=\
\>", "ImageResolution" -> \
72.],ExpressionUUID->"7e841091-9a93-40da-a1ca-cd960ad6f3fe"]
}, Open  ]],

Cell["\<\
In this case we choose to standardise by subtracting the mean and dividing by \
the standard deviation\
\>", "Text",
 CellChangeTimes->{{3.82199724472686*^9, 
  3.821997266020989*^9}},ExpressionUUID->"08af93f2-c183-4d1f-b1c9-\
3d5bcd736d65"],

Cell["Next we compute the singular value decomposition.", "Text",
 CellChangeTimes->{{3.821993897758915*^9, 
  3.821993908180545*^9}},ExpressionUUID->"34a552b3-4f8c-4508-8b2f-\
8e2c78529bb7"],

Cell["\<\
As expected, we have two singular values, one which is much larger than the \
other. This reflects the fact that there is much more variance along the line \
than orthogonal to it.\
\>", "Text",
 CellChangeTimes->{{3.821993948030292*^9, 
  3.821993987436459*^9}},ExpressionUUID->"f9b2a820-8642-4251-849c-\
81cf17d9fa5e"],

Cell["\<\
The singular vectors in the columns of V give us the \
\[OpenCurlyDoubleQuote]most important\[CloseCurlyDoubleQuote] directions in \
the data\
\>", "Text",
 CellChangeTimes->{{3.821994485779088*^9, 
  3.821994532624415*^9}},ExpressionUUID->"508072d1-43e3-49ce-9d6c-\
7ead8b87e770"],

Cell["\<\
The singular vectors in the columns of U give us the projection of the data \
long those \[OpenCurlyDoubleQuote]most important\[CloseCurlyDoubleQuote] \
directions (i.e. the same as standardizedData.V)\
\>", "Text",
 CellChangeTimes->{{3.821994485779088*^9, 3.821994532624415*^9}, {
  3.8219948442301817`*^9, 
  3.8219948898067417`*^9}},ExpressionUUID->"8f635ade-7d12-4158-b8aa-\
ddc9a2cb0829"],

Cell["\<\
We can also directly compute this projected form of the data using \
PrincipalComponents\
\>", "Text",
 CellChangeTimes->{{3.821995944656753*^9, 
  3.821995958522593*^9}},ExpressionUUID->"66f3a089-4904-4909-90ad-\
9febc0488d42"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Identifying types of flower", "Section",
 CellChangeTimes->{{3.8219896645927277`*^9, 3.821989670170643*^9}, {
  3.822026885405249*^9, 
  3.822026891574415*^9}},ExpressionUUID->"ca9dccf1-41f7-4cdc-b990-\
8b7ebf833162"],

Cell["\<\
Let\[CloseCurlyQuote]s now use PCA to identify the type of a flower based on \
measurements of their properties. We will work with a dataset for three \
different types of iris: setosa, versicolor and virginica.\
\>", "Text",
 CellChangeTimes->{{3.821997752460844*^9, 3.821997790446974*^9}, {
  3.8220269051508627`*^9, 3.822026954221487*^9}, {3.8220269986092052`*^9, 
  3.8220270286473017`*^9}},ExpressionUUID->"bb70450c-5a46-4797-bf36-\
7d8933b0ab16"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WolframAlpha", "[", 
  RowBox[{"\"\<Iris\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<Image:PlantData\>\"", ",", "1"}], "}"}], ",", 
     "\"\<Content\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8220432362071476`*^9, 3.8220433080029297`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"bd2f1377-8fff-448b-bdc9-1a35caa6470b"],

Cell[BoxData[
 StyleBox[
  FormBox[
   TagBox[
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
/Ebll6dLP2zU/bjS92VyRnV6dU7lcF7rUkn9dHZBW2re8cKyiv6M2JHSmHPN
wfs9vkdD1r1x/d68/uGS9eW0/4sB/7vz9X87WfR8tObO0tidwdGFhoHmwu6M
jjMnxu82pPXZnScQf4O0aDq640xuWr1Z52cQJYAsxSAOsjNLklyjilQp5VFY
kR3H1sNUYpy/Xbu4V9F6LjBwM3lyu3jyzvGS0Wi+D9BMgKIH4iimOiwUeehs
M45pxkAQ2Q4CLIYVS9YCLvzVhGXqYREhcGwDjSYC0E/yDTS1X6gOCoVuBtuK
59hIbDOBrsUTUIBhQucGmBwqh8tgs2gMNoHNJXB4ZDYDjzDJFpk41mwM6TQa
OlHDwNql5CgLy2TCWbyE2r7QnbeTywfVJ5/WLz1uXTjoWng4uHAwMrs7OLPd
t/xwACaL0/tDixc6BCqMXMUWIsxQtDcx7LGZJW6XQqflMjhApWM6o8R6K1tu
IkkNBJEJK7eTlD6qLsiyJvJhxo8qlQarxPXr4ZbTgdZT3qFT5dW1I2ONh0u1
3y4UfLGc/els0sNL5V+eTHtzufKPy7k/1Af2GxN2BwsejRUeNMVdzFHPjaS/
LFRfqdDvdkZ91mR50qQ7aNPsdcj3htSH3ZL9SefLYdv+XPhwNf2LtZy/XSr6
ca7u1frs7bHFxqHTeeM3KoZvVRRNx9gq2ME2btPZYMtqWJ9I4ugJOARw9Rhj
DDOUL04/blb72UI7SRwF6hai5/ZT2i/Y+2+m917NG35QtnLYFV9jFDoIGi9f
6xTqXCJES0JtJLoB0K3Q2GAhdhQNoKmJTJhH7DQoiHwPFRYkVfgapidABVge
DJtMqQdV+sXKIHpU0XyxgykwUSQmFjQqCg1XImdAS0+EboEBGCwMnQE4LJxS
xDLK+XohS0oHYjKQsYFBhlcpMToTPpJv6JjJuf1+dv5Bw8Zh3+qj3pmdjpOP
h2A2XHkyvLjft/5w5OzDsasP5+t7c4Qwy/CAUstwx4q1TropmiOzEugyIHcQ
nEkILHuE405HvLnCYJE8XKlMqtGlNZozWmzxDWooQxk96sGr6b1b8X0LFYU5
3YPlT6YKvpiOfJyIfTYRfbCe8XY24eWpvF9Np309nPaqI27vYtuPEzkvinWb
zVH3ZrM/FCsv15p3eqJeNpv2m3U7XbqHvZrHQ9qnnZKdUdPTIdPhnO+rpdBX
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
K1MGZYpoidQnRJ08vo0NIaAjWK6EyJeRaSgGxwIEDmCIcCIdS2kVGJwynV0i
VnFoXCyWfLR/BoMBZAIgETEcNk0qQ/k8JpdLNhuldDIg4mDkB3IV3hcSphQY
j9X6KruiawY9XQuh+jH/wo0TN9/NLu10zG53rDwdXDrsX3jUPXfQubDXvXk4
cvJB3423q5sHAy3LsXVz9uZlT8OC88SkpXRYl9+nrpywFg0aSkfM5eMOWKWj
9qIhS36/8VgfpFlzfL04WCsVhYE5F+tKR9bPXfzmzX+7Nff9TMGLRuvdE+I7
VeKddv3rBtXTdsvbGs2LFteLfP1SdXj1m4N/313/u2zDVgr/So32bYvqQ5/h
LZzBdsVBu/JFLfqqWfVllfLlSPyX52u+Xat8PJi11ZNzpqfgynDD1bq6LktA
SdcBeRjYckTaVFZsraj3UkbLmRTfcUHZTLBlM9uUzxYn4lzlAn4YBBuQ2lP+
0gVj1oj4xJqp+bynYctaPmfgugDqAamNtqwuv7tUwYvGC/zkoyAvBng+oAoB
R0FkyvEwmxDlR9vzSBIsXU7mKGlsBZUuIZJRLEfAYnBpDITKETEZCBFPP1oJ
JXMAIqfAkhlYOgeqsfCESjIiI0hVDIggEQsIeCyfxzFqdUqxVCLguUx6hYAh
YEF3CgxGcnqhuXEw0jqX3jgTbpq0tkzb68fd7YuR5QedF17Prz+dnNnuWXjS
O7ndvPy0e3G/6+R+/6m9idUHU3c+25i9XdK65qudt52YNpVN6GFBLi0a1ucO
qDO7lamdipQOeXyLJFiHRNfwYmtRdzHdXczWZZDEiUCaAmTx4FhN4dvXP33/
yX+/Pvz9UNKTStnNUuROlehRCXfnuOxpufKwPfy6v/DGm/s//a//8z9WRvdS
zfOJwvNV2jcNiveQM1sl263yu+3qg+OCp3Xq19Pp3y4UfblY9r4j+e6JmAu1
6evFWfUZOfHOJIEtncVxA4YTmLIZ1mM0VxGtYMg2ce9E+WxsUpuu7Uxu8WSc
rQhVZZDhGGYN6Zq3YnLGpHmT0vozjiMzs2VL70bU8cCVJYo02tK7vP4qjSEH
EYZIOCUAgqOAQBEApvAonjOkBJIcC7gAOhYSF8MSU9gSKlNAonCw8DOQOSGX
QjJkCYhHSkfDEfAA5bPCMVFSERvhkaB1UajoOgPHYuGpZRQ5SpDyKTopEnQ6
DDI5HYuzqlUes0YjYUv4mGi3uKzQ396UPjZUODSQ2zec2zOc1TeW0dQV2zwQ
d/5e+87nM6vbjcsHrdCUzuy1n3w+OvWgd/XJ9PrTxdOP52+/Xm6bTk2pkkdO
yOLLlP48kTeb588RROco/KkaGJf0dlRvoyu1OI2OYbKz1VE4qQ8YQ3y1hyOz
UdQ2msbOPHVm/sXTb1/s/XTz3PvJrt3BqpcjtW/vbfx8f+vH5ZGnZxZfXTrz
7NuPf/nis9+tTu9W5Vydb//u/sl/aojfyVPfrzZ92mx7W4TcaNbd38z7ZiHv
zXHvmaLAXNhd7Q+lx+TECH0Urhfw3EAaAGIflqU/Woxw54qUSThtGjZ/xDx1
p6xuIf34eEL7ehqE1ZJH9deglWvRhUvG+GFK+Yam5oy/dj2mZs2jyTjayBSq
loeKJLEZouIKt8vFYvMAlQ2w7KNxw8nwsKgqEkWIOeJGFIb3v/pVBqAIcTQx
iYziRRIxjUHHHd1jwXM4JDYHx2YCDhuIRXivR+5wSQUoQSSnao2oVMNT6/hG
A89hRo1qrlLM9Np0LrNWwqWZlKhOyrBo2BYtNSlWWXLMlZGsTY6RpiaqU9OM
8SnqSKYuIU3ujefmnbAsXK69925+Ybt5/dnAytP+md3ujVfTs9sDK48nTh9O
X/5kemW7ObVJ6i1g+AuUUj+doQc4EeAascZomcQg4opZWNrRrVQ6B/I/0Ebj
9CGKyEqHbCM2UXVOps5FyytK+Pabn188/M37l//47vE/vNz50/tH//Tj5//3
271/eb/3/9xe/9PS4OuR1luP7/3QWbc+3nnj091/uLX+ze3lH6+O/rHAcqXY
fOVC009n677qTrl6zDuUHWotLqwJp8cYw2JdIlccS9VEeGQTwGkAyw4QH1Ak
Y8zHuNIkOj8G6ypmN68lj14uq5+PtG2kl09GOcsYJbPuExve3DlF9oK4YlNf
c9ZbtepO6kDRMIA+x1MskEUBXRQ2p8iSkqaRqbEsIeCpCVw9laoj4hUASABG
BFhKAFsUix5thkTMGF2Qo/azxQ6y2abl8GlHa/EwFJKOlh7IlKPVB5WG6fLI
OQhAJXiNkcPgAp4ErzPzZVKSQctRK5gSIcVtVUa79To5UyelIQxgUZEdWnJK
jOx4rjvJJzaIgFaMgZ3AF2IEQsBFAJEBUDUobYm98mT6xruFyVtNp1+Ow1ix
sN+38nho5dHI2uO+1WfNFz5vaT5jD9XTEuvMea2pOfXZSUVxKq/Q5JcLtUKh
QshGWQwegYUCvhIo3UBsA2QB4CqYRp9EbWMYvWyDVTA2Pn376qs7l7/98OIf
Pn365bVzt7/65DcPzn17cfKntY6fFlt/GKx8uTb89tnd3/z47R/uXNnevfH2
0e1f3j373fmZzz8/+Pe1wRc5/rZEX67RqYvNdTRNFzcvFvor5NCZ8GMBw3e0
OIjVAaAELCdGm46YCySqHIalmKNIxQSOo71bGaNXCmsXEprXUyNdkpJF44nT
1owptHTDULFhrj1jr1g0m/IAEgTyCNaYxSKqAGIA/mRhaq5R56AK1ICuBETF
UY4g6I92mDPMQOInaUJMkQePurCqaLouli1yEpk6UD3kyKiR+dKpxiBRZoUE
C3BwSElAKGVabEoeQrJYxdnZPoOBxuYAuQJodCwYCUUoGUXIZr3Ya1cbVByt
hKoU4iwKipIPrFJcxCfPiNaGzCKDiI7ySBweEfYGBguwRIBIQFSivLQl7ubr
lbXdwaXd7s0XY9P3W9YPByF8y3sw6U+cOpy+9Haqajwvq+LExNyDuelPpocP
Z8ce9LedP567khWazE+ZD3tbnKZMFFFCpZaYyGwpnsLHoUqaUEW3eOQ8MTU1
I+HShbvL0092r/34xdtf7dza//zFL7fPfRwq311p/K417UVf/qdLHV99/ez/
+M23P758+ujsqbunV/bv3fjwdP+XY8PnVAqv0epANFRh9BHRaTLxBaP+ydu1
RaN+QyZOkQQ0SVh9MlMYTUGiaPoMqT5bIEkHlhKqKYdizCKmdyqn7pb0Xsiv
Xk44vuIoWlaUbSjSZzllm+bKTWvNaUveuEybArTJBHuhyJTFF3iBMopkiKb5
k0XBFLkjjBgCLKEDJ4oiapO5+nQe/Iwxna0M09VhhG+n0bR4khIL/ro/uWCB
WrTAyp/h5A0jaZ1ofDXqy+Hb4rk6L8Ps4UfS7Wo11WHj56a7RHzAY4CoaI3N
oRKJ6SwGRiJk2Q0Ku0GmFNA9ZkmUSaQXEYUkIKaAWJOkIOT26+UGFSKXc+lU
QCYCtYrhcIm0FrrEgKsZzHzw4fTK3uDG09HTL0fndtqX99tXDvqW96eXt6fu
f9havDDf1rY+2HzYUfR8pPzDROXhme6vb0/+ea3lV482/v3O0p+3pr6ozBoR
CrQEEhaVUKVKlkTB4SJMhUqu1Eg1el5Dfe3c6IOFgWfXNj7/ZOd3n2z/+Nne
n15f//3jzT/O1XzWnn6w3PLV1uiHzx59991nP/zw5X9/svu7gZ6t+9sfQkm5
SovBGKOg6YA0Huc7jkojgOUF/hJm52pm11KJKU7Is+LVMRxTCtOUSjFkEmBp
U0mSEFAnk6y5DH0mKByxjN+qKJn2lixpT2xpj63y8laRklP66i039KKhBoYm
EVjTeZ4yJbQu8liqKoaGmoHchk0vdWSWOCxwxKwAsQFpNEEag5XE4sRhDM8L
6KajJzuACOCkAC8BBClwt4OYAZA0iouM4jOmaMWLgsolacWMvKBfklqLVPW7
zNE4Gh+EE9R+vwzhA62eabDwUSGRRAY8NsltM/jdVgGDqJPyoszysFtrV3EE
RGCR0LKC1qBNplEyJGIinwcMOnZSgjkhwQTth1SPN8cK+lZO3Pt4eu1g+PSz
0dWH/fP3Wzae9kKHc+Zpz9p22439U9cvPe6puNISubpU8Xoq/8FG1fNLrV8N
Z26faXu32vJ8b/0XV+fe+A3FQobNpLWoZGIWk8rlsMRiodUO2wzNzU6YHDgz
3/uwv2r/wam//PrT/+9PH//X7z/8z3/6+j+uT3/XmnHj2tRPZwe/urP65YOz
35yf+/R4zsLi1M7y8l1PMJmnQJRejj7EsqaLVGEmywKO1sQlUK3otf0Zg6u1
CaVmGMDJBmBKoxsiJE08sGfSZAGgjMdAS6NLx9iOkY6NWnPH9Pmz0uI1afYS
s+SMuGRDWXfelT+l1WUA+GFzMt+SLSabAcsBBG4MSwcQPYDwHav0ZhZYgxGZ
M8Q1BZlyL07kxahCVGMKV+Inoh6sNIqkDB7ttZBGUSJ9oki/MLGXFd9NTewn
pI4QMyaImePEshX+8ZPiygVZxaQ6XE2Pr+DntRndEYbKBox2slgBODwgFFGi
fdakcLSEz+RQsdCLBl3K5FiD18yxaykJUeL4gFShAFIZMFto6Wmm4gJvQrwq
yo+GIxpLkAcN5OTl1rXd4bVHI1svp5a2u9YfDy4/Gtx8Pjt/dfzGg53b57/p
zt/uSj5YLf5uOvLpSvZXF0/87YXqn651/na27JMzXb+4OvGHjb5vNkc+rAxv
5ydVGxTWSHxsRrovMVGfnm6LJHoqCitOTd6bbn5xY/ZPP774j4/b//bjJ//v
4eU/zTQeLLY+P937frP74+2Zn1c73/WUnfv6+b9cXfvk/tV3blecyW42+RRC
A9EYRkMFDp6OBu2fyMCmS6CnAgVd3s7TubHVSm4AyJNYulS+PJZoSMCrYoAp
nSoNY2y5PEMG2VwI8ibk5ev6jFle5iKzaFNYelZWuWGMaxUjXiD0AFuqGKZ4
xI9nOIAwCi9x4+UOQlSiGHq/7BxrVpY5JcOQmKb1JUiUTgrfghG5yTwzYBsA
1wQ4RkBRApIcWHPwtlyct4Ke3CbMHlXAwJIxIcic4iUMkbJm2enTlPyT3IYr
msoz4mNLrOpV9bEGeVqezOalqo1ElYYR5TdkpMVajQqEQ+AzgQzFhKPlaYnK
KCc91s/KyVQbLcDuIqamq2prY8tKXIEA4o8WZOXbYzI0SjdVHk1bvN1768PG
6v7QxuMROIlT+23TOz3nHp++cn93Yeygt2S7L31vNOXZcvbHjfzvl3O+PlX6
zWrVu5nyw5mq94sNv1hr+82Z3p/urfzx3ua3ndVDWZEYj4fhj6Yb9FSFiFaY
nbS1cHGt7+Xpvm/PDX5+e/GHm0t/2N74x/H6xxM1e1env1vveH9l8O+ujf68
d+b72uzBB+ferk3esup8Ho+PzaPCgIzjYxE9T+0WiowUlgIIzViJj8z34uIa
bb03TqSNusQZwFLIduWLjEkCfRwCGU+dTBYG8OJYoMoEWaNowaIiZZKTtQRZ
lFe6Jc5fFDtKmCwbELtw0fka1E9QR1hHCPoIch9JbMHAACiSAQEP6FW4aC+a
lWnLK/J7YmVs1REJMFW4o62hOipqYQvMHMTEpuiAJSJwZcoVPpI5nqULYgI5
lNIuWf2svHSUXjJNzp8ip48TM2e4WQvSvJPysjOymvPKqg1V3jCa3MhNq5JE
ihVxaTKTmeywMMMBaVy0JDlG7DBgQ15Kfo4KXsyMdFlzlbciR+szEqI8/NTC
YHxpfExZKKE6DJvKkcRdvdF+9XDq8ovFhd2hlRcjJ5+Mr92dvnL93sWZL9uT
9vqTHnfH3JvN21kvfzGd+2ap8LvxzHcLBV8tFHw+e+zdRtM35zq/P9f57bWx
r68tvDTIfDKtjKOkSWw8k1fjdfgebD29MvV6pfXF5bHv7y79fvfMn+8s/7TW
9XGz84sz7Z9d6f/6bNdXV4Z/rEu52VNx9+X+bysr6hQaLk+CE0iZAAdwhKOl
bb1dpHeLTWGZKVliz5NpMxiqLEKgDu24mNa4HvaW0XQRoAwDcQDAgCBLpPMs
JKkXm9rMKJxmJYySkueYmau8Y6vsyhVGdjdZFQIcK0aVxrLmilArAaY8DAtg
WQDHI5NQOgElAc7RPisiCkMfkBlBSpaxrj6Snx902hVUOulo6ycRQ+ZS8FwM
XUIOVXCkfgDdSzBHJrIQ4J8wJUCgxen9jPhCRX6H/viUqWpJWziLQGrNmqRF
RrlpY4LiFXntGXXTWWXPJUPHaUPJAFI3ai5p0meWq8KpwtiIWAMDiwV4Yuie
EDmYyMnN1CcHFXol1euV5laH89sjWV2R0PGotJoEW7wyKlN788XC2cPejWed
k3uN688m1m5Nb21dn2t/2hS+P535djz5cCTl3nzeUwjZqYpfj2e9mcp+N5P3
diLr5XrDN1vtf7Na/+FC/xf31j5W5neIFDKtR6nzKwQqjllnvTB/98Hax2sT
X92e+/W95Z8Pr/7zg/W/PdP75Vb319dGf3lr7JcX+r+6MfmLM8Mfzky9eHrw
RVFRkUjJFMhoQpkIR8aojCSFGThDHKhHmmgGzwZEPrwkQNKmspgu4CxS1C3k
184V+grNXCdVHseHqVCaSIK6posQ07pZWRPUyCwjaZ6ZOEst3hBXrQqjSoEs
CBAX0KRxlQnco9ssVIDjHN14oUgwVCmWLsfDIxkFRP7RPRmOGAjlWJ2RFpek
LimPUVvoVOToeSuFnaH0wa/EiavgaGJBXIkkUmJQOxnQjZMYGDbConNoOosC
JixPsjCpXFAxpOy/4GjbkjdfkpSs0o/N09LHqHHduJwpQeM5R+slT+NZc+Om
uW5NXzWrPTFtTa4WODMozjSmL4NjjaU5giyLi6EwYF0hUWp1dGpDXFZnZl5P
YV5LYXoVzPzSuHLDxZc9F950nnzSvPF46Or+mSsXtqfqDgbTno0kvxpPetUT
e3cwaXcm9/2Zmt9OZL8dSXs+l/92OvfVmZZfbzT+zcWeX57r/eLKzLsrG4c5
xWWuBC9q4smNsvqa9ntbLw7OfXtz7sv7Kz89v/yvz6/+/f7pn+8t/u7WxG/v
TP/26tDXF0c+uzz5ydXVl6szl3u7e1QagVjFkShFFJrQbs9w2PID/qqcrP7y
0qmysrFAsFhnjVXbXDyNUOERi70MYzL/+GSkdS3XXSxge4E4nsAPAmEIBOpY
acP8+EEixC5pjpa7hhatyPPHxepkoIwDyhBOn4miPhZVQibzCGQEQxMBsghQ
xEc7kOlSDE2IJ3JwJC4eJl8iExBpQKwEUXH81BKzOyK0J/Dt8QJVFEPiJOn8
DGhiNV5SdJrIFmKafTS+HCj1dL1JoFDxhFKayY5qbGRPHKN5ONg86WtYtDWt
WZvPGlsvmRrOq4qWudDBZs/wcuYkVaedzZdj2i/Fdl+PaT5jhUaoeklWOqFM
rOG4s4mqABBYgCVOk9NwrGKwDsKX0pZYNJZYNhGf0myFSadysOD849Wzz0fm
rnVcuXd56+TOSPn2YvHHdt/+cOyL3tj9jsD2eMYnp2t+PZnzZijlcLnk/WLR
u7OtP67Xf3el94etzo+XJj/uXvt+fvVcZsUxd8SdlJNycevezoW3b+7+9s3N
v3t64U8HZ//04urf7az96unZv+yt/PH+3E/XJ7+9NPGyp3KuuqjBYtBi8UCu
5mn0CocjMDZw4crpr1YnP55f+Ony0s8Ptv7Ls+v/4876Xy7M/mJr7uvpvp2K
wsmiwr78ktbskpq20anO6elQfroiIGfYgDYbJPfx4oYZUQO44DgmeZ6etyIu
WzaWTTtMGThRABoesj1Pzncz6XIyjn10lwzHA0QBoEGlkx091ciSkqkInsA+
egICVZDVFrbRwTzavRAUGEIitV/IUBGPFgSZICrFBEGHwdCdzPVGmDrYRdDn
yIArwDU5OQoN1R/U6Y1sDB5YnazjjTEnur25DVpLhOjIZFaORbeuJdatOQdu
+mq3RMc3GQVLoHCJXHtaMXg7YfRWfv/lY6O38rovJjZtegvG1DE19JgqUX53
7Inx4pKBsrTW3Nz+/MLRgoyu5OyOZHeWoW688NqrhRuPT928ub8+9qg/5x6k
zaHQ896op/2hZ82eB0ORZ6dOfD9X8AHO4FLxh5m8T5ervt5q/9V85XM4TQ9W
f3du6c3q6RudE4NVPTVdo4NPDr64f+6zzw9+/vrRP728/vePLv759e2/v7Hw
1cOzPz86/ceHm394dvmPl+Yf+c1hm1lns0tVei6WAMRC3fTI5Ud3frqx/u3N
5a/2T//22tTXl0e+uzX1u3vTf9mf/+eDhf+yt/zPeyv/9Ojsv7659z8f3/yv
q1NfTw28WVl6k1PUoI1ReSr40Z10dw8xeozsHQbpi6y4fmrZgrXnfF5Wl43t
AzD1W7PlCCQ9J52nJyI6msSMSE1CsV4o1PDYEiqJd7Tkh6rxEj1ZaeNAFVZY
EK6SQpYCmppAluIA5a+L8mTgSRU4k3kMFdAHCdHZiMoHUBNgygGqB9GJSp2d
ZbRyXFFCOgtwuCAp3dA5ml/eFiezYzA8YAoT4wpFnixa9DFGzYSned4/cCFp
7FpK+Yy2ZEp+Yllbf8rccSm6+1r8yHbWxN6xgbtpnZfiW9cD1bPRx6eSjs8W
p3bn5wxXZ/aVRppT0xp8nkxJ92zp7uO7VzZfbfS9G8t/Op728mzpDwOB50Oh
V82enYHkRysVH1fKvx5Newl1cDDydPnEF5d7fr1Y9fjF6T9fn/3VxZNfXLn1
pGd6rHmic/Pq5a8+/v3bh7///pN/ePvgdw8v/u7D/v/16NLvb6999+rmnz+5
9ZfD679/v/+XzbkbUkTmdGmsDqlGK9WpbUPtW4+v/3x64g3k26tj37068687
M7+/OfSbC23fXev5cXvsD7f6f317+JdPVv64v/zDrdkvb859vLX0xb31b68t
v7+y8ba5fTirPeSsZ1k78bEzdN8giEwyEroY8U382sX4nq08VznTeoyORlN4
DgpDD+gqAO0lTUzCMDBHDxzRMQQG4EhwiBIrMRFVDvrRo3BCDJRLCNnR3mw5
wPABFFA8DxD4gG0EgWOoLkwS2IE9gir9NJg7YOggSYErSeSIFxg8DE+cyGBn
0LmAIQTJlezSPnVCmURqJejd8vjUeF/QK1EhoVSrzAb7gdy5HO47FzdxK334
ZlrblhfOY81pzfEz0Y0Xjw3cbjq6BbrbMnu7ePByfP2mq/5KuHA1WLySldKV
lNueHSlJsAWN46MLi32H89XvF0s+TKW8vFD+64XUzwdjn7f6dnoTt2cLX65V
fjuW/noq+31/4pNzbb8+2/bFjZEvXm394czgx/1rP+88/FDV2dI1P7D38uXH
z/7+u7f/9udf/I+vn/9l/+JvXt//tzubP7y8909fHf63j0/+5e3Bn94/+Xli
cFkulUUHrdGx9mB00tz49ac3/3x37Xf/P0lvGdVWu3UNb1ySQCBuJCEhBIIm
AUKQ4O4uheLuxbUtFCta3N1KS4FSaEtxKO5OS6neft/nPOc5j3wyvvNtzjvG
Ghn7Rwb8mGPONefOutY13fy5JWOpK299qvq6O2e7LW2rImK2OWVz8P55Y9La
06Lzxbbfe/O2WtOWZ57cTFZ+6Mvf6X9wPNnwc3v16p17oewgskayNDdHhJch
bJIqaRYjx7QFBKG4hHr7oDIj0yhlmAboSKWkaIAYHhDB3qro7cgZ5Pa8LUYB
SmEi5PFikkgAghECXY0IiBdGSJYmLY4HhFC3B0PEUIA0HpBAAQgWQOAIqVnh
bk98mOEoBvJkPkxOHQALqQ6omkppmcnT2BBFVXkCFSFHECboATZRZK9EHU0z
lDIb6eQusHM0RGPE3L2NsWQAp3I7CW/oSzYLU/Z/aB5f55XWFpLVE5LS7xzW
yrtTrxzZqJbeZpzXYVcyFFg4GpbQ6x3T7x3R6R7e5OKVaRCS4SCw04+LzK9M
X33gt1but1Fg9SbLcALM8hlG0/G8Z0km/dkOL0AO5touPHR+n2s3151+VRY8
M/RwvT1rtqtwb7znY23T0J3YsOTijJX9/dXFbxuzv16s/77+6nqs9fTNwG/9
DWfrb/57bea35VdfNud+rLy+iI/OoJIpNGWcMpNW9KBxqGVnrOnHcPnn+pSF
sbLztoy9oYdf6hJ2OzIvahMPOnOv+x7cFIXODxXfgKLalrX/7NGn/ryzlqS9
4dzrgZyb2qij3orTO7Ep3EA1rRQZVhJgnCNukiyp4QYo2wCGgXLuWWqxDfY+
903xBlA4SxrPxiIYcBmaKBj3YCRAjgggyUIIgqiUrJColDAgJSQCEwNTgyga
AKkHp0sBsmCvhMspICEYmARCQkxWVFoeRWHhCdoAzxVQswXoAkDRQA6hKqOo
i5ehCkmSAAQNYAtoKKI0TYXAUCVSVOWc/NUDEglWPuLGViRjM46Lu4MyC2/r
pWDuiuRZEA1tFHkOcsbu8mZ+ChZeis5+mgHhhg+ehFf0pzzsicofCEtp94hr
to1rsUhot0jptskccMl56pczEpjaF5DYFhhS6pnyMKOneqUtaavEezbBoD/X
7XWey5tUwUSK/lgaf+yBzdwjt+0HTmv3Hd4Wu7/riDt/fHepr+DsYeiL1kfv
u2pX2xqf29t61z7p39m+3t/9cLz97WLjf2YHfkw0fxyrO5vqPl0a/7i98G13
7bfV+T/WVr/FxIeYmuvwOZblOYOjjYe9JTsv6i8bM5fr09ZaM/fbUg+bE/dB
gNrvHT4Om+vLPW1P362NXZ6q+jb04Kz/wWlz2mZ71u545ZfBh5fN6bsNuQeV
Ja94d3jasRitVFnteJhlDEngjmbqAER1gCwAbO6pORXqBFZam0XoQpQAOZao
rJKQNAkgqsLBwjNkKBpIKdztGRZpyu1aDHHy7QOcBgb5WxxB8RRGCYugRcQQ
wiCy4ghheSJSQRUpzwC8E1Q9kxlk/u3bHqy2BIkDVRVgidridB0I14IkgwMg
KEBdl0Bny5l7UKLzmJ7RSD1zhLGVhoOblba+oqkT1itMmcG+fWutbQE1ckUa
u5EsPZka+rKKqiJaArTVHY3AbNuczojC0bjiibjc4YD0Xs/EVrvoesvoBpvE
VrfUPv/swcj7g2mVHXU1+ZPF/q8aI3buO7xOsnqW4zRT6r6WZfIqVf95utFk
iuB1vv1yiftSvv1UU8RhRdByacib9rzNhoLF8d7T+KgCJZp2b9+r05Ofzk+/
nex8v1z/n9ddtyFiqOLwRfPO/vwvG+++Xh7+7/b7v62vf/O948lSo8eH53VV
zz+tP2m7vz7X+2ttynxXwVFDyk5tzHp3xjmIYGvyfmXE0tPCTyCCPTlHww/P
e3IOuvMOe/KPXlb/9Lr+dzCetGbu9Jaf5WW1833VudGyWoniuvGSNlEkbRMJ
Ag3AKQFITYDrR7JKU79bbnmvPkDTlojTlJRWuA3vskRhDF0aT4filWEMHSyV
i1TkIUl6cIy2NFJNUl5ZHGQTKJ7iWECKIAbB3waQ27kmeYCmiUFSJUBTKkUA
dB1RPklsnieCbiICVQZQmgBWU0TbGqfvQtSxRSvpSWCYAFFD1D6Iee+xnl8K
kWcH55opqHKJBpaq5m64uwkcPAOQVwC0TGEmrnjHAA1HP01dQ7SyupQKT45r
RTHx43im2gU/8ox9EpA3EJ0/GFkwGJrbH5jW7ZvU5hHT5Bbb4JXcFHW/urQm
b6os8G1lwMpgyqeOe5dpNhPFris5ZjN5ZtMggmHaTzMt31X4vM+zfdUYflDg
NpPnPdaS/X74yfFk/6mPR6y8vMLUq/UPV398uvr1dPv75dr/jjdcDJYedT/c
mOo4Pl39a2/5l6vj/9rd/O39+kcLK0tNDU5d2ehA/fZw1Wld6vJK/9+Lw6f7
H17WJ+5UhK02Jew9L/paenfu2aPP7WkHoGb2ZB8PP7wcK73pzT8Fa7bpr2el
NxVRi225OxV5r7PzKiLLXRwfkLhxgCARYh2KBQM4mnQ7UQagAKIhzP4e1zSa
5p/DiyqyA40HlAJgVaQITBmwlDQxIA1JLDkFbTmKrryCPpzEkyXz5agGSIXb
33NlQCbCKWKyJBFJNADGELCUdZBYJQhaESmBFJGlgSDiDLzkbMNIqlZQWRUA
dEpKAnmaoYiqhQTPBW3gRtSxJyoZinqn0HKazC3voGl6wnhVMW1T4p0Ebly+
hbYJTpWH1BTI6FojnAM5PAsFfQFBYEmzctW28NATeOtZBJvZx9u5pbt4ZDkG
FLol1AXk9kY+GIktGIpK7wtJ6wyLqw2v7mypzZ8u9J7OthtPNxvLcZ3pz/hc
5rlaZD9fYPEa1FIQwVTT1yXuy49c3lUHbuc6vqyImGvP3Vga/eP18KWXWzSJ
pDK/cHh1+fvnj3+ebf44Wfyv0crj7rzdzvz1paeftma/Xu7/43Dnt6ODH2/f
bTo7e4eHpA23bbaXbPUUnZRHzc+1/a00bLYj/bgqYh00um0pRz2ZZw1xW/15
F2CBQjr84Gqu8W8d6fsjj67HK77XxL0HqyvntCp1Liury8jd2iKB7l1BCWhg
+JUz/DI1jF2IMnhAVA6QponLakrzQxjmcQzjMFzsYxv3eCM6D0FlwxkcDEEJ
SlWRp2ugiSqyZC04iQPD60CxOlJEfdjtXiZTLEOAJeshQGSJbBkUSwLOEAZL
i4+hqyHFoKLyWKQsSRyjDFjfpXIdIfZhqgbuNAJXGsABaG1A015Oy0GWbiJO
YIsqGUF0XaUDslUDs9Ssg4jKRlB1c6SlHzU0U2DppaYpwIIc1LGSt/FWA0VV
Ww9hZE7l2ygbOmia3xG4xLt6pPk4p7hZRluaRwmsYgzdMizulrjFNQSk90Tf
H07P682q6+mpyn5VHrjwJHirzHMJVNFsx6mW8JPGgAMQwXjOaIzeeILBVI71
dI3fZq7NdJnPUkP82tvWHytP/9h884uNpR+Xa/J+7fTy7NcvV39cbv26N/Nn
f9FuW+p6T+7m6sTN6psP18f/dXr4y8frr/XNbRnpRa3101MDnxryNnsKL0tC
58bLvjYnbtfHbleGrj8r/NYYv9sQt9ORegL2xOEHn0AmTlX+8rTw40D+eWf2
SWv6AUhVsDqzzpofrbsEJaq4aqiHQjSiAIschF+pxr1654zqAHVz4u18C0mI
aEygOMgZRtN5kThBJCW+ytvsjiaJDVHWRano4vF0CFkFTtNCKmjKErRhOLY0
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
GkX3vkfW9xNRtga4rrI6DmgQRKKeqI472TJOxyRWxyyRdyuhMfomscbGkQaC
KGPrJCuwLBLNLEF6ZhjZ5lqAVsch0ispu7i6fLKlbKvz0dnb1r+9afytK3Md
JNRY7mnDnZV0necPTObDtXr9VJ5E6NRk2Lc2Jk8N1bxTJNHtHZy2Nz4crf96
8vbn0UfLZX6j2TY9tSHj811XW4tfj8+/Tc7NmNpZPmnqqHk8mh7cu9zzf3cm
n6VZvOhNuGqPOu9O/FoXcl7ss/rQfSXbab3U76Q16rIj5hjEqyFyqyP1avjh
z4MFV33ZZ80JR2WhGw+jViKCajhO6krOIsYxKEVbAKkNKPGE+OZIe1dqQJhG
fKahR6SyjjOcbiUtDDYvAxHbFL5uIEWMBXB8KThDcTEmIKMJWISxPZJMyDoy
MmRA+nZvmLAcThSlACEy5cmaKAoHQ9ZH4gykCGYQsFCGYgi+CMZYwstGKcpP
Jy6A62amoEoAOEqSdlY4Hh9iak0zcaCrmEoYeWNppmLKllKmgUQlM0DPG23o
r0g0kKUIUCwntHEwWRCMNAlEa1mhiOpSOpZUnIqwuQ/FwANMLgDTTIipD1Pl
o1lmWL63slmktnki1yKZZxjLNY7RM40zBuEziTYFCWidYm2WZGqWYmacZGSa
amiRrOuUZuyd7hiQGJyeV9PbttdUvt+Qf9CSv99XcNaZvt8QvtkSetQXf51k
MeinWRao8TBSvyjFoWygdIqvbuxo6bK9dHUw/33v+dfWpMlC555ko5q68LHZ
9tPlueu9k6+9fcNuzn7dDa/q7r9O9x1Z7/tXgcfcfeflJ/7HlW4HraFfE/jT
RZ6bmQ5zj4MPK0N268KWOxNWx4uO39V+e178pfne0UT5D9DPdN772J75sb30
2tUrXdkBqxMuq2gvhueJKnCk1fQwmhwshSpMUQI09SWs/SleKTqGAXS4LgDQ
AJYH1vu+Md0eqmgjq2yLvj3twgCY9iifdAuuE1UEc3sYUBZzu8pPEgpIygII
ohQop1gmDM+WoRjIg4XWlpRVFYKzhGkEwMVaIT5Yz8eeaqkn72KhEOSjYmeD
0WSL2bpTbe5Q+W5ILTuYAh8w8sPreEJ1A4QFkXIkCzGskRTZEmoaQbWIkrMK
waobKXL1DYODUtycw7Izi3Oy79u72GrqsKgMMpaCYvIVbUNNHBONDMNZBpGq
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
tD193j70vHv4Zd/Iq96Rl619vSXl1Q+zqvLiKiLd7jnouPJVODyaalN6SV96
UxovNUQhOlQpKUY3szapbXHk/Vjry0D7YA9jzzi3xAibuFDj5FizomzH7qaw
7cdeW/XBF41h132p3ytDtiuj1ooDZruST1piTlqTL2vjjgsD5/LcXz1yeddw
Z7/AcbE29qihdM8nIEfPWYftQkSyATVrJNcZS+aLkQUyatZEFT20ChvD0MGi
lCQxTEmaNpyiKoFWvP35lWooR+cj6AZyaq4kk2CuU6C5khoebHwggkgNQNlS
1iKCo25DRiiKycoLIWRFENJC8jJiaHkpDEpKHi4KhQqD7APxExYC7sYwXe7g
ueaAvp2ouS+cayekYytk7SPnGICOSFa/E6lkYC5h5gQ3spGx9SHZBTAMPRQV
jWEa9nI2oRo8R0UTK7P06K4094mHbq8bvTcbnTfbnA4qjN8/1FmoMN/MUp8q
11vvcr0cSPpYm7A83Lr/6cP/PfJiNiY9xdTL3DXBxSLBxiHbkx9rb5cWHPgw
0yMuziMgxMc/LCYh61FpU2PHi+Gx1Vfvzt4sflxY/bq99+fx+T/Pz//z7Ozv
l+d/uzz7/eT4y/Gni5Prq8vz72c7P7Znz8bbZ+4FJ/IoGknOIfc90nwpns5y
bi4oz2SDtPb0js2RpWy/SH8DGz++a4hJeKhpappLXUXkTGfGUR6ouxlXI4U/
vSj7477/27qE3YnKn/tyz0sD3tRHbJQHva8O2WxP2m9L2G2J3auPPa2Iu6zI
3w6KT9d1UddyRFF44mAA1zNW49krKBoII7iAkqkcz0pRQ+92XB/LhFDZcKqm
DFlFnMgUJbIhZJ4chiUOId4qqrYdzd5P38KJo6gqj1KUpPMQ6lZEnpeiXZiO
Ch+NIktg8LLSEBEp2O0uJtCaikvfLkkTFgP+z7Y0R2+CpQvS1FVe4IHgOElo
Oopx3SW0HIS0bQGXMGJAAtPMCeoaQLD3xLoFUqw8iRxnlLE/je2MYtvg2QJW
dERWTvhggtXQY7eVWseNBputYu5cjcFOOXczFjdSwl0t5bwPRbUPxF9NPP7c
+HBpc/FvoAlZW7vuHnqeV/EoLDfCIsjOOTqwqKkzJac9Jqo1N2G0Jm9hsPFk
auDz5NDN1NNPczM/1pd/3976Yx9E8PDn06MfZydfr86+X59/+XB6c3R4fnp4
c7rxfev1p43Jy42x09GqZwWBWbYMYyclc4G8vi3eSg+qF2EcWhicnRcYz6dQ
rTQ0XPWt/MwD0oJKmotf9z/Z6arebS3ffNp02fhg9UXDTff945bUw9Kglca4
o8rwtYqQ1SKv5abI89boMzDsN6QcdJV9LCvc9Il4oOZIUXeDMs2hBBVJLTWa
Lpuha45RMRWDawIIdUDbBKfNJ2CY4nJ0UZKGDEkViqcLI8kARl2KZoDBsyC3
y04VhCjqsix9lFsg39yFS2LJawmY+g4adGMZ22BNIzcVqjYSQZGVQIgJw/+9
MUYcEBK9xU4SIgyFSUCg4lp8cU1DCRs/CuhVCDyAYSlkdBfFdpPStBfi2otY
+SHMXKH+McqOvhhHX5ytL17bCWoVRhf44nk2VAND49z4xkTXtgfu0+mGz/L0
XmapjT0x3mg0Pao3OGwwOYzHD8dT+nuDz/NcXlSlzL3sv95Z/c+1uZ/GR7Yn
ni3v7Vw2tHa2dQ3ff9D4tGenNnepLH6pKHa+NnOzs/xotPliZvR69c23nfUf
Jwc/72xdHOx9ODv6/OH8p8+Xv365+PPD4a+XG7+cvvt2OPV9a+TrbNPpyMOV
tpSxR/6VcWYxzsq2hlguXVxBG6VGlVaw0TTzNXV2N7ILcg5ODEtJjU+Nj4sJ
jgzwC/NPysmobe17Or7R27O9NPOf/U8+theetGUfjjy8ropcrYrbbb531ZH6
aTDj57bEr61pn1rLT9MzBqz9w8gmNLY/StVJkqItp6Onqq2KV1OWVuOJU3UB
sqEokSMGJwNEJXGGHoakJU/QkEHRxWSxAFholrQSH0dkyYhAAJg8II8BsHRA
34Zq7cNT0ScTWVhNgZKClqSODd7mrraGhQKMLg2hQqVIwmJIQEJaSFxMRFpK
TF4OBhb4QFcXRlMBtpmckSuRIRBXt4XqeyG17CWNfeR07cX5ThJsc8D+Dtot
lOQaTnEMUzALwqrbi/Fc4W7+hn5u0bkhPWGC6kr/+SLbmQbnzU73owr+cgl3
uYS9VqGzOhf7zz7/y3yLqaXmf77t/i01puvdq5vltzcvh7emRzfHupdWZ6/a
a17P9H+Y7f7Rk7VfH7fcVbw10nAw0XP05unp+7mPBxuf97Yu97YuPp59vzr+
cb77y+n67wfzf61P/j7X/+N1y83LoqP+xKUnQa/KPZ/nWLcmG5TFcTIjNKNc
qPZmBD4OQBHEMQowsh5V946Jb1Ne69KrXdCOnp9/e7+91zLYEZQS5hrhHpQR
eb/+cXFdy/CL5acDu7MTP/VVn7Tk775s+qMydb85/3Kg5Ka74OJx8kZpzlJ0
Yq2CnjbZEklzEOd6o7SssFp6mvo8XVWmHJUGKHOElPjCikbSOC1RaSwgJQ+g
GVJKPCLTgIwGgUACKJB0HJSiDgavDEPiRFAIURlZAKQwVk2CbcfkO7HlKBBl
Domli1XiyJr6qLIdKTAVAKosKqUoJoEVg8pLQqAS0hAxmIwkTEZcUkoITQFA
w4NXAbiWOCMPioEbXtNCSsdW2tQLZeQiY+QkzTIEeE7ibtFUtziaQwxF1wtC
NwPYNpLG5mpJwRVlUW8yHAYLbMZKHeYfGL7J03lVb7VXZ7afq/w2nToei+l7
Gvg9gtHzpvyfL6p+Lkp92V2/uvHu80jbu5GWueGW1d66ncmeH3nRE7Xpaw1J
87cDtGUrr/pOlyY+bbz5fvT+r7Otvx+v/n6y9tfm6+8rL77O9l2/av7wvPJi
6MFZR/p+e+LecNJhU+BCucfUI+fnueY9abrVCazsCFqUvby1iZwBVYRMFqfp
4A1s6C4x/NTBrPGFgZ2Dpc/7q1/P9v+6ufmfq5t/7H/8Or+3XTvQkvU4zyPC
zycsLCqxYGBw7fnTy+HOq57Gi7qitYbiubL8kbt3cnRNbImGdKK1rJInwA2E
qgqQHD7T0EBXXZVGV5HH0UD/KaFpKkfRg8gzhXF0cRn07ZosogZazZiuoIa4
JSBZlKaLBaUBQRHH4CWwKFE0SgTLgMGZkopGeI6jqhIHr8Yl6/JVqCpyaqZo
XTcy3khMUgWQpImKYkSgOEkoUkxM5nadsrg8gKJCCAxxElOSzpZRN0QZOJBV
DaWRSoCOhZSxE5xtIqxrKaxrLcJ3kbS8izYJRDrG0wXBGHU7SXUTSTaXUZz8
LMl+NJTTmMTrS9Iavm/wrtBwPlfzzUPOcil3I191rkB1Lho1kqM1n2r4Zrzs
P9/0/DnZdzXasdTfONNQMhrtX9VTf/ms468nhSclKUutucv9xe+f1Z3MDvyY
Hfz5dd9Pi6N/LY7+/XXPr687fx6vvxmruhopPhu6f9ifuduZsNoQPlsX+LbK
a6bU5VWh62Sx+2S5+3i951ir2+ATu/oii/veVDd1KU2aiKoJwSmUnZqhW57N
qyn26ZuuOz569fvH9X+cb/20v/Xp4uPP559/Pv/+x9mPP7rGZ8LT8wwcnZl8
vpGjnYPXXT7/jo1prI1FgIqKNp6FpQgQcDMAZQ9QPQGaDWBgqa6hqsxUQmtr
EVEUWQRVks6BKulKMQUoiq48miKGpUKJLCSCAafrKtC08QiCCIgpQQMUVXkZ
LACTBbDywiQCVBwFYLTRWB4CzYbybFVYHCJXV4VMk8eqi+p7KWh5IGXZgKwK
VJIElVYQg5BEgH+PB0MUAE1ziqq1HMMUqsgXp3CFFNiAIhdgGoiCAIHtWMVM
SNcZpuckbeIl4xCAsfaW8YjE2sRABOFwDXeylsCwJHYwUb8tQ6fvvsH4I4u3
j4znG82POywvG8z22u3PmmzOc9QXSsyOnyX8TwBrMMpsoKd8b7L3cKhjsbpw
ZKRps6NwK8v37VDRLztj/9tfetSad9lf9PN4ybfnjz6MlJ0+rTl/3no11nk9
2XXzqvOnqYZvAwVnrQnrYLpsiV9til9oubfYl7P0/MG7scI3M082ZloPxpq2
p/oOpof2hptmuh73V6U8NkBq2xPM0/gp4YrRmVpFVRZDFTavqlzfDGVu7ox+
/7j56+XBl5OTTydnX89Of1yc/XFy8sfO3rfRl/MRqWkMvgZcGQZjAKqmCIYJ
Dq0FwevDqcZwBSNhVXMpTQuolpG8BhtDJcOpZISKEo5CksYTRfHKUniWBJMv
zTKSIqkDaBqAV5Ig0GSoDHm6CoKgKIImAWQVCQWGjCxKSgIqJo0QJtBl8QwZ
BEWUqiVH0YDhlMX1LRhsAwVlLRRRBaZtQtVzVCHxZKHqt8t+pRRAWYYAoKuR
BZhmJLNAXQJfCGy7SqYSqqZSGlbSRu4o6wCShR/OLACt7wHT9ZQy9IFZBcs7
hWNcI3B30xl6oHp4SWm7Kdl6eFUlv0zS70pS78zkPE3U6I9nDGYrz+Qz3qaQ
RzOVJ7PVZ2OoY6VWW83Bl82xJy9rfmspWksMri/K7YsNLkoNrxht3AuxaO3K
vxypOq3Letv+aLu/9HSk5MNM/S9vWn8ab7x+3vxhovPTcN1ZS8H7+vTFruyN
kYeH4yWnL6tPXzdfzvVeLgycbjy/OJy+OXz3bXfu+9b8183Fm+2VD0fvr47X
jp43DjqzLeJtw0fyR3uTRh+5tqQZPHloPgoiWBP4qjN97l3/2fHKb+d7f14d
/+Pm4n921n462v5jdeH62fPl+dWTus5+HJNK52JMPNWoPCjoLYl8UZwuQDcT
Z5pKK3LE8Uoi2rpkPR4ooGhFCoJMkcEQxSkaSNC04DXFqVwJJR5EQUMKTQMz
IJTEQFBZCDJTiqAkTFIWIypJoojScrcXk0FxirJYusz/GROlaMIxdHGOMcXM
QZttQMHQQVIjObZKNGMUXFsUpiYswxCVJNxeAIRXl9M0Y7CMFRmmMuqWcjpO
GD0HhI6drIUPzi6YZOQhYxogL/CH63iIG3hLC/xlTH1h1ndRYHFdhbScZNTt
VTwDYvICBoOVG0IVG5PUBuLVh9K0Jh7rb9Ya7hdqvStkz5UabD7QX0o3mPBh
Vm31/z9jT657qrcPVv+58Ob66/U/N+Z2V14eZAX15ge/BG1Mf8XWcN3es8az
ZzUfnld9Gq68Gqw47ak47C7b7Srb6ineHK87ne24Xh38+n7088bk5735b0cb
3053f2yuXn08/xOkz+nxL9++//eXz3+9X9t+M/W64XF5iIcHl6pcn1e5OLS2
PHQ01rg18mi7wu9lseNYTcCb9qS15nuLw+UH6y9+P138368H/zpb+4+r7X+e
b//HyrtPi++uJ8YPyio6lNQVLdy0TT0VdZ3gqjYAigPguSArYYpsGZo6is7C
3Y7rqxApiigURkpBCYFlyRI4cgRtaSJHiqoHR6tJwmkSJDUUVhlOVJUDQ72i
FoyoLIaliWApkgiCOAIHQeKhSLIMgixFYslRNMFIKIpVkjB3ZPMtVMAHtJKo
igCnZILC6EnCNUWQGhKSJACnIcu1UNXgM5Q0SP++fQ/0QmKK6mAJcwxh+lZy
LL6ImgnY/uR1nGB8F7i+s5zAFeUaqmLrT71l6B1VAw9BZNzDJOfuAFp9JKMz
TftZgeBNHu9NEXsZTIKP+WuVxtv32SthpKFkg+ezT/6+3Pvno6TRobbd5Xef
R4dnx8dejA7WTY8OLTw9LUt4NdX6vSFvu7P0sLfivKvspKlg90n2an3eWlPe
atvD1WdPDhcGP2+8+Gl94vPmzM3BypeTnW/HhzfHx9dHZzeffvztw7e/Lm5+
Pb38+m7hfXlZVUJUVFpsdGp4iBWXzaXSgl38Zp7O7ix/WJ27WX/1Y+bJ6Yv8
3dqwmerQtwPZxwN5p4NFh0vdP+9N/vnT3r8+b//3/vwvB0u/LUx+ejF4Ojd9
UVxc6h9kW1gdEJnNw7EBgi7ANBFm6EMVNVEkGkqJRSKSkRAYgEBJU+kkFodB
5d7eVYfVliDzZJSM0Qp6cHnV26s9EEwpBEOSpAVX4qIITGkMVRxDlpBF3679
hKOhckQoaEtgBGGaNgZFl7i9ZZWD0zdXBSkJpwIkDkzRSJ5gIC3PFYaoAmi2
NMtSUduCqcRWUNOhyyLEZOAiKKyEAgmCx4kR8SJ4PCArDzA1oBw+VtsIpWuK
Y+nKaHBlHNzU3Hy1+DYoCw91I1er1LT6JLueUEZHovpwquazOM3hQpOlesuT
Mp3NDMbLDOZMnuZKusZ8ktF0X97Xt52/5Mf2BnpndbU/n59/d3D0dm+3Y2Wu
baLr+cvm7We1J635RzXp5xWpJ5WZ6y2FO+3Fe80P1juKNsYazt4N3ay8+Lw7
//P24ted1Y/7OzfnZ98/ff7j648/vnz/8+zjb7Pz+08a+sNC71kKHL3tfcuz
H4019+eFJvgY2jjpmgfaedkZOm6vnu3vft15//Xj+l9bI59eNx4PFGyAzXSk
4PRt3fexsrM3LRcbz7+eLfx+tvTb3vyPvblflya+Pm1bHht8VVyYnXTPg2sE
BjpAWf/WtxOUpFEkGRUWg0wmKZAIRgaGWhocuAxOlaVJZxNQDFGksgReHYbW
uJ0VxOvcviOFqwhJkQG4kjiBJYdTkiUowsFC4yFwhLQ8Cookyt7uuyOJM3SJ
txd0St5uNVTnU0BdRSqJETSlaYbyZEMZmCYgogzQbfBazkoUPhgzkUw9iixc
EomEEggIZUWiOlNRTYlMI6MpCvJoUKIxojSmPJdHpimDXwB0uCgbGwZNTYhj
rKAl4CfG1sRZdIQyutLZz9O1xzINph4YLxTrvS/UXCnmrpYb7NzX3oihv76j
PFIbewFmq+mBD++mj8aev2xrq27vyBl7ntrbHjXWWbU+MTdU8+xZ3VZd1lFf
2W9dpRe9FScDVSdDNSfP609fdp7PjX5Ynv64PH95sPftw6e/3Xz9zy9f//np
4z92Nr68njiorXiamfwkMaqsMLP1acvs3vTV267lopCSeOu4MEHwXeOAe74p
Ia5hHg7+377+dnb2+Wj7+uvpf5wv/77Q/+FlzdFAwdZQ/tabuo/znTeTjQcr
zz+er/7HwdIvW7NfFyeuRlrmB5snX/ROuTu4S0mKkxUxGlwmlUEmkRVwWBIF
z3Cw9CxIq2yqHK59NJKd2HQvrjIpIcfZxU2drYOngV0MT+WQ8Gy4KAmQYQJi
BEAUTPQKUkiyHI6MAClMVcKQFNAggggcTI4IwSnDaRwcRhkqhbs9WU9iyYNd
lah2ez0NRV8eNDPSygBWX0bdgaZkikOwpIja8jRdPJmFUOUo0FSxoJIzmCQK
BSsHh8DhkkKigJAYQFaGc/kKLG1ZDS0pA2OEjT1FVVtMV6CoZci7F1+X6jAQ
otQOSmgm90UCZyRDd6qAvZjHmk9Vmo7CPwuUHfGCD4Zqvcz1Wkn1H6u9P1NX
OVJWXDk62jf/tmtprnJmLGNx8lFXZWTNw7vDTTV9lbNjTTdzg3+MPLnoKd0a
fXI82XE21XsyO3G2sXpzevXnm6W9ruGZrv7XI8MbE4OHE91nE+2ns08/j3cd
vx36tDPz99XRH0Nl6y2pM20pU0V+remOJQW+FVl+he2lPYWZxbnZBVefvtx8
/23v4OZw+8fV1n/sT/083/Zhoupo8OHW67ZPi0O/vB76NNl/ujT9eWP+y/To
dn/jm6cNiw0F4zHeVW7m2ZYGibGhT9oa3mTfe2Kq6xHqkdZUPN5XvVqRPl0Y
N1WcOPckd70yc7a3Zq/6/mygRzHfwE9JQ4+gRlTUQ8soA5B/rxOB4W/vOpSV
l5JHS1JpaCoNi8RA5bHSCDKEoHI7TYFQgiBoUpL/XmOIpsPoXDxREyGnIoHR
hsqrSWmYKrH4NCxTBvwOTYegaqhIYEuqCrAENWkIFsApwghUhAxSHI6WhmLE
ZQliLB5RRUeOogboGkMMLaT0jcW19aX55gwdE8OctJZ89+d+hJpQcnMYpSWN
P56p9wpE8KHWSjbrXTx5Ipk6n8/bz7HZzHRbyAqaSr7b1lb/cnl+Z33t/ZuX
AyuzTc+640pyDcd6fV4MueWm6NXcfzDWsrw4/H2y5bq/fLu3fGO8/XDl5eeN
lW+r768nZtfTi6oDYzKLynufDuyNtB4PPT4dr7152/fz6ou/j7dcN+evdRXu
DhQd1ycuFPmNZbt2lwSMPAhoK4trf5zesPpms7W55fX8u+Mv3y9+/HV59dfZ
9q8XK3+dzvy53Pttsvai8+HOdNfPc2N/ezn89Wnffk/bQnfr9Gj38nTX+WD5
SWfRh7bCb0/yr2vuX9Q8eF+W/bI8e6g4pW+wautx4ltXzuN77tMd+T+Kww9i
7V6VRR2n+S3F+04+KdsoLBwysrbBqyDhDGEkUwSuKCmnAJXFQIXFbl9votDi
ZDKCQIKjSTAZvChGCUrRQiEZUBBECF4EzAtwBQkVHhWtAhNCAyB8ND2Cuq4S
hYYH/Q9RCQk6GV0LdRhCAoYUVWTBVTlYMLaACBLpGCl5IaqaDEFZREMfo6GP
U9bGahsqcE3Rxg44I1ekjgVJVZOTHtFUfGfSBpYVwWpK0OiMY3XlcF5mMd7F
E+YyNA8ztA9CcWMhlP40p9mqjM3GR7MHG59Pjg9X1xa2Nw7bG7trSh91NGa9
m8l4NuhTUWRQU2wz2BZelhk13ryx8uwfjWXzlY8nC4r7GjqmIiPSvfwDneO8
rII8q2qnRtvPx9svXzSdjjddTDZdjVYdDj3aH3p01JqyUXLndWXAUm3w+n3H
6XSrpzWhy49DZ5+Vn3fcX5zuOJvo3NlcuFo9eL91tfv5p/++OPtrZ/PoYvfD
xpurxWfXU93X/dUHY11nM6OH7Q0dTdWtL7q3wX/0suN6pOZktPpjQ8ZufcZx
dcpOrEdvUdKLjpp31flTL1r+0kQmp3r2vG35PJx/UOg10ZNxmWo7GSsYKw/a
qYreaMreywx57uNQoceJQOJ0xZAwuJKorDIgQQLEMAAUDxNHAEhFCEEZgaXK
YKlwMgNNpMjBkWJS0FuIpWQAKgMOBkMSA4KjiyuqycnhhOBYETxNBoRS15zN
NWFD4QBEFhCTApAYYVUNFE1ZBk8VVueiwE9lDZgqVxZLA4hMQNNAStdCzsaL
auNHNLAms7Q4aeH1TyIX3dAlUWod4fTWJM2hePrIfa2VB9p74eQ5b9TzVLV3
XUHfAnUHy+7N/+/f/vW///Nfv//6TzeXKG/XjP6O+YU3swdbk631IZPPknpb
AhenKqruZ3iaeVXlDL8evhzsW0y4V6xj7sLimaqoaRtYCKwi7Zxi7rS0Lzxt
vQDzRWfhxmglmAq/D5ee9OTsDd2/HHv4rS/9Q2f8VU3gbpbFdIbl1AO3d5kO
Y4V3XhVHTLbkLPWWvx/r2picXljZ2zi4vDi9+HK092Nv/df1d9/fjF0uz3x9
2r3W2zrxpKyzu/HF++nruadfxprBprzbX3lck77Y8+hjXdplfvBcSeqzvPja
/LTyV8OrVrqh1ekzGyP/V5rjuB22Lslg7qHzWnXAQZH7+xyHdzmuL/P9poIt
W8Kc2xOCB+/njuEpWtJoKEwBUNCEEFlIIgsrQ5GWp4OkgyEUIQhFGFZJDs+Q
x9BkpVC3L83Ekbdbmkla8ko8vAJHHqciI40AMAQoQ4PMMVDjGGup81QNjJTk
5G+3Z4uLA1BZgEgRU9WC0lQkuPqKatp4DBVAkgENI1EtgTiJBTB1JAROCDNH
Gpen/yi1uzFmyZ9cE0JrDlPsTNYczWa/fsBeuV1VzVqMVZv1x3U4ox61ZK39
f3/86//9+796WxdC/B7npA5NT55vvb/eXN/KTI2dHu/vb6/tqCt7Ulw+0DSR
GFzU1/qqp3usorHBJdjbwMta05Knrs9SM2CahBi5Jtxpa1uY6Pz8tOoCVMvW
jO3q2JW6uPWyoMWaiK2upKu22A8NIRflHnvpJu8S9SfKvHaaIk8rQjbq4jaf
JKxNPPn8tv/764njl6+Wnk08Xd/eOj37x+LCr6srv6+sfns+ttLVNTI41NvV
0tdeMTfZ9mW6/dtY/aeOoovmB8dlKa/rchcf35trL15tLO1NDkt/1rmQElTT
W73+puMXD60n2mKZDcHX/bF/dIX9yDNZyjJ998hlNdF4KNKgI4jXHGbaleQ5
WRDzJj60ia1lQ6KRqeo4dQM6XhWuqEsgcjB4DRRWDYFSgcPpEFmaNPgpThIC
C8AC/z47BtewZSqZk+WYUBheikwnqXFVtPU1VHWU6JpkZ3cLjp6KFFQMEAak
5YTEZW7XHWgZkJTYWA0DqrohQZWPUDGUIWjeXgzNNIDpWclaOzM0tDQfJreV
B4wH0Rv8CY1RyiOxzGe5unPpzDfR5PFYjTfeCn1B1L6RlIt//fyv95M/7LkV
2grZ/a3n1eWTM9MbG2tnGfeqNhdv3o5v1BQ1t9QMlBW0Pu9739M2U9fclvIg
ITjbzzhQzzLG1MBfl22pzDQianoy3JP8OjoWJju+DpacDt4/H8j/0J/zoTvj
vDv9YiDzpif5U2P4xZO7Z6VuO2mC2WSDV6VuWxX+e/fdFqrCNkpvR+gPq5KX
OsreP+/b6Orur26oHRx/8279cunwy9PXa3WdvU0dHXX1jSANn7ecPKv9PF7/
ZaTiU2P+UUvh6eP0mcKk4ZSAhkiPh+FeGUNN7x4kDY01f072G/bWr40w6+++
dzVd/EcYq91F5kmIwkgk82mkWn8KfyTRYChYq+OexVSi+XS81UR5wlpWeD8F
x8MTyPIkKIomhVKGoZlwHAtB0sSQtXHgJ05dHguqJRMqy5CWpIqAhddBq9uo
0EzJcKYMSYXAUGeoaDOU1CkKKjiiMloKA5g4a+lYUv7P9T14lgSdh1DgSKPU
AQ1rGV1XvJIJBKMtRDOG6Lrj9N3ROlayPBMCFo/xsorNc+32IpS5o2oCib3p
3LcZWm/vMabyuEul9ichKmP+pN6+6K8lgfPGpMySqP0n2Udvxz49KmhbmD1J
iKisK1192n6VFdfs5xz/9uVa3ePu86N/PHu+VNlZEZTr7nff2inbyCKVpxPA
ZJjJq1lhFB0xdrFOVdVjo42XvQ+OejJP2lKOWhMO8j1f1kSutScdNkbvNUYc
t8d9rAncTzOfzrWbawg9q767Wxmw1ZZ8Oph3vdD8X1M1vzTn7QzUHQ71Lqbn
P0gqTCxoKijvbShtb63p7OzsH29teFX9YLL78Wp/2U5dxmpj1mbT/Y2Wos2e
8r3qrBlHflSQY3ZF9rOc6Lbu2nfJQf9/V28d3Ni5rvmuBrMMkixmZmZmRjOz
ZVuyZZAtW5aZsZnJzZCmdDpJp0Md2EmHO7g72cnmu/eZfc65NXOrZmrOn+d+
7szsmpqqp1YtrXa5qvXz877Pu6T1fQcWkre+ePAf2fq7EfZqiLDdwb4Wo9/r
5zzsZlytxhxuop+oJR0OlG+1si8PKF+Z9X6YtD3Y6Pmwp/ogl2nZU5hTjM/N
ge9+sxdFLti9B85F0EQYshAJIg1NhgGTI4ZXSpaiGRoiTYXHi5EoTilNQmbJ
GAwphcDFIChF4DcgBRBZA2kqi3Q1RVwHJPIUKqNojiNXU1vI90EkA0QxQhxH
gboSq61DUvSQ2o/SOlhyrbrW238h/aSFuRXjXIlz7jXhLibZD2Zl76Z4j2Kc
B92cV7voDwdF7+n2HbiU+q+nR79569y/3jnxh0dX/3566/3zh98/sfb45NqT
TOx6qn3n7Qc/P7r3+ePXP33r/feP392OjFldKYl3WmkZkyo7mTh9DlGfSw0h
LJ22iamTt45/f2f7pxuzz4/3fbLe/O6F9LMbc+DljxfGvruc/vFK+vcHWj8d
tt5bqHhyJfWnYz1fb7c9XWp4d6Xp3XNj3x4b/OLqyh9OL3710uXv5lePt45F
wwldcr33zP2L567f2N688uadPz88//vjM6+fX3xv9wOvyWfHpj4B+G4f/XJl
5HhvQ21T2FUfrB/pymrEtgPzO2/e+mO7+9BCO5hffho0PTxU9zylfNNfdDAE
P1CFOxLB7T7W0c6+nJTc7RffTGtfSRkeToffOjvzdUNwoRhO2l+Sm1cMlcL3
lSL3gkBSitmLfrHFAGCKZ5ehaEVg9mdK8bsbRjDKcHQ4RYAB9iQq0DQVDi+C
F5H27UVAAmchcJYiVCIPFjubyY4mitxfJvEU6yPlbMPuRsYMTa7UgaYpCvCC
F/t1UiEwQnJl0qCt4+TIG9WkxVrCkSbixX7eyyO8VxeUT7LSt3tYrzYTH9SU
3q8tud/JeHy287/MVb79ycX/PD/5p9PZn7MdD8+tfvKf/+0/rx/7eKjx4lb6
yevX/+W1G7+7e+PDz559e+L+4UjaHpwxBOb15gm5qpdLdRfTXcXYQIGh25jK
HHzp1Lc3tr65OvsMQHzz4L9dn3t+MfPtubGvLmd/vDn7xwujPx6KfbbZ/vRA
5xfXJv96OPbsUPdXxxPPQCE9m/p+seWd9cRHpxe/eOnyN8Pjy02D9UPrHSfu
ba2eWOzoiIedbcMtm6dmXz+SeeVY9p0jmS8nWl9eHrixPHT46OxGosm7OG0/
f7rpzLGR6+dPXTxxb3ronEc1cmzm05c2/zEceNhnvqbMGZJBQ56ytRrqUQd8
OUI6GcSerMAc7WTtgLFpUvfSjPX1+eDbw+F7S6nHPGEASWQgMGVwZC6sDBDc
W4zehyQWoGjFaHoJDLu/GJfz4r43HE9FYEilZBoaOJSghOHUuXhNEU5eVMbK
zcFCYls5VQ4Dgz+SkQ+mSDx/n9CAoIp3F6zG01H7C3e3MGCLcQQ6AlROAhW/
HwmByJQHR1jUNcsdV9t4G2HUej3u3Ljy8bLxoyXNkzT3tX7+W23EN5oQb8/I
fhnkvZ+UPD7S9GO/4aWY7dx4zf251qf3D/3Ppy/9Z4Nl/dWL32xnr21m73z5
1v949fpfHz/65fjd88FRZ3TR4chqjGmZIsaleUpwxv2EMEzVqo4l56+f/Or2
ke8uzX5+KvXh1anvr8z+9sTIZ6fHnt1d+9u9lb8f6v18ufm9U4PPAbg78/++
k95d4OVA95eT0cdH418vtby/lfz44ubXl84+GRyb789OLBxb2rq4rDCLOGxx
f8u4VejqCY5e3Xh6dOLp1tizRM3Jobb2hdHoxnRkeyGwNmerDGAyQ5ULE5mx
2PZo7PTK5OX5oavV2u0G9dkQdz1IX61jH1HvH3WWL7gxG070YUfZoQrcyery
7QT36JT28rz9lQxQ1Vtb6U/6Esc4UotEpWDwSFgqHEMpK6eUlOILSgh5SCoM
BvBRSoDgmAI4pohARtIZBAoXyXLA0XqoVA6Vy/btPhbKzsNzc0ArRFByEOR8
FLWMIaaSOWgMtZgnw2GoOVxJGZNfAoPvfkWqBJ6Lp5YT+Cg0s4gmQHAY9ETd
Srf1FPhjS0ofLpg/XNJ9OCV9Mi//TVrwKMV5Y1r2WZL+bkrwSYLx7gD33Zry
K63U66OGx7Pe9x8u/Efc8EaV4NxrJ/7e5TvcF925euD5g8s/P3nnu4M3N8IT
huCM0Tkps2WY1jE6zrEPpYWwur2KKDPcE904cf3lG/96cfkvO6NfXhr6/FjP
bw53P328/V/vzv3Lyfg3p/t/WG366Gjfs9OD3+2MPb+7+LfV5veBAU/2/7De
9slm11fbvd9cWPhpfuhGomdmYXt2+eS0tcqUi80vxpfZPJ5wsCE7dOT00pPj
k+8sx3eW+jMDrZT1OfSVc5yl2YI7N6w7pyKdTZb1+Znrl3cuXbgB/hKun/1u
tPNWreWIiTytR0278Rvagik7fLmKejKKO1yJPtpMONOIOd2MPx3nXRs13csE
HkzWv5xqvTHSe81gbRd5VYIwk+OnU0w4lLS0hFUAI+8vIeYUovdiyDAw6SMx
+Wh8EZZYjMLtfs0eKStCG0oLxXshKpTHgRDyArK4sBC3u7gTmCvZcjKeVV6A
2sOQ4Hb3HOSVCVS7z+bvKYD25EMwRC6ZjSPxsaA4q0wsGokY0vTMN78aJR/q
E9yd0r+zbn26bvly3fTFjOLJtOy9Rf2zIfaTFOfDfurbWeXncdajBP9h1vLe
sO6V+1P/YyH8VYPw8nr3k5B4dqz+5SPZL28c/+bZ13+bP5fxT6hBCbVNSk3j
LMsol+IrIJj3U2w5Ah8q0O2MjY5fufD9+eWfzqWeXRj88mjPxxfGfgD189bs
X0Fi2Wj7eHedrvhXO+M/3pr/80sLfzk3+sNc3ePj/d8CD841PDkx8v3J7LMz
6+/NZk+0JTqVXkm5qAwnw1CVBLacPTCSvnDq1ZWJ22up2+tjp2odluOrrpVJ
1Jmj5NfvG9PDha/fb//i42NdLZ5sevLSuYfHth5cOvbZ+a1vJ9peTUZeSoUf
RlhHLGWLVvhSAHvQh9ioQB3ppF3upl0b4t/p593sFV/u11/P1Lw81/v64ugj
jz/JtUrpHiLdRWI6KWBeYBjJJBkKyy3BsEvhlPxSQh6oqEQWAo7PA80Rzcqn
mREI5d49tN0t7dCKPLy6mKODk6WFIIKiOXk4HgzMjGhmIUOG2Qvf3bSCLivH
smHl1HwsswxBKkZREYWYHHAukhPJeEKDIzXT8MBUlO3m3cxoXt90PT3o/XrD
9sWc5t0F3W+WDF+kOO8NUB/3kx/PyD/voT3sYz1YdDzt5l891/7HmOhht/Tl
pdp3u43np5qenJz+8f65X56890P/dodrQuxdVFuzUv0Y1zom5FYiyfYcQbhQ
FCrxxlSRjoqtrXuXtr8/O/4NyKIHYx9cm/kJTBZXsr9cyvxure3D06PfH01+
dW3u9w+2/nF55sez6e9W2t8FV86kfzw6+OzQ0Eebw2+eXHu/vjot0GtAPi8V
5TEdGI4TzTESPNX+haXDWyt3ZlMn+1p7FyZaa7z7H1z1jCdyb19Uv37fnR5E
Htiw//UPbyxOTzdWDHY3rW9MPRrrupluvesTrmrKM0H6QYDPjlzzYw74EJsR
5KFmwrl2/E43+eqI4OUJ/avAhknH9eHIjdXBdzqb14V2FdNHZnooXC8DiOdk
MMwUqgaP4MGKaTmFpD1wZj5OWFbOKUKw8vBSWBl/d/V7ngMp8eHFLhxNW8K2
wWjGAn0lVRuhkZS5LCOCayrPI0K5eAgvLqLKSvH8YpYSw1YS8NxSPAeJJBfT
BXgGGyni8OJVi0n/jgez3M69uuB4suX7ZHN3u8aPFozvLpk+mDd+Mi58L816
a4z29ijnvT7qa13Ue6PKNzq5l8+0/RzjvpI2frAU/jDjfxSz3D009u1bt/9x
7fbjhrmgc4rvWVZapiW6tMiWVkgbCUTrXm4wV1oBM7ZTKwdc/ePZ88fev7j8
/ZmxHzZ7nlyZff7w4D/Ojf92Z/InQOrY8DOgawu/vHLwH1fmfzzY//H1xd+f
HP326PDX15b++NKBn64eeHZ66wMeL4DhsIk6AtFeSvHki6rhJEMOz8peP3p8
Y+taemS9ublybqpmoJM5ESefP+hIx1FvPYx8+mH7oW3Toa2mV+9eG+yea69a
z8bvJerOTLS9NNn8qNd520PasiFWHeXrPvQBD3wjUHawpvxkPeJUL+V6P/PW
oPD2iPruuOtBtvLhSvfb1Z5phpJPs+HZbhrPx2Q76VQzkWrA04wEsg5L1KCx
ijKUtLiMn5MLpj0WRNHC9VU8c41A5Wew9EiavISpggf6+TxfviBQqKnDsp27
D3sKPWV4OUTTFgqsGIIwH0bafZwfVFoYASIL4CwxicpEU6glUg7fyK4Zq7ja
b3qphbtzvOHro5WfHwx/tu3/9FDoU3BcsHw8p326oflsQfSbIfo7k9JPBkRv
dnJujupffmnwX+btn2SNv8k63sr6Hw8F3hiuv3/26AdzB7cqp2yuOa5rRWyd
FxozYuekStNBxxohnBliB3JkDchISh/pC8yvHbl26uvzC99tJ57cWfvjo6P/
dn7ih7MT359Of//i+C1gd2fjz7c3/3Qw+dHN1T9cmvt5LfabU+Nf3zzww51T
PxzbeoIjG0lyAdlKwjhyWVX5zKq9dP8+kY+6eHRt49DF0dTyeCY5mqq6dXEs
M6C9ebbryavptVndH3/afvZF9vjRhpF4z8Glq03RqZOrH60Mvy2AJ/zCbRN2
0U3cdpZv2uFr9tJVR/EaIFiPOdOKvQDUQ702JLqT0txL215OB+6tdL7TElwq
waOL2blYGZxuILCsFLqJSDbigWgWAtWMJxqRBAOiXJUPE0EEY7GpQepo0sld
PAy/ZC9qd421IjLUfyzkSnIwRgiuhqhOiO3eJw0jdBUkkRMttRNx/EIsq4Au
QeEYhSjyPgIDhsGXlsELykogJo4iwrgPJ9/rt90ctb12uu2b43Vfnqj/+lTd
t+eavz1R8/WS7eM16+eHzc82NJ8Ps94dEn2Y0r6fMr91sPHpoYZPpy1Ppi0f
HKj+LOt/4/jY79oipycmD7ePd4SzhuCyyLnEdSzybFNi96TS0sfGmXZ3yaF7
i6QteNugyJmQ1Q/XHj5x5+TGB8cmPnx09F9vLv1yaeqnU6mvT6W+vbXylwvZ
59eXfgYQb678cmTo6XLnmzeW/nRk6CsQRFcHHu1sf7o6fx9PV3FtYoYPj/JA
jLr95Cik60aBVtsy2HTx+uvp1IH5mdXDW2tnj69eOjPX3aq/eGp0Y6br5Hb8
b3/b+eXnK5uL843R/jMH78YbNrv816uVl1uMN3XIRR1swVyybitdd5RteBEH
o6hjtZgzTdhzfaxbXdTLHbTzfZIrE+5XFuvfOjz0NFa5SaQxYcS9+1AQCDAY
MZyixlH0OGBDnA5BMqGRmqJSRQ7bj7d0y+y9ClOzFCUqzsVCe9EQSKEEBZym
Q7Vu+ds3/ZpOEtWznxctllWhxaFymgGGYO8rI+fsflhctpfCwuCJpbDSF7dP
86DSkoKCPIiKItTbR86MP40ZLq5Ufbhe+cHR+k/Ptf9wsuGbU01fHan+Yt7+
wZb3yy3TJwvyDyZkn/Tx3x0xfzAX+fhk4stx9+3Nio/WQh+f6fpuMvjKsclv
BrrOji0vN0xWhqb0kVWFa4kOZJ/muDIiz7AQzIMIdS4rQBQ203X9bMcYy5OU
d2cGjhy8t7Py2e2l358d/fLazM+/riF5dfYPV2d/ubX8x0vTP+xkvzs29Nls
0+tnJ357buLH0+M/HJ749Oap52tr99gqo8DPZVeiSBV5+CjEa90vbirk+4p7
Mq3ndl5enb+xOH62vyN78fzVM6ePb6wuBJ22bz79+NDqzNbawP/7jy/+8ffv
1hYWjPLQZuY1C3s5KLgUZF+w447J98yZCjecZdtuxMEw9ngl/lQ15mQd+iTo
hnHujTHNgzHz/SHrjRH/ze2hD8a7zlpNTiYXU4CA9pdBMPw+JKsYIygFlsQp
4RQzimRGMpwofZvQN6hX1NMxujyqAVFIh2AciOckmFslgX5j23ZV/+mWlo2g
e1gmrEYLwmhJiFDK3UOSoLBMNLQfgvZAhYX5JYV5iNLCoty9uTlQKSwPlg9h
i5F90fmZ5jsjnjtx3c1J1yuH6j7aiT0/XPPZgYoPtyMfLTjePxz6dtv6yRDt
4ZLt+bT9hzHXJwnrg7X2d9ebHt8a++tS6L1DzR8f7P3o8ORnq0sPJg7O+oeM
gGDlmsa1QHEvku1ZmnuCGxqXC8LYPUyI6qZQIgR1P8s+SQ5nRZZm06ET168f
+OJw/MNTw19cnfrlSPyzu8t/P5r4/Obcn67N/3x17neA4Jn01yDPbMY+Ojb4
bGf6l8vrv79y7Pns7CW53cbykrGefdTaQnZLIbMBEtTvruHTMly9uHTq3rXv
V9N3fca+s2fuLC4fvrTzKOBuTA32v/nag9pQ+42LN/77//zsX//t84bQiIKc
jCiPaFBLvL0Lkj3rpqKDHsRxD/KIs+xgAHUEEKwjnm2h7HSxrvTyrg0pb4MS
Ohl6OVN9fzn+uCO8EvSEVWoumY5E4gtL8LmFuP0FhD0F1H0F9L3FvH1sDzE8
ZI2MWJhuZKEIQqn3MGzFAg9aU8/QN7H5URQvUt6xXd21XTlwsrZp0aZsQHM9
RUxLfjEdwnBzrUF1ETIX2gsVFeeXlBYWF+fAivKKC+GwHBiuJJ+Fzenp0HW0
2CPBttrQ6mDzg6MjP+/EfzlR9/Rw1YMTDW8fbvxu1v3FkvfTGfP7s9aPl5zf
rHqez1m/Olr7HWB9L/t8sfbOmfFvTs5+t7X48ebhh1PHF4Kjxsiy3LfMd84J
nDNC9zzPM8OxjlB03aQiKVQk2Mt0YQ3tQluC7UxxPFlJ52LT6SMPL0x/dXXy
D7en/n498/2rW387m/ndycxPIOecnvzk5uzPNzI/38r+4d7KHy8vfH5p/enN
01/fvvZNa88kRSem+omcpjJ25152KyRohDEcCKhkf29iZnH28tsP/9BUMT47
dqazZuGV61/090zPZtf1Wtet64+PHnw55Bu8uvPk//v3//z9T/+ytXisOZyK
RQ55BIdE+dPCvSlj8ZwDse5CbIF5sJFyqoN5Js67CjpgUvBy1vxRXP36SODx
RNsbU0Mv81heGo0iVVDZAgyKlI8k7S/C7W4cuR+3u7KotopflXLrGwWlMiiX
u/t4r7yGYmnncbxwgmkP013I8u3uztx5uLJtKwhqac+hUPOSVVGDLZdBaBGE
4+dbg0qulJZftH/ffmgfmCBJWKlEIBRxyRQ8g4LmshDNrepgtcDolQYqOnpa
by7Gv91o//xU16c3hj893fZks+aLQ/U/rQU+Hte+PmV+b9H52bLv8+3Kry4P
PN9qeOva+LPV1teOjH5xZu37G9e+3zx9tW2mIZxRh5ZE3iWea14ICIJIAwg6
xuimPhogmMuG6A60ppnrTPJsQ0zHKK96LLC1dfXG9m8vZf9yJfXnc4OfXct+
AyLNmcz31zd/ubj4w8mRZ5cnf763/l+uLv7hzPL3V0/9+Norv59dOa30OOg2
uqAaz64tZDVCrJo97FAJQpiXhyhsaBy4cuHdY1uvHV17ePPsp3Zl7OKhd6ya
2ocvfVQV6r124b3W2pUjG++ImbX3rnz5//z8Hz99/u8twUnSPn+tZkecN62B
zZtLls2wFdAHKwnHmmmn2mknY8yzndRzaeXDtOHRuPONieqH8/FXhrqOkPGy
srKSUvh+PLmYLSLwlUQwx6HZBfswkL/LGOmzyiOMfBaUz4WkUZqpRcj3YxEq
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
wJHJIun08v8fkxBtLQ==
       "], {{0, 113}, {150, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "RGB", ImageResolution -> {144, 144}, 
       Interleaving -> True, MetaInformation -> 
       Association[
        "Exif" -> Association[
          "ImageDescription" -> "OLYMPUS DIGITAL CAMERA", "Make" -> 
           "OLYMPUS OPTICAL CO.,LTD", "Model" -> "C720UZ", "Orientation" -> 
           Association["CameraTopOrientation" -> Top, "Mirrored" -> False], 
           "XResolution" -> 144, "YResolution" -> 144, "ResolutionUnit" -> 
           "inch", "Software" -> "34-1034", "DateTime" -> 
           DateObject[{2005, 7, 9, 17, 7, 44.}, "Instant", "Gregorian", None],
            "YCbCrPositioning" -> "Co-sited", "FNumber" -> "f/2.8", 
           "ExposureProgram" -> "Auto", "ISOSpeedRatings" -> 100, 
           "ExifVersion" -> "2.10", "DateTimeOriginal" -> 
           DateObject[{2005, 7, 9, 17, 7, 44.}, "Instant", "Gregorian", None],
            "DateTimeDigitized" -> 
           DateObject[{2005, 7, 9, 17, 7, 44.}, "Instant", "Gregorian", None],
            "ComponentsConfiguration" -> "YCbCr", "MaxApertureValue" -> 2.8, 
           "MeteringMode" -> "Multi-segment", "FlashInfo" -> 
           Association[
            "FlashUsed" -> False, "FlashFiringStatus" -> 
             "No strobe return detection function", "FlashFunctionPresent" -> 
             True, "RedEyeCorrection" -> False], "FlashpixVersion" -> "1.00", 
           "ColorSpace" -> "RGBColor", "PixelXDimension" -> 1984, 
           "PixelYDimension" -> 1488, "InteroperabilityIndex" -> "R98", 
           "InteroperabilityVersion" -> "1.00", "FileSource" -> 
           "Digital still camera"]]],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{150, 113},
     PlotRange->{{0, 150}, {0, 113}}],
    Annotation[#, 
     Association[
     "URL" -> "http://www.wolframcdn.com/waimage/hset053/2ee/\
2eebd55df7aeb06b9473097049f1de56_v001s.jpg", "Dimensions" -> {150, 113}, 
      "Source" -> "http://en.wikipedia.org/wiki/File:Iris_versicolor_3.jpg", 
      "Popup" -> "hset053/2ee/2eebd55df7aeb06b9473097049f1de56_v001ms.jpg"], 
     "Image"]& ],
   TraditionalForm], "Output",
  CellSize->{550, Automatic},
  AutoStyleOptions->{"HighlightFormattingErrors"->False},
  ScriptLevel->0,
  NumberPoint->".",
  RenderingOptions->{"3DRenderingMethod"->"BSPTreeOrDepthBuffer"},
  FontFamily->"Times",
  FontSize->14,
  Background->None,
  GraphicsBoxOptions->{DefaultAxesStyle->Directive[
    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 1, 
    "GraphicsAxes"],
  DefaultBaseStyle->{FontFamily -> "Times", "Graphics"},
  DefaultFrameStyle->Directive[
    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 1, 
    "GraphicsFrame"],
  DefaultFrameTicksStyle->Directive[
   FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"],
  DefaultTicksStyle->Directive[
   FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]},
  Graphics3DBoxOptions->{
  DefaultBaseStyle->{FontFamily -> "Times", "Graphics3D"}}]], "Output",
 CellChangeTimes->{{3.8220432998843913`*^9, 3.8220433106941886`*^9}},
 CellLabel->"Out[54]=",ExpressionUUID->"b4311725-221e-4159-a9f5-d3888036aa4c"]
}, Open  ]],

Cell["\<\
The dataset is available directly through Mathematica and contains 4 \
variables for the length and width of the sepals and petals (in centimeters). \
Let\[CloseCurlyQuote]s load the data:\
\>", "Text",
 CellChangeTimes->{{3.822026962314794*^9, 
  3.822027017761835*^9}},ExpressionUUID->"43058145-d45f-4e6b-b311-\
08fa651cd2f1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"iris", " ", "=", " ", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<FisherIris\>\""}], "}"}], 
     ",", "\"\<Data\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8220433149105525`*^9, 3.822043380940756*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"e240daf0-0893-44b1-84f6-a62b6ec8c06f"],

Cell[BoxData[
 RowBox[{"iris", ";"}]], "Input",
 CellChangeTimes->{{3.8220433845427556`*^9, 3.8220433852048936`*^9}, 
   3.822043475718791*^9},
 CellLabel->"In[58]:=",ExpressionUUID->"66b9de6a-8233-425e-ad10-14911b1d6dc5"],

Cell["Rearrange the data so that it is grouped by species:", "Text",
 CellChangeTimes->{{3.822028287841877*^9, 
  3.8220282970854073`*^9}},ExpressionUUID->"96cdb699-bcd1-411f-9285-\
b738bba0dff8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"irisbyspecies", " ", "=", " ", 
  RowBox[{"GroupBy", "[", 
   RowBox[{"iris", ",", 
    RowBox[{"Last", "->", "First"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.822043419889657*^9, 3.822043446982793*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"5f1c85b2-6a65-4406-93d1-8daf3dfdc7fd"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"setosa\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"5.1`", ",", "3.5`", ",", "1.4`", ",", "0.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.9`", ",", "3.`", ",", "1.4`", ",", "0.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.7`", ",", "3.2`", ",", "1.3`", ",", "0.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.6`", ",", "3.1`", ",", "1.5`", ",", "0.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.`", ",", "3.6`", ",", "1.4`", ",", "0.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.4`", ",", "3.9`", ",", "1.7`", ",", "0.4`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.6`", ",", "3.4`", ",", "1.4`", ",", "0.3`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.`", ",", "3.4`", ",", "1.5`", ",", "0.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.4`", ",", "2.9`", ",", "1.4`", ",", "0.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.9`", ",", "3.1`", ",", "1.5`", ",", "0.1`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.4`", ",", "3.7`", ",", "1.5`", ",", "0.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.8`", ",", "3.4`", ",", "1.6`", ",", "0.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.8`", ",", "3.`", ",", "1.4`", ",", "0.1`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.3`", ",", "3.`", ",", "1.1`", ",", "0.1`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.8`", ",", "4.`", ",", "1.2`", ",", "0.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.7`", ",", "4.4`", ",", "1.5`", ",", "0.4`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.4`", ",", "3.9`", ",", "1.3`", ",", "0.4`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.1`", ",", "3.5`", ",", "1.4`", ",", "0.3`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.7`", ",", "3.8`", ",", "1.7`", ",", "0.3`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.1`", ",", "3.8`", ",", "1.5`", ",", "0.3`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.4`", ",", "3.4`", ",", "1.7`", ",", "0.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.1`", ",", "3.7`", ",", "1.5`", ",", "0.4`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.6`", ",", "3.6`", ",", "1.`", ",", "0.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.1`", ",", "3.3`", ",", "1.7`", ",", "0.5`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.8`", ",", "3.4`", ",", "1.9`", ",", "0.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.`", ",", "3.`", ",", "1.6`", ",", "0.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.`", ",", "3.4`", ",", "1.6`", ",", "0.4`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.2`", ",", "3.5`", ",", "1.5`", ",", "0.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.2`", ",", "3.4`", ",", "1.4`", ",", "0.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.7`", ",", "3.2`", ",", "1.6`", ",", "0.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.8`", ",", "3.1`", ",", "1.6`", ",", "0.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.4`", ",", "3.4`", ",", "1.5`", ",", "0.4`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.2`", ",", "4.1`", ",", "1.5`", ",", "0.1`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.5`", ",", "4.2`", ",", "1.4`", ",", "0.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.9`", ",", "3.1`", ",", "1.5`", ",", "0.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.`", ",", "3.2`", ",", "1.2`", ",", "0.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.5`", ",", "3.5`", ",", "1.3`", ",", "0.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.9`", ",", "3.6`", ",", "1.4`", ",", "0.1`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.4`", ",", "3.`", ",", "1.3`", ",", "0.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.1`", ",", "3.4`", ",", "1.5`", ",", "0.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.`", ",", "3.5`", ",", "1.3`", ",", "0.3`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.5`", ",", "2.3`", ",", "1.3`", ",", "0.3`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.4`", ",", "3.2`", ",", "1.3`", ",", "0.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.`", ",", "3.5`", ",", "1.6`", ",", "0.6`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.1`", ",", "3.8`", ",", "1.9`", ",", "0.4`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.8`", ",", "3.`", ",", "1.4`", ",", "0.3`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.1`", ",", "3.8`", ",", "1.6`", ",", "0.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.6`", ",", "3.2`", ",", "1.4`", ",", "0.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.3`", ",", "3.7`", ",", "1.5`", ",", "0.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.`", ",", "3.3`", ",", "1.4`", ",", "0.2`"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"\<\"versicolor\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"7.`", ",", "3.2`", ",", "4.7`", ",", "1.4`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.4`", ",", "3.2`", ",", "4.5`", ",", "1.5`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.9`", ",", "3.1`", ",", "4.9`", ",", "1.5`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.5`", ",", "2.3`", ",", "4.`", ",", "1.3`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.5`", ",", "2.8`", ",", "4.6`", ",", "1.5`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.7`", ",", "2.8`", ",", "4.5`", ",", "1.3`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.3`", ",", "3.3`", ",", "4.7`", ",", "1.6`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.9`", ",", "2.4`", ",", "3.3`", ",", "1.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.6`", ",", "2.9`", ",", "4.6`", ",", "1.3`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.2`", ",", "2.7`", ",", "3.9`", ",", "1.4`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.`", ",", "2.`", ",", "3.5`", ",", "1.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.9`", ",", "3.`", ",", "4.2`", ",", "1.5`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.`", ",", "2.2`", ",", "4.`", ",", "1.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.1`", ",", "2.9`", ",", "4.7`", ",", "1.4`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.6`", ",", "2.9`", ",", "3.6`", ",", "1.3`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.7`", ",", "3.1`", ",", "4.4`", ",", "1.4`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.6`", ",", "3.`", ",", "4.5`", ",", "1.5`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.8`", ",", "2.7`", ",", "4.1`", ",", "1.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.2`", ",", "2.2`", ",", "4.5`", ",", "1.5`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.6`", ",", "2.5`", ",", "3.9`", ",", "1.1`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.9`", ",", "3.2`", ",", "4.8`", ",", "1.8`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.1`", ",", "2.8`", ",", "4.`", ",", "1.3`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.3`", ",", "2.5`", ",", "4.9`", ",", "1.5`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.1`", ",", "2.8`", ",", "4.7`", ",", "1.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.4`", ",", "2.9`", ",", "4.3`", ",", "1.3`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.6`", ",", "3.`", ",", "4.4`", ",", "1.4`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.8`", ",", "2.8`", ",", "4.8`", ",", "1.4`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.7`", ",", "3.`", ",", "5.`", ",", "1.7`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.`", ",", "2.9`", ",", "4.5`", ",", "1.5`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.7`", ",", "2.6`", ",", "3.5`", ",", "1.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.5`", ",", "2.4`", ",", "3.8`", ",", "1.1`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.5`", ",", "2.4`", ",", "3.7`", ",", "1.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.8`", ",", "2.7`", ",", "3.9`", ",", "1.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.`", ",", "2.7`", ",", "5.1`", ",", "1.6`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.4`", ",", "3.`", ",", "4.5`", ",", "1.5`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.`", ",", "3.4`", ",", "4.5`", ",", "1.6`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.7`", ",", "3.1`", ",", "4.7`", ",", "1.5`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.3`", ",", "2.3`", ",", "4.4`", ",", "1.3`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.6`", ",", "3.`", ",", "4.1`", ",", "1.3`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.5`", ",", "2.5`", ",", "4.`", ",", "1.3`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.5`", ",", "2.6`", ",", "4.4`", ",", "1.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.1`", ",", "3.`", ",", "4.6`", ",", "1.4`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.8`", ",", "2.6`", ",", "4.`", ",", "1.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.`", ",", "2.3`", ",", "3.3`", ",", "1.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.6`", ",", "2.7`", ",", "4.2`", ",", "1.3`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.7`", ",", "3.`", ",", "4.2`", ",", "1.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.7`", ",", "2.9`", ",", "4.2`", ",", "1.3`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.2`", ",", "2.9`", ",", "4.3`", ",", "1.3`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.1`", ",", "2.5`", ",", "3.`", ",", "1.1`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.7`", ",", "2.8`", ",", "4.1`", ",", "1.3`"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"\<\"virginica\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"6.3`", ",", "3.3`", ",", "6.`", ",", "2.5`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.8`", ",", "2.7`", ",", "5.1`", ",", "1.9`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7.1`", ",", "3.`", ",", "5.9`", ",", "2.1`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.3`", ",", "2.9`", ",", "5.6`", ",", "1.8`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.5`", ",", "3.`", ",", "5.8`", ",", "2.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7.6`", ",", "3.`", ",", "6.6`", ",", "2.1`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.9`", ",", "2.5`", ",", "4.5`", ",", "1.7`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7.3`", ",", "2.9`", ",", "6.3`", ",", "1.8`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.7`", ",", "2.5`", ",", "5.8`", ",", "1.8`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7.2`", ",", "3.6`", ",", "6.1`", ",", "2.5`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.5`", ",", "3.2`", ",", "5.1`", ",", "2.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.4`", ",", "2.7`", ",", "5.3`", ",", "1.9`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.8`", ",", "3.`", ",", "5.5`", ",", "2.1`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.7`", ",", "2.5`", ",", "5.`", ",", "2.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.8`", ",", "2.8`", ",", "5.1`", ",", "2.4`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.4`", ",", "3.2`", ",", "5.3`", ",", "2.3`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.5`", ",", "3.`", ",", "5.5`", ",", "1.8`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7.7`", ",", "3.8`", ",", "6.7`", ",", "2.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7.7`", ",", "2.6`", ",", "6.9`", ",", "2.3`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.`", ",", "2.2`", ",", "5.`", ",", "1.5`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.9`", ",", "3.2`", ",", "5.7`", ",", "2.3`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.6`", ",", "2.8`", ",", "4.9`", ",", "2.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7.7`", ",", "2.8`", ",", "6.7`", ",", "2.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.3`", ",", "2.7`", ",", "4.9`", ",", "1.8`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.7`", ",", "3.3`", ",", "5.7`", ",", "2.1`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7.2`", ",", "3.2`", ",", "6.`", ",", "1.8`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.2`", ",", "2.8`", ",", "4.8`", ",", "1.8`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.1`", ",", "3.`", ",", "4.9`", ",", "1.8`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.4`", ",", "2.8`", ",", "5.6`", ",", "2.1`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7.2`", ",", "3.`", ",", "5.8`", ",", "1.6`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7.4`", ",", "2.8`", ",", "6.1`", ",", "1.9`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7.9`", ",", "3.8`", ",", "6.4`", ",", "2.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.4`", ",", "2.8`", ",", "5.6`", ",", "2.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.3`", ",", "2.8`", ",", "5.1`", ",", "1.5`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.1`", ",", "2.6`", ",", "5.6`", ",", "1.4`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7.7`", ",", "3.`", ",", "6.1`", ",", "2.3`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.3`", ",", "3.4`", ",", "5.6`", ",", "2.4`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.4`", ",", "3.1`", ",", "5.5`", ",", "1.8`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.`", ",", "3.`", ",", "4.8`", ",", "1.8`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.9`", ",", "3.1`", ",", "5.4`", ",", "2.1`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.7`", ",", "3.1`", ",", "5.6`", ",", "2.4`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.9`", ",", "3.1`", ",", "5.1`", ",", "2.3`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.8`", ",", "2.7`", ",", "5.1`", ",", "1.9`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.8`", ",", "3.2`", ",", "5.9`", ",", "2.3`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.7`", ",", "3.3`", ",", "5.7`", ",", "2.5`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.7`", ",", "3.`", ",", "5.2`", ",", "2.3`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.3`", ",", "2.5`", ",", "5.`", ",", "1.9`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.5`", ",", "3.`", ",", "5.2`", ",", "2.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.2`", ",", "3.4`", ",", "5.4`", ",", "2.3`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.9`", ",", "3.`", ",", "5.1`", ",", "1.8`"}], "}"}]}], 
     "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8220434789728937`*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"d43e2a3b-d78b-45ce-8bb0-b7e3fa024a27"]
}, Open  ]],

Cell["\<\
Let\[CloseCurlyQuote]s first try to plot the data. This is a 4-dimensional \
dataset (one dimension for each variable) so we don\[CloseCurlyQuote]t have \
an easy way to visualise it all. Instead,  just visualise three dimensions by \
dropping one dimension\
\>", "Text",
 CellChangeTimes->{{3.822028428962113*^9, 
  3.822028497848538*^9}},ExpressionUUID->"7b29358f-af96-4a22-8bb7-\
9cdf1aa87643"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPointPlot3D", "[", 
  RowBox[{"irisbyspecies", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "All", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.822043486554894*^9, 3.822043574262501*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"eb10c1ed-9df4-46ab-af10-6b57a658cc73"],

Cell[BoxData[
 Graphics3DBox[{{{
     {RGBColor[0.3315753, 0.4561011, 0.6388182], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], Point3DBox[{5.1, 3.5, 1.4}],
       Point3DBox[{4.9, 3., 1.4}], Point3DBox[{4.7, 3.2, 1.3}], 
      Point3DBox[{4.6, 3.1, 1.5}], Point3DBox[{5., 3.6, 1.4}], 
      Point3DBox[{5.4, 3.9, 1.7}], Point3DBox[{4.6, 3.4, 1.4}], 
      Point3DBox[{5., 3.4, 1.5}], Point3DBox[{4.4, 2.9, 1.4}], 
      Point3DBox[{4.9, 3.1, 1.5}], Point3DBox[{5.4, 3.7, 1.5}], 
      Point3DBox[{4.8, 3.4, 1.6}], Point3DBox[{4.8, 3., 1.4}], 
      Point3DBox[{4.3, 3., 1.1}], Point3DBox[{5.8, 4., 1.2}], 
      Point3DBox[{5.7, 4.4, 1.5}], Point3DBox[{5.4, 3.9, 1.3}], 
      Point3DBox[{5.1, 3.5, 1.4}], Point3DBox[{5.7, 3.8, 1.7}], 
      Point3DBox[{5.1, 3.8, 1.5}], Point3DBox[{5.4, 3.4, 1.7}], 
      Point3DBox[{5.1, 3.7, 1.5}], Point3DBox[{4.6, 3.6, 1.}], 
      Point3DBox[{5.1, 3.3, 1.7}], Point3DBox[{4.8, 3.4, 1.9}], 
      Point3DBox[{5., 3., 1.6}], Point3DBox[{5., 3.4, 1.6}], 
      Point3DBox[{5.2, 3.5, 1.5}], Point3DBox[{5.2, 3.4, 1.4}], 
      Point3DBox[{4.7, 3.2, 1.6}], Point3DBox[{4.8, 3.1, 1.6}], 
      Point3DBox[{5.4, 3.4, 1.5}], Point3DBox[{5.2, 4.1, 1.5}], 
      Point3DBox[{5.5, 4.2, 1.4}], Point3DBox[{4.9, 3.1, 1.5}], 
      Point3DBox[{5., 3.2, 1.2}], Point3DBox[{5.5, 3.5, 1.3}], 
      Point3DBox[{4.9, 3.6, 1.4}], Point3DBox[{4.4, 3., 1.3}], 
      Point3DBox[{5.1, 3.4, 1.5}], Point3DBox[{5., 3.5, 1.3}], 
      Point3DBox[{4.5, 2.3, 1.3}], Point3DBox[{4.4, 3.2, 1.3}], 
      Point3DBox[{5., 3.5, 1.6}], Point3DBox[{5.1, 3.8, 1.9}], 
      Point3DBox[{4.8, 3., 1.4}], Point3DBox[{5.1, 3.8, 1.6}], 
      Point3DBox[{4.6, 3.2, 1.4}], Point3DBox[{5.3, 3.7, 1.5}], 
      Point3DBox[{5., 3.3, 1.4}]}, 
     {RGBColor[0.7926498, 0.5499369, 0.1278459], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], Point3DBox[{7., 3.2, 4.7}], 
      Point3DBox[{6.4, 3.2, 4.5}], Point3DBox[{6.9, 3.1, 4.9}], 
      Point3DBox[{5.5, 2.3, 4.}], Point3DBox[{6.5, 2.8, 4.6}], 
      Point3DBox[{5.7, 2.8, 4.5}], Point3DBox[{6.3, 3.3, 4.7}], 
      Point3DBox[{4.9, 2.4, 3.3}], Point3DBox[{6.6, 2.9, 4.6}], 
      Point3DBox[{5.2, 2.7, 3.9}], Point3DBox[{5., 2., 3.5}], 
      Point3DBox[{5.9, 3., 4.2}], Point3DBox[{6., 2.2, 4.}], 
      Point3DBox[{6.1, 2.9, 4.7}], Point3DBox[{5.6, 2.9, 3.6}], 
      Point3DBox[{6.7, 3.1, 4.4}], Point3DBox[{5.6, 3., 4.5}], 
      Point3DBox[{5.8, 2.7, 4.1}], Point3DBox[{6.2, 2.2, 4.5}], 
      Point3DBox[{5.6, 2.5, 3.9}], Point3DBox[{5.9, 3.2, 4.8}], 
      Point3DBox[{6.1, 2.8, 4.}], Point3DBox[{6.3, 2.5, 4.9}], 
      Point3DBox[{6.1, 2.8, 4.7}], Point3DBox[{6.4, 2.9, 4.3}], 
      Point3DBox[{6.6, 3., 4.4}], Point3DBox[{6.8, 2.8, 4.8}], 
      Point3DBox[{6.7, 3., 5.}], Point3DBox[{6., 2.9, 4.5}], 
      Point3DBox[{5.7, 2.6, 3.5}], Point3DBox[{5.5, 2.4, 3.8}], 
      Point3DBox[{5.5, 2.4, 3.7}], Point3DBox[{5.8, 2.7, 3.9}], 
      Point3DBox[{6., 2.7, 5.1}], Point3DBox[{5.4, 3., 4.5}], 
      Point3DBox[{6., 3.4, 4.5}], Point3DBox[{6.7, 3.1, 4.7}], 
      Point3DBox[{6.3, 2.3, 4.4}], Point3DBox[{5.6, 3., 4.1}], 
      Point3DBox[{5.5, 2.5, 4.}], Point3DBox[{5.5, 2.6, 4.4}], 
      Point3DBox[{6.1, 3., 4.6}], Point3DBox[{5.8, 2.6, 4.}], 
      Point3DBox[{5., 2.3, 3.3}], Point3DBox[{5.6, 2.7, 4.2}], 
      Point3DBox[{5.7, 3., 4.2}], Point3DBox[{5.7, 2.9, 4.2}], 
      Point3DBox[{6.2, 2.9, 4.3}], Point3DBox[{5.1, 2.5, 3.}], 
      Point3DBox[{5.7, 2.8, 4.1}]}, 
     {RGBColor[0.5041629000000001, 0.6224121, 0.1753965], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], Point3DBox[{6.3, 3.3, 6.}], 
      Point3DBox[{5.8, 2.7, 5.1}], Point3DBox[{7.1, 3., 5.9}], 
      Point3DBox[{6.3, 2.9, 5.6}], Point3DBox[{6.5, 3., 5.8}], 
      Point3DBox[{7.6, 3., 6.6}], Point3DBox[{4.9, 2.5, 4.5}], 
      Point3DBox[{7.3, 2.9, 6.3}], Point3DBox[{6.7, 2.5, 5.8}], 
      Point3DBox[{7.2, 3.6, 6.1}], Point3DBox[{6.5, 3.2, 5.1}], 
      Point3DBox[{6.4, 2.7, 5.3}], Point3DBox[{6.8, 3., 5.5}], 
      Point3DBox[{5.7, 2.5, 5.}], Point3DBox[{5.8, 2.8, 5.1}], 
      Point3DBox[{6.4, 3.2, 5.3}], Point3DBox[{6.5, 3., 5.5}], 
      Point3DBox[{7.7, 3.8, 6.7}], Point3DBox[{7.7, 2.6, 6.9}], 
      Point3DBox[{6., 2.2, 5.}], Point3DBox[{6.9, 3.2, 5.7}], 
      Point3DBox[{5.6, 2.8, 4.9}], Point3DBox[{7.7, 2.8, 6.7}], 
      Point3DBox[{6.3, 2.7, 4.9}], Point3DBox[{6.7, 3.3, 5.7}], 
      Point3DBox[{7.2, 3.2, 6.}], Point3DBox[{6.2, 2.8, 4.8}], 
      Point3DBox[{6.1, 3., 4.9}], Point3DBox[{6.4, 2.8, 5.6}], 
      Point3DBox[{7.2, 3., 5.8}], Point3DBox[{7.4, 2.8, 6.1}], 
      Point3DBox[{7.9, 3.8, 6.4}], Point3DBox[{6.4, 2.8, 5.6}], 
      Point3DBox[{6.3, 2.8, 5.1}], Point3DBox[{6.1, 2.6, 5.6}], 
      Point3DBox[{7.7, 3., 6.1}], Point3DBox[{6.3, 3.4, 5.6}], 
      Point3DBox[{6.4, 3.1, 5.5}], Point3DBox[{6., 3., 4.8}], 
      Point3DBox[{6.9, 3.1, 5.4}], Point3DBox[{6.7, 3.1, 5.6}], 
      Point3DBox[{6.9, 3.1, 5.1}], Point3DBox[{5.8, 2.7, 5.1}], 
      Point3DBox[{6.8, 3.2, 5.9}], Point3DBox[{6.7, 3.3, 5.7}], 
      Point3DBox[{6.7, 3., 5.2}], Point3DBox[{6.3, 2.5, 5.}], 
      Point3DBox[{6.5, 3., 5.2}], Point3DBox[{6.2, 3.4, 5.4}], 
      Point3DBox[{5.9, 3., 5.1}]}}, {}, {{}, {}}}, {}},
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{379.41569132550194`, 297.5617326293092},
  ImageSizeRaw->Automatic,
  Lighting->{{"Ambient", 
     GrayLevel[0.5]}, {"Directional", 
     GrayLevel[0.5], 
     ImageScaled[{0, 2, 2}]}, {"Directional", 
     GrayLevel[0.5], 
     ImageScaled[{2, 2, 2}]}, {"Directional", 
     GrayLevel[0.5], 
     ImageScaled[{2, 0, 2}]}},
  PlotRange->{{4.3, 7.9}, {2., 4.4}, Automatic},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {0, 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-1.3725666088549613`, -2.525732901513673, 1.7851426314072811`},
  ViewVertical->{0.11816979277962554`, -0.12652348925256837`, 
   0.9848998460461732}]], "Output",
 CellChangeTimes->{3.82204357520459*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"e9bbe7d5-fa33-47f1-a33e-2b75171dffb0"]
}, Open  ]],

Cell["\<\
It looks like there is hope for separating out the species based on their \
properties, but it is difficult working with 4-dimensional data. Instead, let\
\[CloseCurlyQuote]s project it onto the two-dimensional space spanned by the \
first two principal components. We do this as before: standardize the data, \
use the SVD to find the principal components and the projection of the data \
onto those components and then un-standardize the result for plotting.  \
Instead of doing those steps manually again, let\[CloseCurlyQuote]s use \
Mathematica\[CloseCurlyQuote]s DimensionReduction function which does exactly \
that. We tell it to use Principal Component Analysis and to project onto two \
dimensions\
\>", "Text",
 CellChangeTimes->{{3.822028509199498*^9, 
  3.822028719133795*^9}},ExpressionUUID->"21e0cb44-fac9-4a6a-8358-\
4ff2c73bbf20"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"diris", " ", "=", " ", 
  RowBox[{"DimensionReduction", "[", 
   RowBox[{
    RowBox[{"iris", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "2", ",", 
    RowBox[{"Method", "\[Rule]", "\"\<PrincipalComponentsAnalysis\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8220436327898035`*^9, 3.8220437151462975`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"7273af53-05bf-4bfe-ba69-cd9cea18f0a3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["DimensionReducerFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}}, {}, {{}, {}, {
                 GrayLevel[0.7], 
                 AbsoluteThickness[1.8], 
                 Opacity[1.], 
                 LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAAAAAAAAAAAAAAAAAAAAAAA3l5opg
ldw/ifaD+DItuD+MkCEodiHjP9qvjCs8v9E/bLbqGG2J5D+WRNoAzOrePxWI
hjT6cuM/qFFV1TM75j8YmI/Y7IHfP/eKfiNPOe0/quVYmD5o1D+ADmRmEGnx
P3eNjU0+TbI/IY3cLB+l8z/z/SDb3KDLv5a/pk3oyvQ/P80MS7g64L+H2H4K
a8b0P9+nsKVohOq/rTamnQZ68z/qrFzHBdfxv6YHIajkDPE/bw9qE5vX9b+Z
SUCP/i3rP/uMEvTgV/m/kzjs/r2F4T/bUNnDc5T7v9G7+cvEhMs/wYIqip+q
/L9jvEi/XoXHvxhoDlvsO/y/eOnDDXz84r8s6yb5EW/6v2qTREHJFe+/UEHO
hnD69r/GEyuZBq31v4JWinxOcPK/c9vQT8is+r8XVSwtro/ov0knBpVW9/6/
yZ09iVcE1b9l2NyAUeAAwDbV0T76Ar4/Y701SKBwAcCmV9X1r7fjP9Pdwu5B
LgHAhEmFnNot8T/aVnzNXBkAwIeJGWTe4Pc/Fl/LTVCK/L9n/YLkNTv+P27f
ThBa+/a/DjFFsd98AUAQoc+DuIDwv00y1JUAQgNAdLxOLvHB4L8FJ/Yfkw0E
QHdYowipHsa8z+n67g==
                  "]]}}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, 
                GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBQAGIQvSOde+X6LwX2L+JEV934or//a9ba9rVPHto/qNs+
h/vZZfumRXKlmjWP7f94fAgTnPDcnk/kyM/O5Bf27XmKKav2f7HfXXOp8OzR
U/ZfddfwhpR8tH/Mf1NimfrD/bmrPms6/Ptsv6/iJO/vs5/3+3H82Z7G+Nqe
6/yMbVMP/dhfKsm+/u3U5/bzr9z7quHMeMBGKvy71POz+5PZdsQbTf23/7d6
VqJF6pf9/teV3u88/Hn/ux/vv2b//bTftGfJ25NKr/eXHb7jHVj0Y39nSUKD
+sIl9od7wyt357EeyI75vbEl+Jl9xCWXx0L8f/a7XHD6XCLA4HD6j8KD5/N+
7l/dca7ELo3ZwUXo+W6J9/f2j3T/AwAmeB/L
                 "], {{}, {
                   GrayLevel[0.5], 
                   PointSize[0.12], 
                   AbsoluteThickness[1.6], 
                   
                   PointBox[{17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 
                    29, 30, 31, 
                    32}]}, {}}], {}}, {}, {}, {{{}, {}, {}, {}}, {}}}}, 
             ImagePadding -> 0.2, PlotRange -> {{-3.1, 3.2}, {-3.5, 2.1}}, 
             PlotRangePadding -> Automatic, PlotRangeClipping -> True, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "4", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}}, {}, {{}, {}, {
                 GrayLevel[0.7], 
                 AbsoluteThickness[1.8], 
                 Opacity[1.], 
                 LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAAAAAAAAAAAAAAAAAAAAAAA3l5opg
ldw/ifaD+DItuD+MkCEodiHjP9qvjCs8v9E/bLbqGG2J5D+WRNoAzOrePxWI
hjT6cuM/qFFV1TM75j8YmI/Y7IHfP/eKfiNPOe0/quVYmD5o1D+ADmRmEGnx
P3eNjU0+TbI/IY3cLB+l8z/z/SDb3KDLv5a/pk3oyvQ/P80MS7g64L+H2H4K
a8b0P9+nsKVohOq/rTamnQZ68z/qrFzHBdfxv6YHIajkDPE/bw9qE5vX9b+Z
SUCP/i3rP/uMEvTgV/m/kzjs/r2F4T/bUNnDc5T7v9G7+cvEhMs/wYIqip+q
/L9jvEi/XoXHvxhoDlvsO/y/eOnDDXz84r8s6yb5EW/6v2qTREHJFe+/UEHO
hnD69r/GEyuZBq31v4JWinxOcPK/c9vQT8is+r8XVSwtro/ov0knBpVW9/6/
yZ09iVcE1b9l2NyAUeAAwDbV0T76Ar4/Y701SKBwAcCmV9X1r7fjP9Pdwu5B
LgHAhEmFnNot8T/aVnzNXBkAwIeJGWTe4Pc/Fl/LTVCK/L9n/YLkNTv+P27f
ThBa+/a/DjFFsd98AUAQoc+DuIDwv00y1JUAQgNAdLxOLvHB4L8FJ/Yfkw0E
QHdYowipHsa8z+n67g==
                  "]]}}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, 
                GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBQAGIQvSOde+X6LwX2L+JEV934or//a9ba9rVPHto/qNs+
h/vZZfumRXKlmjWP7f94fAgTnPDcnk/kyM/O5Bf27XmKKav2f7HfXXOp8OzR
U/ZfddfwhpR8tH/Mf1NimfrD/bmrPms6/Ptsv6/iJO/vs5/3+3H82Z7G+Nqe
6/yMbVMP/dhfKsm+/u3U5/bzr9z7quHMeMBGKvy71POz+5PZdsQbTf23/7d6
VqJF6pf9/teV3u88/Hn/ux/vv2b//bTftGfJ25NKr/eXHb7jHVj0Y39nSUKD
+sIl9od7wyt357EeyI75vbEl+Jl9xCWXx0L8f/a7XHD6XCLA4HD6j8KD5/N+
7l/dca7ELo3ZwUXo+W6J9/f2j3T/AwAmeB/L
                 "], {{}, {
                   GrayLevel[0.5], 
                   PointSize[0.12], 
                   AbsoluteThickness[1.6], 
                   
                   PointBox[{17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 
                    29, 30, 31, 
                    32}]}, {}}], {}}, {}, {}, {{{}, {}, {}, {}}, {}}}}, 
             ImagePadding -> 0.2, PlotRange -> {{-3.1, 3.2}, {-3.5, 2.1}}, 
             PlotRangePadding -> Automatic, PlotRangeClipping -> True, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "4", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"PrincipalComponentsAnalysis\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["150", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  DimensionReducerFunction[
   Association[
   "ExampleNumber" -> 150, "Imputer" -> 
    MachineLearning`MLProcessor["ImputeMissing", 
      Association[
      "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
       "StructurePreserving" -> True, "Input" -> 
       Association[
        "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
       "Fill" -> {5.8433333333333355`, 3.0573333333333346`, 
        3.7580000000000027`, 1.1993333333333343`}, "Method" -> "Naive", 
       "VectorLength" -> 4, "Output" -> 
       Association[
        "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
       "Type" -> "NumericalVector"]], "RandomImputer" -> 
    MachineLearning`MLProcessor["ImputeMissing", 
      Association[
      "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
       "StructurePreserving" -> True, "Input" -> 
       Association[
        "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
       "Mean" -> {5.8433333333333355`, 3.0573333333333346`, 
        3.7580000000000027`, 1.1993333333333343`}, 
       "StandardDeviation" -> {0.8253012917851188, 0.43441096773547977`, 
        1.759404065775299, 0.7596926279021586}, "Method" -> "NaiveSampler", 
       "VectorLength" -> 4, "Output" -> 
       Association[
        "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
       "Type" -> "NumericalVector"]], "Preprocessor" -> 
    MachineLearning`MLProcessor["ToMLDataset", 
      Association[
      "Input" -> Association[
        "f1" -> Association["Type" -> "NumericalVector", "Length" -> 4]], 
       "Output" -> 
       Association[
        "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
       "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
         Association["Processors" -> {
            MachineLearning`MLProcessor["List"], 
            MachineLearning`MLProcessor["WrapMLDataset", 
             Association[
             "FeatureTypes" -> {"NumericalVector"}, "FeatureKeys" -> {"f1"}, 
              "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
              "RawExample" -> Missing["KeyAbsent", "RawExample"], 
              "StructurePreserving" -> False]]}]], "ScalarFeature" -> True, 
       "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
       "Missing" -> "Allowed"]], "Processor" -> 
    MachineLearning`MLProcessor["Identity"], "Model" -> 
    Association[
     "Matrix" -> {{-0.5210659146701279, 0.3774176155645697}, {
       0.2693474425059518, 0.9232956595407136}, {-0.5804130957962891, 
       0.024491609085590525`}, {-0.564856535779355, 0.06694198696806124}}, 
      "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor["Standardize", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Mean" -> {5.8433333333333355`, 3.0573333333333346`, 
              3.7580000000000027`, 1.1993333333333343`}, 
             "StandardDeviation" -> {0.8253012917851188, 0.43441096773547977`,
               1.759404065775299, 0.7596926279021586}, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association["Type" -> "NumericalVector", "Weight" -> 1],
              "Key" -> "f1", "Invertibility" -> "Perfect", 
             "StructurePreserving" -> False, "Missing" -> "Allowed"]]}, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"]], "FinalDimension" -> 2, "Padder" -> 
      MachineLearning`MLProcessor["Identity"], "Method" -> 
      "PrincipalComponentsAnalysis"], "PerformanceGoal" -> Automatic, 
    "Invertibility" -> "Approximate", "Log" -> 
    Association[
     "TrainingTime" -> 0.0297035, "MaxTrainingMemory" -> 123232, "DataMemory" -> 
      21680, "FunctionMemory" -> 22016, "LanguageVersion" -> {12.2, 0}, 
      "Date" -> DateObject[{
        2021, 2, 11, 14, 48, 37.0405295`9.321252074601267}, "Instant", 
        "Gregorian", 0.], "ProcessorCount" -> 2, "ProcessorType" -> "x86-64", 
      "OperatingSystem" -> "Windows", "SystemWordLength" -> 64, 
      "Evaluations" -> {}]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.822043669537983*^9, 3.8220437170884085`*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"de8b58c8-bfb7-4ae5-92a8-db5669713efc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"irisbyspecies", "[", "\"\<setosa\>\"", "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8220437820656776`*^9, 3.822043799143915*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"118439d8-9c4a-4561-b4c1-2518144258c9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5.1`", ",", "3.5`", ",", "1.4`", ",", "0.2`"}], "}"}]], "Output",
 CellChangeTimes->{3.8220437995478053`*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"a8112af5-d7da-4b33-aba6-327bb67e4058"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"diris", "[", 
  RowBox[{
   RowBox[{"irisbyspecies", "[", "\"\<setosa\>\"", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.822043801632619*^9, 3.8220438169251137`*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"781cae23-d726-4d6b-8c4d-941d7c4ba289"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.2647028088076153`", ",", "0.48002659652099505`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8220438172561846`*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"55134735-4c53-4afe-b763-581e31e49bb3"]
}, Open  ]],

Cell["\<\
The result is a DimensionReducerFunction which takes in a vector of 4 numbers \
and returns a vector of two numbers obtained by projecting along the two \
principal directions. We now apply this projection function to our iris data\
\>", "Text",
 CellChangeTimes->{{3.822028728499848*^9, 3.822028768968663*^9}, {
  3.82202881732827*^9, 
  3.822028856552979*^9}},ExpressionUUID->"ffa87055-2228-4433-83b7-\
9d4ea8d50eaf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dirisbyspecies", " ", "=", " ", 
   RowBox[{"diris", "/@", "irisbyspecies"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8220438419176865`*^9, 3.8220438636184006`*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"b5b77a34-b0ff-4553-adf5-379c07ade78f"],

Cell["\<\
When we plot this lower dimensional representation of the data, we can \
clearly delineate between the species:\
\>", "Text",
 CellChangeTimes->{{3.82202988261653*^9, 
  3.822029905971447*^9}},ExpressionUUID->"5ec87d40-bfd2-4a87-9ad1-\
4c3b80edc70e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "dirisbyspecies", "]"}]], "Input",
 CellChangeTimes->{{3.8220438709104743`*^9, 3.822043878282456*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"9f3f94fe-0d6d-46df-9427-1e4fb296eff3"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAAhueXgRweAkCjJFF5wbjePx2E3/XO
pQBAhjNYiYCS5b8eshXs8OkCQOPINDHS4dW/yRhpjSNlAkBmuygW2x3jv/Zb
15FlHgNAcLfuHeCy5D+63gdm5JoAQE2lic+r0/c//g5r/V6NA0C8f1T90WSo
P1KTovje3AFA+gAvtR2QzD/EP6T8V60CQHfoJtVh2PG/7JTYDIF5AUCfpOZ0
UQTev9sN3GOaVAFA9x1g+PSy8D+Ms+x/6psCQBVN1Py1CME/+8pRL2O/AUCn
Gm2tUFHnv8kX+xiXEAVASnCVwqnE7r/LVztQBZcBQBajZD/Lwv0/uBmu7gMZ
AkCSa1q4gn0FQELz5LwjqQFAC6/sK9289z9WU6b21YUBQMbKlYEgSd8/OTJx
B41g/j9D/cf89Hr2P3hTK0Y4vwJA+8Uhy6sL8j+mfGImEaH+P2sNZiGxKto/
iP16WfanAUDnJS0ZZ5LtPzc7t6LbMQZAcfXUrYBV3T8gsD84RRn9P7xUTOAp
57U/JuTG/jrRAUCfEoLSjZHBP1iO4DfDOv8/OqnIRREF5L/QJQgNwmgAQAuG
ex03/84/te9f/T5ZAUCAoWmuaN7gPxZzWHHTHQFAcNrEtsIL1D+44u9qQR8C
QB7mXUZmndW/SW6wWvgeAUAsGHWEMiXgv3FAeVE2Tv0/Lm216tEd2z9qDsrS
aesEQKjSzZh8svw/FGnMc8WRA0Cn/D/RsDQBQL0A54E64QBAfP6hbPJz3b82
30q2l6kBQLKNRCq6Ycq/72FMnXVcAEBmZ6TqeyvlP9KiScv5NwRAVNDZ+Q/0
4j+nRho0428DQOiS4/oK7+y/pOAhSpFbAUCUqHwaUDXRPydL3nqzSgJAbKwT
nhBF3D8FZ+Gc3rr9P/fu1rcGswLAKcqX99ltBEAtQeTwlanev2Z+x7Fgbv8/
moG4oZk63j/AqlxkshgBQMXlzzCSRvI/nKJuGdaOAECEdCil8cDmv4WiZfvu
EwNAA9r3sUft8T+sH9/EricDQL36fM1EuNi/isBcEujVAUDep81QSe/vP7IW
m2xzoQFAKP0ikQbggj91Mo8J
         "]]}, {
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAAjfhITuWg8b/iJzlVeJ3rP3JYjb4d
Z+e/aAwPdhUH4z+bU4UhDdvzvwMkzdu1uOM/393S0jMU2r8c3OHqCRL8v+Gp
rPUkNfG/OCRLdIqtyr/vj7LZQODYv7eKuvYt/OK/gwAQV5Lj57/MehT/krzo
P7i0AbpLMN8/O2ejroyj/b/8ddTGXrHtvyLgPb3vf6A/wLmLF51mh7/lWzK/
Vovwvy5UvsrSNbw/MIqmh4o7BcCKZrxLUjTcv1rcVQwdNLC/WHkfj8r84b8m
Q9OhTzz8v6LlaaemBue/LODgNzXWx78KKaQe3hOhP4pzbeugGNy/XVrt8FUD
7L8zQb1+QErgP1oh2viFata/SBncL74gyb9fVT8841PEv4SVoSvZWOm/kwQr
yPuZ87+bqwbrtfT5v3DWMZwHHMW/kGm5xnzX9L+kkmmkGJvnv4AlSbBtYdk/
ZBgmRX173r9WRPEfYLXav3oIbogxv/O/Nqs2683d7b8sS9jWX0Dkv60u664Y
ptq/9aI3TjN85r+32+XLwTuwv6WW5b0M+uu/9ecju/8M0D8fxqpNqRr0v8lN
A+4Mx7O/ZOc0Age89b8HyITpNTTVP5hCc2sLRuW/F72VNTTrzL+smGbSxpyk
P77i0duC8PC/gHWedOW9wL+7TTbAEP/4v2gDh1D7A5i/1bQuK9wo+b8LN4nj
uerOv6Pl+cZI3+i/Rg4vVz768L+4q92gcUjkv/nsnSFWq8y/0Fy4l+Fq0r+G
4KToA3fbv46B2HwCD+s/WXSlEJfH8L+nBUv4pbTgP20LeopmtvC/qJV6x7gg
9r+N6GBLitCxv+Jj1m2vGMy/zsHmtn0k0r/zIqnp6UT1v4q2TAhp3NG/pvmA
B6Pr8b8UypHJefzjv56/QC5shZk/ntJ0rbaJ1b+qI2R2AaHvv0IRBjgDLtc/
5TyjL2YnAMBMjXRqMnjSv0hJUY0kYuu/y1wtdGljt79pc1u3TTHHv24NHIXT
Jc2/44Xa1Yei2L+CDTLaxXHiv0OOh+Xl0sO/lnGOkZOm3D/EBblGX7P4v63r
ySJGbtC/Onf0Pcsp47847MQC
         "]]}, {
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAACHEhpVqD/b8Wp8XLfdrrP6i81d6u
hvK/ntpbVCRd5r9a/VTqYqQBwKNUWGX9++E/aTsnbNsK978p+HbUwQ6ov6M4
FhGP4v2/kGj5rwPi0j+wXtsq1gMGwMmWusHznOk/WpSawTd9178jBbh06vv4
v3J8HV9lawLAxW2vvVri2j+2+X+isQ0AwKYNw/4axOa/hACSJQYUAsASwWJg
dbz+PwYZT66p0/W/kSKElQ8r5j9cMbtjkqT5vxrYHuIj/dq/jqHrD3Uk/r/y
V418/NTaP2v8Q3NuKfS/hQQ2Yp6Y8r8AA8iIeXv3v0sE73wtTty/TkHU6fRw
+b/8fZUlzKPlP174Pbf7ive/P+0PpBtc0D+q3A4sH2kDwJDwWNAKdARAJxBg
9018CsB8uEtPKzWSPy3tUGdjOPS/1gt1PtRO+7+Xsko0Pk0AwL9OjIyMIu0/
iAS3QJ5L77/H7IKy5Eviv9RFn+djLgfAK8HPWRh52j+RehxD61T1v2F/vLj+
1d6/NsZOvzQ2+7/QnM0iBjnwPzZqdRTsRP+/eO6RZtsf8D9wBy93Oc3yv3or
zZnOP9S/UiWhPtBV8L8xHTY7+3iwP2WdT84Unfy/nm2ayHP7x7/1C80YgNH9
vzjO0B5J/uE/zfrfTtV8A8Ay3S28HZjQP0JKB/J9cALAtDTm4LUCBUDExTLk
oc39v1chEbi12sa/fJLSlIzT8b8IE9+HPr/Sv7lZEKVUPfO/VA9gcUv26b8T
4KrC4WMGwFdp6dDuaus/F5wGHlg4+b9VENGA6BjxP4APv5ZpivW/eDecZhoJ
2z9ka2JsKpjtvzyPtrTuopE/J/kA/vmh/b8RfqON16LlPwheQu5UHgDAbEXC
ffOk4z8Wq3sntW3+v9GyfKAAEeY/qLzV3q6G8r+e2ltUJF3mvyuKODEQUwDA
8bA2kLrC6z+wZ9sWafj/v/RCEitlyfA/JO5k3JTt/b9dmVpiDcTYPzg0aYuF
CPm/z+PeiKix7L9Oqrjgtlb4v8BWwsltONE/1flEVPD29b+lIfgcGS7wP0Te
9raxve6/2sUtnGbqmL9BmbNJ
         "]]}}}, {{}, {{}, {}}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-3.310695583933938, 
      2.7743447029273756`}, {-2.6540728185366547`, 2.6862844851106695`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.08090169943749476]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"setosa\"", "\"versicolor\"", "\"virginica\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8220438788162584`*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"79fc37a1-dfc0-4bde-9ca4-95a0a822ca40"]
}, Open  ]],

Cell["\<\
We can go even further than this. We have seen how we can use PCA to project \
high-dimensional data onto a lower dimensional surface, but we could also \
reconstruct those projected vectors in the original 4-dimensional space. For \
example, let\[CloseCurlyQuote]s take one sample of the setosa species:\
\>", "Text",
 CellChangeTimes->{{3.822029909269264*^9, 3.8220299157842216`*^9}, {
  3.822030188831064*^9, 3.82203023632477*^9}, {3.822030268053771*^9, 
  3.822030268783704*^9}, {3.822030398771963*^9, 3.822030401340191*^9}, {
  3.8220305784492397`*^9, 3.822030586464943*^9}, {3.822030860774939*^9, 
  3.822030893868408*^9}},ExpressionUUID->"66290fcf-5470-4dc2-a8a7-\
f8c298f121e1"],

Cell["We can project this onto the lower-dimensional space:", "Text",
 CellChangeTimes->{{3.82203090988809*^9, 
  3.82203091876994*^9}},ExpressionUUID->"8b968971-c488-4ec3-b76b-\
5c81f91903db"],

Cell["\<\
Then we can take these principal components and combine them with the \
principal component vectors to reconstruct a 4-vector in the original space. \
This will be the closest point on our lower-dimensional surface to the \
original 4-dimensional sample:\
\>", "Text",
 CellChangeTimes->{{3.822030928011619*^9, 3.822030979441312*^9}, {
   3.822031113458107*^9, 3.822031129756094*^9}, {3.8220311784781427`*^9, 
   3.822031183122361*^9}, {3.822031225153006*^9, 3.822031258526787*^9}, 
   3.822031297032358*^9, {3.822032249364324*^9, 
   3.8220322523225517`*^9}},ExpressionUUID->"8a701d98-f6f5-45f7-bfdf-\
f56a43d7a158"],

Cell["\<\
We can do these two steps (projection and reconstruction) in one go by asking \
for the reconstructed vector directly:\
\>", "Text",
 CellChangeTimes->{{3.822031268154028*^9, 
  3.822031295206451*^9}},ExpressionUUID->"8132d46f-5826-4be9-a2fe-\
d58bda9bc7fa"],

Cell["Now let\[CloseCurlyQuote]s do this for all sample points and plot the \
result:", "Text",
 CellChangeTimes->{{3.822032352533532*^9, 
  3.8220323686512213`*^9}},ExpressionUUID->"5df37c7b-2870-4e93-91bf-\
e90f2f33e164"],

Cell["\<\
Finally, we can also use this approach to fill in missing data. For example, \
say we had missed a measurement for our first setosa sample \
\>", "Text",
 CellChangeTimes->{{3.822032432615691*^9, 
  3.822032472408146*^9}},ExpressionUUID->"b81abec2-d724-4338-8f18-\
57aa9ba023b0"],

Cell["We can still project this onto the lower dimensional space", "Text",
 CellChangeTimes->{{3.822032486555703*^9, 
  3.8220325174698257`*^9}},ExpressionUUID->"0df6ed88-c985-47c1-94e5-\
294a92a2e8e6"],

Cell["\<\
And we can reconstruct a 4-dimensional vector from this, \
\[OpenCurlyDoubleQuote]filling in\[CloseCurlyDoubleQuote] the missing  piece:\
\
\>", "Text",
 CellChangeTimes->{{3.822032557580513*^9, 
  3.8220325769620867`*^9}},ExpressionUUID->"b50624bb-f9a5-4e83-acf4-\
7b784f5d5ff3"],

Cell["\<\
If all we want to do is fill in the missing piece and leave the others \
unchanged, then we could do that too:\
\>", "Text",
 CellChangeTimes->{{3.822032580459586*^9, 
  3.8220325971983843`*^9}},ExpressionUUID->"2481a076-d59d-434e-b1c9-\
f6435968604a"],

Cell["\<\
We won\[CloseCurlyQuote]t cover this idea further in this module, but this is \
a lot of information about data imputation available online.\
\>", "Text",
 CellChangeTimes->{{3.822032611018156*^9, 3.82203262726687*^9}, {
  3.822032706976388*^9, 
  3.822032723120388*^9}},ExpressionUUID->"328c081d-24c0-4a60-aebd-\
b3890cd63ed1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Handwriting recognition", "Section",
 CellChangeTimes->{{3.821985161740225*^9, 
  3.821985166975065*^9}},ExpressionUUID->"c8917f6b-6a1e-497a-b15a-\
0427e1e9c97a"],

Cell["\<\
We now look at another example: handwriting recognition, and in particular \
reading numbers. The National Institute of Standards and Technology in the US \
have produced a set of 60,000 handwritten numbers collected from Census \
Bureau employees and high school students. Let\[CloseCurlyQuote]s first load \
the dataset (this may take a few seconds to download the first time you run \
it).\
\>", "Text",
 CellChangeTimes->{{3.822029013498911*^9, 3.822029035055365*^9}, {
  3.822032738798958*^9, 3.822032749518331*^9}, {3.822032861665357*^9, 
  3.822032884182498*^9}, {3.822032975517097*^9, 
  3.8220330119261007`*^9}},ExpressionUUID->"3885e468-b429-477d-8207-\
9041991cc8fa"],

Cell["\<\
This is a list of 60,000 entries, each with an image of a handwritten number \
and the corresponding integer label (as interpreted by a human). Take a \
random sample of 30 entries to get an idea of what they look like\
\>", "Text",
 CellChangeTimes->{{3.8220330577685127`*^9, 
  3.82203317073836*^9}},ExpressionUUID->"77564320-aac7-4fe5-8f92-\
d440acf89c39"],

Cell["Group the entries by the number they represent", "Text",
 CellChangeTimes->{{3.8220332842768097`*^9, 
  3.8220332908888597`*^9}},ExpressionUUID->"3214cc16-f618-4609-a695-\
435f0628a557"],

Cell["We will just work with the zeros and ones", "Text",
 CellChangeTimes->{{3.822033844510476*^9, 
  3.822033854914041*^9}},ExpressionUUID->"bc99a32a-5644-41e6-adee-\
c0ab8a8a8d9e"],

Cell["\<\
If we think of each 28 x 28 image as a 784 dimensional vector, then we can \
consider this as a set of 12,665 samples in a 784 dimensional vector space. A \
random vector in that space won\[CloseCurlyQuote]t look like much, but the \
12,665 samples are special as they represent important \
\[OpenCurlyDoubleQuote]directions\[CloseCurlyDoubleQuote] in this space.\
\>", "Text",
 CellChangeTimes->{{3.8220339465872297`*^9, 3.822034045970973*^9}, {
  3.822034206182135*^9, 
  3.82203421517177*^9}},ExpressionUUID->"9c931891-2f40-4d04-8347-\
bac4654bcd5f"],

Cell["\<\
Let\[CloseCurlyQuote]s see if PCA will allow us to identify the important \
\[OpenCurlyDoubleQuote]directions\[CloseCurlyDoubleQuote] corresponding to \
zeros and ones, and even to differentiate between them. First, let\
\[CloseCurlyQuote]s convert the images to vectors of numbers:\
\>", "Text",
 CellChangeTimes->{{3.822034103846882*^9, 3.822034145617293*^9}, {
  3.822034204498136*^9, 3.822034250339089*^9}, {3.822034284771891*^9, 
  3.822034300001247*^9}},ExpressionUUID->"b1e1e1cd-8c4e-45c3-8230-\
00b8fb25b615"],

Cell["\<\
Now that we have a matrix, we can use PCA to reduce the 784 dimensional \
vectors to just the two most important ones\
\>", "Text",
 CellChangeTimes->{{3.822034898781403*^9, 
  3.822034927819832*^9}},ExpressionUUID->"4ae13b15-ade7-4856-a14b-\
119b9900d6cf"],

Cell["\<\
Now we map our dimension reduction projection function over all of the images \
in our training set\
\>", "Text",
 CellChangeTimes->{{3.822034864953619*^9, 3.822034882829431*^9}, {
  3.822034950832604*^9, 
  3.822034952125383*^9}},ExpressionUUID->"7b6d6713-05c2-44c5-8059-\
f72b253dfa8f"],

Cell["\<\
If we now visualise all of those samples on our two-dimensional space, we can \
quite clearly distinguish between zeros and ones:\
\>", "Text",
 CellChangeTimes->{{3.822035019005986*^9, 
  3.822035041884879*^9}},ExpressionUUID->"d246499a-61cf-4714-8a53-\
a897dd4e5d06"],

Cell["\<\
That\[CloseCurlyQuote]s all well and good, but it could be that we have just \
trained our model to understand the images in the training dataset we used. \
What if we were to throw a new, previously unseen image at it? The MNIST \
dataset is separated into training and testing datasets for exactly this \
purpose. Let\[CloseCurlyQuote]s load the test data and see how that fares\
\>", "Text",
 CellChangeTimes->{{3.82203506286215*^9, 
  3.822035160758116*^9}},ExpressionUUID->"50f880f7-6776-417e-bf9c-\
c014e4eb882e"],

Cell["\<\
If we now visualise all of those samples on our two-dimensional space, we can \
quite clearly distinguish between zeros and ones:\
\>", "Text",
 CellChangeTimes->{{3.822035019005986*^9, 
  3.822035041884879*^9}},ExpressionUUID->"d492e42f-3f59-48ff-801c-\
5b64b8458865"],

Cell["\<\
We can also reconstruct what our model thinks a zero and a one look like:\
\>", "Text",
 CellChangeTimes->{{3.822036374555936*^9, 
  3.822036396134006*^9}},ExpressionUUID->"32299fd2-40b3-4170-889c-\
83b99cb84c4f"],

Cell["\<\
And we can even use it to fill in missing data, as we did in the iris case:\
\>", "Text",
 CellChangeTimes->{{3.822036399949534*^9, 
  3.822036412391017*^9}},ExpressionUUID->"123254fd-08ec-48ce-bddd-\
63ccf3e9fa10"]
}, Open  ]]
},
WindowSize->{682, 676},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
Magnification:>1. Inherited,
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"cf76fbb4-ce6f-4864-abff-cd231cb58e58"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 226, 4, 67, "Section",ExpressionUUID->"71f30d7c-0d3d-4783-9b7b-e231f4081234"],
Cell[809, 28, 464, 9, 78, "Text",ExpressionUUID->"13af3e83-451e-4a4e-88d7-1000ad6fc587"],
Cell[1276, 39, 226, 4, 28, "Input",ExpressionUUID->"ed29506d-fec4-4f3f-bd3f-1709a8e561a7"],
Cell[1505, 45, 710, 18, 48, "Input",ExpressionUUID->"c9dea3d4-7b2a-474c-b9e2-21fb21f1b9d3"],
Cell[CellGroupData[{
Cell[2240, 67, 537, 13, 28, "Input",ExpressionUUID->"c4d95b9a-67d7-4457-8b08-002fc76bb4eb"],
Cell[2780, 82, 16988, 297, 247, "Output",ExpressionUUID->"f14239c2-2e53-4e27-8685-938c03423d58"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19805, 384, 215, 3, 28, "Input",ExpressionUUID->"ae15de80-9508-4bd2-9843-1a1af2d779bb"],
Cell[20023, 389, 221, 4, 32, "Output",ExpressionUUID->"4231b2f9-d59f-4564-8492-18532766975c"]
}, Open  ]],
Cell[20259, 396, 638, 11, 100, "Text",ExpressionUUID->"bc293daf-5d4d-4a94-acf7-b496d1b1e65c"],
Cell[20900, 409, 393, 8, 34, "Text",ExpressionUUID->"b6b26fe8-754b-4b3b-baf8-0a7a58ef3b15"],
Cell[21296, 419, 338, 7, 28, "Input",ExpressionUUID->"b70c49d5-5e68-4ac8-896f-b17e2eea25fc"],
Cell[CellGroupData[{
Cell[21659, 430, 221, 3, 28, "Input",ExpressionUUID->"8e3427ed-217b-4304-8ceb-5dd7871f3756"],
Cell[21883, 435, 16414, 285, 240, "Output",ExpressionUUID->"0e25f90e-9792-4003-8360-dc0fd3c5f3b9"]
}, Open  ]],
Cell[38312, 723, 191, 3, 34, "Text",ExpressionUUID->"a30f84de-ae8b-4c7b-97de-c819284bd632"],
Cell[38506, 728, 369, 8, 28, "Input",ExpressionUUID->"08532ed9-db18-4496-8c53-93894f036ec1"],
Cell[CellGroupData[{
Cell[38900, 740, 261, 4, 28, "Input",ExpressionUUID->"1dbef4aa-ee9c-43c3-81d8-94c79c016ebf"],
Cell[39164, 746, 231, 4, 32, "Output",ExpressionUUID->"e91fa9e8-0bce-4e50-bc82-7c31b98554dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39432, 755, 210, 3, 28, "Input",ExpressionUUID->"c60b45c3-3efc-4314-869d-cd956b93477c"],
Cell[39645, 760, 199, 4, 32, "Output",ExpressionUUID->"c07358b6-b213-45e1-a8d6-0b541c8baa23"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39881, 769, 226, 3, 28, "Input",ExpressionUUID->"40c2256c-3c84-4160-91dd-29eb82de82f7"],
Cell[40110, 774, 197, 4, 32, "Output",ExpressionUUID->"21a0b7a9-1b5e-492b-8ec5-2baac5a5a578"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40344, 783, 210, 3, 28, "Input",ExpressionUUID->"9fd5a2da-34e0-4560-b84b-8d85a366c2bf"],
Cell[40557, 788, 194, 4, 32, "Output",ExpressionUUID->"5d293ca7-121b-4e83-900c-d58390150ea6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40788, 797, 206, 3, 28, "Input",ExpressionUUID->"82c37aa0-1f5a-4bc1-a08a-0689cc6c4530"],
Cell[40997, 802, 759, 22, 62, "Output",ExpressionUUID->"58d32be1-4c7a-4454-a5c7-03605a831191"]
}, Open  ]],
Cell[41771, 827, 330, 7, 56, "Text",ExpressionUUID->"11f67241-72b5-4653-a7d1-123a18402950"],
Cell[CellGroupData[{
Cell[42126, 838, 1550, 46, 161, "Input",ExpressionUUID->"1d6c3a0c-d031-4acf-994e-59d498ebbfaa"],
Cell[43679, 886, 16548, 288, 834, "Output",ExpressionUUID->"45cb761f-066b-4d76-94df-ab71992c2894"]
}, Open  ]],
Cell[60242, 1177, 291, 7, 34, "Text",ExpressionUUID->"41482608-8006-4da5-af59-d3259d1e2ef8"],
Cell[CellGroupData[{
Cell[60558, 1188, 491, 13, 28, "Input",ExpressionUUID->"e68a876f-55c6-4dfd-99e1-a66a90c12252"],
Cell[61052, 1203, 22421, 383, 240, "Output",ExpressionUUID->"67a27246-4a51-4041-8fa1-b1969082febc"]
}, Open  ]],
Cell[83488, 1589, 404, 8, 56, "Text",ExpressionUUID->"7ba9227e-d85d-4804-9cbc-2ad09d70cc6c"],
Cell[83895, 1599, 238, 6, 34, "Text",ExpressionUUID->"396910eb-ad24-4c15-a09a-fddeef6de798"],
Cell[CellGroupData[{
Cell[84158, 1609, 274, 5, 28, "Input",ExpressionUUID->"79bb3558-faa4-4ce6-b20a-c86051a6679f"],
Cell[84435, 1616, 22384, 383, 240, "Output",ExpressionUUID->"34b9337a-5f2d-4861-993a-daeff673a675"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106856, 2004, 170, 3, 53, "Subsection",ExpressionUUID->"69fc2dd0-745f-4871-bc9a-569458acaa80"],
Cell[107029, 2009, 193, 3, 34, "Text",ExpressionUUID->"a94eff33-39da-4dcc-9d1f-b82c2dcefac9"],
Cell[107225, 2014, 736, 20, 48, "Input",ExpressionUUID->"fc94a7a6-8dc5-4081-abc1-a34c8644a1ec"],
Cell[CellGroupData[{
Cell[107986, 2038, 218, 3, 28, "Input",ExpressionUUID->"dd9ff972-8359-4e9c-8331-d7402496f1eb"],
Cell[108207, 2043, 47035, 785, 266, 26073, 440, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"7e841091-9a93-40da-a1ca-cd960ad6f3fe"]
}, Open  ]],
Cell[155257, 2831, 251, 6, 56, "Text",ExpressionUUID->"08af93f2-c183-4d1f-b1c9-3d5bcd736d65"],
Cell[155511, 2839, 191, 3, 34, "Text",ExpressionUUID->"34a552b3-4f8c-4508-8b2f-8e2c78529bb7"],
Cell[155705, 2844, 330, 7, 56, "Text",ExpressionUUID->"f9b2a820-8642-4251-849c-81cf17d9fa5e"],
Cell[156038, 2853, 291, 7, 34, "Text",ExpressionUUID->"508072d1-43e3-49ce-9d6c-7ead8b87e770"],
Cell[156332, 2862, 404, 8, 56, "Text",ExpressionUUID->"8f635ade-7d12-4158-b8aa-ddc9a2cb0829"],
Cell[156739, 2872, 238, 6, 34, "Text",ExpressionUUID->"66f3a089-4904-4909-90ad-9febc0488d42"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[157026, 2884, 223, 4, 67, "Section",ExpressionUUID->"ca9dccf1-41f7-4cdc-b990-8b7ebf833162"],
Cell[157252, 2890, 462, 8, 56, "Text",ExpressionUUID->"bb70450c-5a46-4797-bf36-7d8933b0ab16"],
Cell[CellGroupData[{
Cell[157739, 2902, 392, 9, 28, "Input",ExpressionUUID->"bd2f1377-8fff-448b-bdc9-1a35caa6470b"],
Cell[158134, 2913, 68284, 1134, 130, "Output",ExpressionUUID->"b4311725-221e-4159-a9f5-d3888036aa4c"]
}, Open  ]],
Cell[226433, 4050, 338, 7, 56, "Text",ExpressionUUID->"43058145-d45f-4e6b-b311-08fa651cd2f1"],
Cell[226774, 4059, 400, 9, 28, "Input",ExpressionUUID->"e240daf0-0893-44b1-84f6-a62b6ec8c06f"],
Cell[227177, 4070, 222, 4, 28, "Input",ExpressionUUID->"66b9de6a-8233-425e-ad10-14911b1d6dc5"],
Cell[227402, 4076, 196, 3, 34, "Text",ExpressionUUID->"96cdb699-bcd1-411f-9285-b738bba0dff8"],
Cell[CellGroupData[{
Cell[227623, 4083, 310, 6, 28, "Input",ExpressionUUID->"5f1c85b2-6a65-4406-93d1-8daf3dfdc7fd"],
Cell[227936, 4091, 14967, 316, 983, "Output",ExpressionUUID->"d43e2a3b-d78b-45ce-8bb0-b7e3fa024a27"]
}, Open  ]],
Cell[242918, 4410, 407, 8, 78, "Text",ExpressionUUID->"7b29358f-af96-4a22-8bb7-9cdf1aa87643"],
Cell[CellGroupData[{
Cell[243350, 4422, 382, 9, 28, "Input",ExpressionUUID->"eb10c1ed-9df4-46ab-af10-6b57a658cc73"],
Cell[243735, 4433, 6268, 114, 315, "Output",ExpressionUUID->"e9bbe7d5-fa33-47f1-a33e-2b75171dffb0"]
}, Open  ]],
Cell[250018, 4550, 857, 14, 188, "Text",ExpressionUUID->"21e0cb44-fac9-4a6a-8358-4ff2c73bbf20"],
Cell[CellGroupData[{
Cell[250900, 4568, 453, 10, 48, "Input",ExpressionUUID->"7273af53-05bf-4bfe-ba69-cd9cea18f0a3"],
Cell[251356, 4580, 14542, 290, 62, "Output",ExpressionUUID->"de8b58c8-bfb7-4ae5-92a8-db5669713efc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265935, 4875, 277, 5, 28, "Input",ExpressionUUID->"118439d8-9c4a-4561-b4c1-2518144258c9"],
Cell[266215, 4882, 228, 4, 32, "Output",ExpressionUUID->"a8112af5-d7da-4b33-aba6-327bb67e4058"]
}, Open  ]],
Cell[CellGroupData[{
Cell[266480, 4891, 311, 6, 28, "Input",ExpressionUUID->"781cae23-d726-4d6b-8c4d-941d7c4ba289"],
Cell[266794, 4899, 236, 5, 32, "Output",ExpressionUUID->"55134735-4c53-4afe-b763-581e31e49bb3"]
}, Open  ]],
Cell[267045, 4907, 429, 8, 78, "Text",ExpressionUUID->"ffa87055-2228-4433-83b7-9d4ea8d50eaf"],
Cell[267477, 4917, 280, 5, 28, "Input",ExpressionUUID->"b5b77a34-b0ff-4553-adf5-379c07ade78f"],
Cell[267760, 4924, 260, 6, 56, "Text",ExpressionUUID->"5ec87d40-bfd2-4a87-9ad1-4c3b80edc70e"],
Cell[CellGroupData[{
Cell[268045, 4934, 221, 3, 28, "Input",ExpressionUUID->"9f3f94fe-0d6d-46df-9427-1e4fb296eff3"],
Cell[268269, 4939, 19629, 405, 242, "Output",ExpressionUUID->"79fc37a1-dfc0-4bde-9ca4-95a0a822ca40"]
}, Open  ]],
Cell[287913, 5347, 696, 11, 100, "Text",ExpressionUUID->"66290fcf-5470-4dc2-a8a7-f8c298f121e1"],
Cell[288612, 5360, 193, 3, 34, "Text",ExpressionUUID->"8b968971-c488-4ec3-b76b-5c81f91903db"],
Cell[288808, 5365, 627, 11, 78, "Text",ExpressionUUID->"8a701d98-f6f5-45f7-bfdf-f56a43d7a158"],
Cell[289438, 5378, 268, 6, 56, "Text",ExpressionUUID->"8132d46f-5826-4be9-a2fe-d58bda9bc7fa"],
Cell[289709, 5386, 223, 4, 34, "Text",ExpressionUUID->"5df37c7b-2870-4e93-91bf-e90f2f33e164"],
Cell[289935, 5392, 289, 6, 56, "Text",ExpressionUUID->"b81abec2-d724-4338-8f18-57aa9ba023b0"],
Cell[290227, 5400, 202, 3, 34, "Text",ExpressionUUID->"0df6ed88-c985-47c1-94e5-294a92a2e8e6"],
Cell[290432, 5405, 290, 7, 34, "Text",ExpressionUUID->"b50624bb-f9a5-4e83-acf4-7b784f5d5ff3"],
Cell[290725, 5414, 262, 6, 56, "Text",ExpressionUUID->"2481a076-d59d-434e-b1c9-f6435968604a"],
Cell[290990, 5422, 338, 7, 56, "Text",ExpressionUUID->"328c081d-24c0-4a60-aebd-b3890cd63ed1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[291365, 5434, 168, 3, 67, "Section",ExpressionUUID->"c8917f6b-6a1e-497a-b15a-0427e1e9c97a"],
Cell[291536, 5439, 688, 12, 122, "Text",ExpressionUUID->"3885e468-b429-477d-8207-9041991cc8fa"],
Cell[292227, 5453, 369, 7, 78, "Text",ExpressionUUID->"77564320-aac7-4fe5-8f92-d440acf89c39"],
Cell[292599, 5462, 192, 3, 34, "Text",ExpressionUUID->"3214cc16-f618-4609-a695-435f0628a557"],
Cell[292794, 5467, 183, 3, 34, "Text",ExpressionUUID->"bc99a32a-5644-41e6-adee-c0ab8a8a8d9e"],
Cell[292980, 5472, 563, 10, 100, "Text",ExpressionUUID->"9c931891-2f40-4d04-8347-bac4654bcd5f"],
Cell[293546, 5484, 527, 9, 78, "Text",ExpressionUUID->"b1e1e1cd-8c4e-45c3-8230-00b8fb25b615"],
Cell[294076, 5495, 267, 6, 56, "Text",ExpressionUUID->"4ae13b15-ade7-4856-a14b-119b9900d6cf"],
Cell[294346, 5503, 298, 7, 56, "Text",ExpressionUUID->"7b6d6713-05c2-44c5-8059-f72b253dfa8f"],
Cell[294647, 5512, 279, 6, 56, "Text",ExpressionUUID->"d246499a-61cf-4714-8a53-a897dd4e5d06"],
Cell[294929, 5520, 529, 9, 100, "Text",ExpressionUUID->"50f880f7-6776-417e-bf9c-c014e4eb882e"],
Cell[295461, 5531, 279, 6, 56, "Text",ExpressionUUID->"d492e42f-3f59-48ff-801c-5b64b8458865"],
Cell[295743, 5539, 223, 5, 35, "Text",ExpressionUUID->"32299fd2-40b3-4170-889c-83b99cb84c4f"],
Cell[295969, 5546, 225, 5, 35, "Text",ExpressionUUID->"123254fd-08ec-48ce-bddd-63ccf3e9fa10"]
}, Open  ]]
}
]
*)

